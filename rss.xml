<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Rust Game Development Working Group</title>
        <link>https://rust-gamedev.github.io/</link>
        <description>Stay up to date with the progress and recent developments in the Rust Game Development Working Group.</description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https://rust-gamedev.github.io/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Thu, 05 Mar 2020 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>This Month in Rust GameDev #7 - February 2020</title>
                <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
                <link>https://rust-gamedev.github.io/posts/newsletter-007/</link>
                <guid>https://rust-gamedev.github.io/posts/newsletter-007/</guid>
                <description>&lt;!-- markdownlint-disable no-trailing-punctuation --&gt;
&lt;p&gt;Welcome to the seventh issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;ecosystem-survey-results&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;#survey-from-the-rust-gamedev-working-group-clipboard&quot;&gt;Ecosystem Survey Results&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecosystem-survey-results&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;survey-thanks.png&quot; alt=&quot;Thanks cloud: Amethyst, ggez, gfx-rs, specs, serde and many other projects&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;survey-01&quot;&gt;results&lt;&#x2F;a&gt; of the Rust GameDev &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;#survey-from-the-rust-gamedev-working-group-clipboard&quot;&gt;ecosystem survey&lt;&#x2F;a&gt;
were published.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;After an unfortunate delay, we can finally present the results.
We received a whopping 403 responses!
This trove of valuable feedback will inform the WG&#x27;s roadmap for 2020.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ezrk0y&#x2F;rust_game_development_ecosystem_survey&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ezrk5o&#x2F;rust_game_development_ecosystem_survey&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;are-we-game-yet-updates&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arewegameyet.com&#x2F;&quot;&gt;Are We Game Yet?&lt;&#x2F;a&gt; Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#are-we-game-yet-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arewegameyet.com&#x2F;&quot;&gt;Are We Game Yet?&lt;&#x2F;a&gt; is a website cataloguing the Rust gamedev ecosystem, with hundreds of links to crates, games and helpful resources.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arewegameyet.com&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;awgy.png&quot; alt=&quot;Are We Game Yet? homepage&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month, it received some major updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;All of the site&#x27;s data files have been unified into a consistent TOML schema, making it easier to add new links.&lt;&#x2F;li&gt;
&lt;li&gt;Categories have been added for games and resources, and you can now add an item to multiple categories without duplicating the data.&lt;&#x2F;li&gt;
&lt;li&gt;Page load times have been reduced (especially on the homepage).&lt;&#x2F;li&gt;
&lt;li&gt;The styling has been improved to make the site look better on mobile, and to resolve some accessibility issues.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;210&quot;&gt;Ownership was also recently transferred across to the gamedev working group&lt;&#x2F;a&gt;, to allow for more people to help with maintainance.&lt;&#x2F;p&gt;
&lt;p&gt;There&#x27;s never been a better time to add your projects to the site, so &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet#contribute&quot;&gt;please come and contribute&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;new-rust-gamedev-discord-server&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;New Rust GameDev Discord Server&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#new-rust-gamedev-discord-server&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;discord-invite.png&quot; alt=&quot;Invitation widget: 243 members total, 98 online&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A new Discord server dedicated to Rust GameDev was started
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dasifefe&quot;&gt;@dasifefe&lt;&#x2F;a&gt; this month:
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;yNtPTb2&quot;&gt;&lt;strong&gt;invitation link&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Besides talking about Rust, it&#x27;s a place that could be used to show your
work-in-progress, art (visual or audio), discuss game design, etc.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, in case you didn&#x27;t know, there is a quite active &amp;quot;games-and-graphics&amp;quot;
channel on the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;6Zvghp&quot;&gt;community-run Discord server&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rusttallinn&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RustTallinn&quot;&gt;RustTallinn&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusttallinn&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;tallinn.jpeg&quot; alt=&quot;Tallin&#x27;s old town&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt; - one of the developers behind &lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1224404367723454478&quot;&gt;is planning to organize&lt;&#x2F;a&gt; the first (and hopefully one of many)
Rust Hack&#x27;n&#x27;Learn meetup in Tallinn on March 13.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Hack&#x27;N&#x27;Learn is an event where we get together and work on personal
(or open-source) projects on our own computers.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;If you&#x27;re interested, visit &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tallinn.rs&#x2F;events&#x2F;2020-03-hacknlearn&#x2F;&quot;&gt;tallinn.rs&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; and follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RustTallinn&quot;&gt;@RustTallinn&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rusty-shooter&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-shooter&quot;&gt;Rusty Shooter&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rusty-shooter&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;rusty-shooter-in-game.jpg&quot; alt=&quot;Rusty Shooter in-game screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rusty-shooter&quot;&gt;Rusty Shooter&lt;&#x2F;a&gt; is a Quake3-like first-person shooter written in Rust using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Common FPS elements: bots, items, weapons;&lt;&#x2F;li&gt;
&lt;li&gt;Single game mode - deathmatch;&lt;&#x2F;li&gt;
&lt;li&gt;More or less modern graphics (shadows, deferred shading, particle systems etc.);&lt;&#x2F;li&gt;
&lt;li&gt;Fully animated bots using animation blending state machines;&lt;&#x2F;li&gt;
&lt;li&gt;Single map - something like legendary Q3DM6;&lt;&#x2F;li&gt;
&lt;li&gt;Path finding using navmesh;&lt;&#x2F;li&gt;
&lt;li&gt;Save&#x2F;load functionality;&lt;&#x2F;li&gt;
&lt;li&gt;GUI: main menu, options, HUD, leader board (using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-ui&quot;&gt;rg3d-ui library&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;Binaural sound (using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-sound&quot;&gt;rg3d-sound library&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Small gameplay video (work-in-progress):
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=UDn8ymyXPcI&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;rusty-shooter-youtube.PNG&quot; alt=&quot;Rusty Shooter game&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;colony-genesis&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.itch.io&#x2F;colony&quot;&gt;Colony Genesis&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#colony-genesis&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;colony-genesis.png&quot; alt=&quot;itch.io page: ASCII art logo with an ant, game features, video and screenshots&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.rs&quot;&gt;Native Systems&lt;&#x2F;a&gt; is working on &amp;quot;Colony Genesis&amp;quot; -
an ant colony sandbox game with ASCII graphics.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Establish a new colony and help it grow or let it develop on its own.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This month an alpha version was published on itch: &lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.itch.io&#x2F;colony&quot;&gt;check it out here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;veloren1.png&quot; alt=&quot;Rolling mountain landscape&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;Rolling mountain landscape&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG inspired by Dwarf Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;At the beginning of the month, the team met for a 0.6 intro meeting. It was decided that 0.6 would focus on things for the player to do, and hence will be called &amp;quot;The Content Update&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Research has been done on multiple areas this month. One domain is level of detail, which is allowing mountains off in the distance to be rendered much faster. Another domain is server persistence. Finding a way for the server to efficiently persist player information is a large part of what is needed for The Content Update.&lt;&#x2F;p&gt;
&lt;p&gt;Here is the February changelog:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- Fixed NPCs attacking the player forever after killing them
- Extend run sfx to small animals to prevent sneak attacks by geese
- Added sfx for wielding&#x2F;unwielding weapons
- Added new orc hairstyles
- Added gamma setting
- Configurable fonts
- Translation status tracking
- Fixed &#x2F;give_exp ignoring player argument
- Allow spawning individual pet species, not just generic body kinds
- Added daily Mac builds
- Removed highlighting of non-collectible sprites
- Added zoomable and rotatable minimap
- Added rotating orientation marker to main-map
- Brighter &#x2F; higher contrast main-map
- Added music system
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=1ldHQfxCT24&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;veloren3.gif&quot; alt=&quot;veloren development&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;1 year of Veloren development. Click for the full video!&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can read more about some specific topics:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-53#0-5-release&quot;&gt;0.5 Release&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-54#0-6-intro-meeting&quot;&gt;0.6 Intro Meeting&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-54#settlements&quot;&gt;Settlements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-55#the-mac-build-situation-by-angelonfira&quot;&gt;Mac Builds&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-55#achievement-implementation-by-thedip&quot;&gt;Achievements&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-56#persistence-by-angelonfira&quot;&gt;Persistence&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;veloren2.png&quot; alt=&quot;Hanging out&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In March, there will be a heavy focus on completing level of detail work as well as persistence. Modding support will be explored further. Player achievements will be merged into the game, and we will start looking at where more content can be added.&lt;&#x2F;p&gt;
&lt;p&gt;February&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-53&quot;&gt;#53&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-54&quot;&gt;#54&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-55&quot;&gt;#55&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-56&quot;&gt;#56&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxidator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ruddle&#x2F;oxidator&quot;&gt;Oxidator&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxidator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;streamable.com&#x2F;499j0&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;oxidator-play.gif&quot; alt=&quot;Gameplay demo: two giant tank armies clashing&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;gameplay demo (35000 units)&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ruddle&#x2F;oxidator&quot;&gt;Oxidator&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ruddle&quot;&gt;@Ruddle&lt;&#x2F;a&gt; is a real-time strategy game&#x2F;engine
written with Rust and WebGPU.
It&#x27;s inspired by Total Annihilation, Supreme Commander, Spring Engine,
and Zero-k.&lt;&#x2F;p&gt;
&lt;p&gt;The project&#x27;s goal is to provide a modern, carefully crafted,
minimal and highly constrained set of tools for players&#x2F;designers
to create mods without programming knowledge.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the current features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Simulation:
working draft of flock behavior and collision detection,
basic health and damage computation,
construction and repair;&lt;&#x2F;li&gt;
&lt;li&gt;Rendering: basic display of a heightmap &amp;amp; 3D models (with instancing),
fxaa, screen-space reflections;&lt;&#x2F;li&gt;
&lt;li&gt;UI: select units (picking and rectangle selection),
move &amp;amp; build orders;&lt;&#x2F;li&gt;
&lt;li&gt;Multiplayer: working PoC localhost tcp client&#x2F;server;&lt;&#x2F;li&gt;
&lt;li&gt;Map editor: raise, lower, flatten, blur, noise pencil;&lt;&#x2F;li&gt;
&lt;li&gt;Unit editor: basic editor with joint &amp;amp; mesh selection and parameter editing
(speed, turn rate, health, etc);&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;streamable.com&#x2F;ywr44&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;oxidator-unit-editor.gif&quot; alt=&quot;Unit editor demo: move agent&#x27;s parts&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;Demo of the unit editor&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ruddle&#x2F;oxidator&#x2F;blob&#x2F;be4863e74&#x2F;etc&#x2F;map_editor.gif&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;oxidator-map-editor.gif&quot; alt=&quot;Map editor demo: use pencil tool to instantly create a lake and mountains&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;Demo of the map editor&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;univer-city-v1-0-and-open-source-release&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;gid&#x2F;103582791461907043&#x2F;announcements&#x2F;detail&#x2F;1694978169192631655&quot;&gt;Univer City v1.0 and Open Source Release&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#univer-city-v1-0-and-open-source-release&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;808160&#x2F;UniverCity&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;univer-logo.jpg&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;808160&#x2F;UniverCity&quot;&gt;UniverCity&lt;&#x2F;a&gt; is an isometric university management game:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Manage your staff, professors and students and try
and build the best UniverCity around!
Build up your UniverCity solo or against friends and build many different
types of classes whilst trying to ensure students get good grades,
or maybe just try and build the best looking UniverCity.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;gid&#x2F;103582791461907043&#x2F;announcements&#x2F;detail&#x2F;1694978169192631655&quot;&gt;v1.0 was released on Steam&lt;&#x2F;a&gt;
along with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Thinkofname&#x2F;UniverCity&quot;&gt;releasing the game&#x27;s sources under GPL-3&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This update &lt;em&gt;marks the end of development for now&lt;&#x2F;em&gt;
and adds in some basic workshop support.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;univer-city-demo.gif&quot; alt=&quot;Demo: builing a classroom&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The license is GPL-3 and the code is the same
as the version released on Steam
(the Steam version is built with the &#x27;steam&#x27; feature enabled).
Due to the GPL licensing the steamworks support is disabled
by default which breaks things like the &#x27;modding&#x27; menu and multiplayer.&lt;&#x2F;p&gt;
&lt;p&gt;The assets &lt;em&gt;are not included&lt;&#x2F;em&gt; with the release
and will have to be copied from the game on Steam.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;f5fiii&#x2F;univercity_open_source_release_university&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;everpuzzle&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Skytrias&#x2F;everpuzzle&quot;&gt;Everpuzzle&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#everpuzzle&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;everpuzzle-020-preview.gif&quot; alt=&quot;Everpuzzle preview&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Skytrias&#x2F;everpuzzle&quot;&gt;Everpuzzle&lt;&#x2F;a&gt; is a Tetris Attack like action-puzzle game written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Everpuzzle aims to become a similar game like Tetris Attack and expand on its concepts.
The project was recently rewritten with minimal dependencies to achieve small compile times and gain more control over the
underlying engine architecture.
In the past Everpuzzle was using Amethyst with ECS, however there were some issues that made development difficult.
Everpuzzle&#x27;s big goals are AI, Multiplayer and different Game modes.&lt;&#x2F;p&gt;
&lt;p&gt;Big changes coming in version 0.2, full list &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Skytrias&#x2F;everpuzzle&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;here&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Gamepad support (singleplayer)&lt;&#x2F;li&gt;
&lt;li&gt;Multiple grids&lt;&#x2F;li&gt;
&lt;li&gt;AI Bot&lt;&#x2F;li&gt;
&lt;li&gt;Better Randomization of blocks&lt;&#x2F;li&gt;
&lt;li&gt;Combos &#x2F; Chains - with Highlighting&lt;&#x2F;li&gt;
&lt;li&gt;Better animations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Skytrias&#x2F;everpuzzle&#x2F;releases&quot;&gt;Latest releases&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Video: &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=qA2zcaUVRKY&quot;&gt;Everpuzzle rewrite - Code Walkthrough (code outdated)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;antorum.jpg&quot; alt=&quot;Spider NPCs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt; is a multiplayer RPG where players build their characters and fight against the growing threats on the isle. The game server is authoritative and written in Rust, while the client is written in Unity&#x2F;C#.&lt;&#x2F;p&gt;
&lt;p&gt;This month, the focus was on cooking skill. This includes recipes and cookware. Players will need a cooking appliance, such as a stove or campfire to cook some Chonkrat Stew inside a pot. A heavy refactor to the interaction system had to be made, as well as changes to networking.&lt;&#x2F;p&gt;
&lt;p&gt;Check out te full devlog: &lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;18&quot;&gt;#18 &amp;quot;Cooking&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;scale&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#scale&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;scale.png&quot; alt=&quot;Traffic lights&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt; is a recent project about modern day society simulation from the
bottom-up by &lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;aboutme.html&quot;&gt;Uriopass&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;In February, the Inspector for specs entities was mostly finished and the
traffic simulation made great progress.
A second &lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;scale_2.html&quot;&gt;blog post&lt;&#x2F;a&gt; was released about it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;nk6F42BQllU&quot;&gt;A recent video&lt;&#x2F;a&gt; also shows different traffic features such
as traffic lights, stop signs and car AI working together.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;f1egnd&#x2F;scale_devblog_2&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ultimate-scale&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leod&#x2F;ultimate-scale&quot;&gt;Ultimate Scale&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ultimate-scale&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;ultimate_scale.png&quot; alt=&quot;Ultimate scale screenshot showing winds and blips&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leod&#x2F;ultimate-scale&quot;&gt;Ultimate Scale&lt;&#x2F;a&gt; is a puzzle game in which you build
increasingly large machines to solve increasingly difficult problems.
The game consists of wind and blips.
Wind propagates along pipes and causes blips to move.
Blips, in turn, activate blocks.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leod.github.io&#x2F;&quot;&gt;Leod&lt;&#x2F;a&gt; is currently working on the core design: How to make the game fun and
what blocks to add. He posted about their thoughts and progress on a
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;f3cll6&#x2F;ultimate_scale_counting_modulo_three&#x2F;fhhu5ol&quot;&gt;Reddit comment&lt;&#x2F;a&gt;.
Regularly, videos are posted on their
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UChSw7WP2i0GIw61FIeTeGsA&quot;&gt;youtube channel&lt;&#x2F;a&gt; showing different machines
made in game such as an &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;zmKRJAF4xcI&quot;&gt;extensible counter modulo 10&lt;&#x2F;a&gt;
and a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;IM3BRM_MZrE&quot;&gt;buffer&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A custom 3D rendering pipeline based on glium called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leod&#x2F;rendology&quot;&gt;Rendology&lt;&#x2F;a&gt; was developed
for this project. A &lt;a href=&quot;https:&#x2F;&#x2F;leod.github.io&#x2F;rust&#x2F;gamedev&#x2F;rendology&#x2F;2019&#x2F;12&#x2F;13&#x2F;introduction-to-rendology.html&quot;&gt;blog post&lt;&#x2F;a&gt; talks about its design and
relation to Ultimate Scale.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;f3cll6&#x2F;ultimate_scale_counting_modulo_three&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tennis-academy-dash&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.itch.io&#x2F;tennis-academy-dash&quot;&gt;Tennis Academy Dash&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy-dash&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;dash.gif&quot; alt=&quot;release&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Tennis academy dash is a time management game where you are the manager of a tennis academy and you need to coordinate various players to play on your courts.&lt;&#x2F;p&gt;
&lt;p&gt;The game is still a work in progress, but the demo version has been uploaded to itch.io this month, so you can go ahead and check it out! Give it a go (the build is only for mac at the moment but other platforms coming soon) and drop a comment with any feedback on &lt;a href=&quot;https:&#x2F;&#x2F;iolivia.itch.io&#x2F;tennis-academy-dash&quot;&gt;tennis-academy-dash&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dwarf-world&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dwarf.world&quot;&gt;Dwarf World&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dwarf-world&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dwarf.world&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;dwarf-world.png&quot; alt=&quot;New site with links to Twitter, Discord, and Twich&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&quot;&gt;Alexandru Ene&lt;&#x2F;a&gt; is working on a dwarf colony management game &amp;quot;Dwarf World&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;This month, the project got an official site: &lt;a href=&quot;https:&#x2F;&#x2F;dwarf.world&quot;&gt;dwarf.world&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, check out development streams:
every Sunday at 19:30 PM GMT &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;nomad_pixel&quot;&gt;on Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;lonely-star&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;17cupsofcoffee.itch.io&#x2F;lonely-star&quot;&gt;Lonely Star&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#lonely-star&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;17cupsofcoffee.itch.io&#x2F;lonely-star&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;lonely-star.png&quot; alt=&quot;Lonely Star screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Space is a lonely place, but at least you&#x27;ve got the music to keep you company.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;17cupsofcoffee.itch.io&#x2F;lonely-star&quot;&gt;Lonely Star&lt;&#x2F;a&gt; is a side-scrolling infinite runner, with simple generative music. You collect orbs and fly through rings in order to play notes and stay alive.&lt;&#x2F;p&gt;
&lt;p&gt;It was developed by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&quot;&gt;17cupsofcoffee&lt;&#x2F;a&gt;, using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; 2D game framework, for &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;weekly-game-jam-135&quot;&gt;Weekly Game Jam #135&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Tetra itself also received two small updates recently:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1217524602513055749&quot;&gt;Version 0.3.2 was released&lt;&#x2F;a&gt;, with bugfixes and some tools for simple AABB collision detection.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&#x2F;status&#x2F;1219758851416895489&quot;&gt;The Pong tutorial was updated with a new chapter&lt;&#x2F;a&gt;, showing how to use Tetra&#x27;s graphics and input APIs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;akigi.png&quot; alt=&quot;High detail terrain chunk with PRR&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;Sampling a heightmap in the vertex shader and also computing the normal, tangent and bitangent vectors in the vertex shader.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a multiplayer online world where most believe that humans are inferior.&lt;&#x2F;p&gt;
&lt;p&gt;This month saw a heavy focus on the web client. An alpha release is slated for April 9th, 2020. Lots of client refactoring was done, and experiments were run in the browser.&lt;&#x2F;p&gt;
&lt;p&gt;Some of February&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-09.html#input-event-processor-system&quot;&gt;Input Event Processor System&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-16.html#terrain-loading-and-rendering&quot;&gt;Terrain Loading and Rendering&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-16.html#user-interface-elements&quot;&gt;User Interface Elements&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-16.html#the-webgl-renderer&quot;&gt;The WebGL Renderer&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;055-2020-02-23.html#rendering-meshes&quot;&gt;Rendering Meshes&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;055-2020-02-23.html#rendering-terrain&quot;&gt;Rendering Terrain&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;February&#x27;s full devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-09.html&quot;&gt;#053&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;2020-02-16.html&quot;&gt;#054&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;february-2020&#x2F;055-2020-02-23.html&quot;&gt;#055&lt;&#x2F;a&gt;,&lt;&#x2F;p&gt;
&lt;h3 id=&quot;will&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;&quot;&gt;Will&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#will&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;will_network_play.png&quot; alt=&quot;Will Network Play Screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;&quot;&gt;Will&lt;&#x2F;a&gt; is a 2.5D moddable action &#x2F; adventure game.&lt;&#x2F;p&gt;
&lt;p&gt;This month Azriel wrote a post about how decisions were made when &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2020&#x2F;02&#x2F;29&#x2F;designing-network-play&#x2F;&quot;&gt;designing
network play&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea-s-new-trailer&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;Way of Rhea&#x27;s New Trailer&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea-s-new-trailer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;way-of-rhea.jpg&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;Way of Rhea&lt;&#x2F;a&gt; is an upcoming puzzle platformer that takes place in a world
where you can only interact with objects that match your current color.&lt;&#x2F;p&gt;
&lt;p&gt;This month, an updated trailer with new character art was released.
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;Check it out on the game&#x27;s Steam page&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;noodle-cat&quot;&gt;Noodle Cat&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#noodle-cat&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;noodle-cat.gif&quot; alt=&quot;Noodle game physics demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&quot;&gt;@Fryer00&lt;&#x2F;a&gt; tweeted a bunch of updates about their
WIP Box2D physics game prototype:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Day 45: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1225829271597395971&quot;&gt;contraction mechanic&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Day 46: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1227327016380305415&quot;&gt;turn&#x2F;flip&#x2F;swap-front-and-back movement mechanics&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Day 48: &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1232181181690654720&quot;&gt;food&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;garden-january-and-february-devlogs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt;: January and February Devlogs&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden-january-and-february-devlogs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;garden-pyramids.jpg&quot; alt=&quot;pyramid generation demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around growing realistic plants.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;january&quot;&gt;January&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;february&quot;&gt;February&lt;&#x2F;a&gt; devlogs
were posted by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt;.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🌘 Physically-based shading&lt;&#x2F;li&gt;
&lt;li&gt;🕹 3D model loading and texturing for richer environments&lt;&#x2F;li&gt;
&lt;li&gt;💦 Soil moisture content&lt;&#x2F;li&gt;
&lt;li&gt;🌠 Alpha mipmapping&lt;&#x2F;li&gt;
&lt;li&gt;and more info regarding some game mechanics as well&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;grumpy-visitors-first-update-winter-progress&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mvlabat.github.io&#x2F;2020-03-02-winter-update&#x2F;&quot;&gt;Grumpy Visitors First Update. Winter Progress&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#grumpy-visitors-first-update-winter-progress&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;grumpy_missiles.jpg&quot; alt=&quot;Magic missiles in Grumpy Visitors&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Grumpy Visitors is a top-down 2D co-op action&#x2F;arcade game highly inspired by Evil Invasion. It runs on Amethyst game engine.&lt;&#x2F;p&gt;
&lt;p&gt;This winter Grumpy Visitors received some updates with the focus on graphics and UI:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Repainting mage sprites with shaders&lt;&#x2F;li&gt;
&lt;li&gt;New missiles graphics&lt;&#x2F;li&gt;
&lt;li&gt;Monsters death animations&lt;&#x2F;li&gt;
&lt;li&gt;Modal windows for menu UI&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check them out in the &lt;a href=&quot;https:&#x2F;&#x2F;mvlabat.github.io&#x2F;2020-03-02-winter-update&#x2F;&quot;&gt;latest winter devlog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;make-china-great-again&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;globalgamejam.org&#x2F;2020&#x2F;games&#x2F;make-china-great-again-5&quot;&gt;Make China Great Again&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#make-china-great-again&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;china.png&quot; alt=&quot;cities, planes and keys&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;Turn back planes to the port, by clicking right keys to the virus beat.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;globalgamejam.org&#x2F;2020&#x2F;games&#x2F;make-china-great-again-5&quot;&gt;Make China Great Again&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;global-game-jam-2020&quot;&gt;source&lt;&#x2F;a&gt;)
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&quot;&gt;@PsichiX&lt;&#x2F;a&gt; is a GlobalGameJam game written using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;mcga.psichix.io&quot;&gt;Try it online&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pglowrpg&quot;&gt;pGLOWrpg&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pglowrpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;pglowrpg.gif&quot; alt=&quot;37 possible unique biomes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&quot;&gt;@Roal_Yr&lt;&#x2F;a&gt; tweeted a bunch of updates about their &amp;quot;pGLOWrpg&amp;quot; project:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1218940947070885888&quot;&gt;proper river attractors&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1218634118516396033&quot;&gt;floodfill and distinguished regions&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1229785132455878656&quot;&gt;extravagant dev environment&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1228659336349655042&quot;&gt;optimized pathfinding, unique regions&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1231139098288697345&quot;&gt;Reworked noise and erosion&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Roal_Yr&#x2F;status&#x2F;1231640620072128512&quot;&gt;37 possible unique biomes&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;robo-instructus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;roboinstructus.jpg&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; puzzle game -
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.23 and 1.24 versions were released&lt;&#x2F;a&gt;:
dependency updates, bugfixes and performance optimizations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;recall-singularity-february-progress&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;recalling-nov-2019-236cdf9c0a8a&quot;&gt;Recall Singularity: February Progress&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#recall-singularity-february-progress&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;recall-singularity.png&quot; alt=&quot;Harvesting and refining some Gold&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;Harvesting and refining some Gold.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;Tom Leys&lt;&#x2F;a&gt; is working on a &amp;quot;The Recall Singularity&amp;quot; game
about designing autonomous factory ships and stations.
This month, they published a devlog post:
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;recalling-nov-2019-236cdf9c0a8a&quot;&gt;&amp;quot;Space Factory Building in Feb 2020&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Networking improvements;&lt;&#x2F;li&gt;
&lt;li&gt;Godot-Rust interaction improvements;&lt;&#x2F;li&gt;
&lt;li&gt;Players can now control their ships and create new ones;&lt;&#x2F;li&gt;
&lt;li&gt;Top-down view and flying HUD;&lt;&#x2F;li&gt;
&lt;li&gt;Asteroids procgen.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, the post gives an overview of the project&#x27;s history,
talks about community building, and overcoming personal challenges.&lt;&#x2F;p&gt;
&lt;p&gt;Check out stream highlights on &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UCzgUlowiaKXJiNIAi0c9Qsg&#x2F;videos&quot;&gt;Tom&#x27;s YouTube channel&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;f9m00v&#x2F;space_factory_game_in_rust_godot_the_recall&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;for-the-quest&quot;&gt;For the Quest&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#for-the-quest&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;for-quest.gif&quot; alt=&quot;walking demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&quot;&gt;@seratonik&lt;&#x2F;a&gt; tweeted a bunch of updates
about their &amp;quot;For the Quest&amp;quot; (working title) game project:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Switched to the &lt;code&gt;specs&lt;&#x2F;code&gt; ECS;&lt;&#x2F;li&gt;
&lt;li&gt;Added a few new object models and
an 8-direction animated sprite with idle animations;&lt;&#x2F;li&gt;
&lt;li&gt;The map renderer is now powered by a chunking system to fix clipping issues;&lt;&#x2F;li&gt;
&lt;li&gt;Added basic collision detection.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;fix-your-time-step-in-rust-and-ggez&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;joetsoi.github.io&#x2F;fix-your-timestep-rust-ggez&#x2F;&quot;&gt;Fix Your Time Step in Rust and GGEZ&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#fix-your-time-step-in-rust-and-ggez&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;joetsoi.github.io&#x2F;fix-your-timestep-rust-ggez&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;fyt-ggez.gif&quot; alt=&quot;Demonstration of interpolation&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;joetsoi.github.io&quot;&gt;joetsoi&lt;&#x2F;a&gt; has written &lt;a href=&quot;https:&#x2F;&#x2F;joetsoi.github.io&#x2F;fix-your-timestep-rust-ggez&#x2F;&quot;&gt;a blog post&lt;&#x2F;a&gt;, demonstrating how the concepts from the well-known &#x27;&lt;a href=&quot;https:&#x2F;&#x2F;gafferongames.com&#x2F;post&#x2F;fix_your_timestep&#x2F;&quot;&gt;Fix Your Timestep&lt;&#x2F;a&gt;&#x27; article can be applied when making games with Rust and GGEZ.&lt;&#x2F;p&gt;
&lt;p&gt;The examples are very well explained, and can easily be translated to other engines, so it&#x27;s worth checking out even if you&#x27;re not a GGEZ user!&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-rustsim-9-nov-2019-to-feb-2020&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustsim.org&#x2F;blog&#x2F;2020&#x2F;03&#x2F;01&#x2F;this-month-in-rustsim&quot;&gt;This Month in RustSim #9 (Nov 2019 to Feb 2020)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-rustsim-9-nov-2019-to-feb-2020&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;logo_salva_full.svg&quot; alt=&quot;Salva logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Main updates:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;New pressure resolution methods.&lt;&#x2F;li&gt;
&lt;li&gt;Viscosity, surface tension, and elasticity can now be simulated.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to remove fluids&#x2F;boundaries&#x2F;collider couplings after their addition.&lt;&#x2F;li&gt;
&lt;li&gt;Ability to add particles to a fluid that has already been created.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Watch a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=NBoSEanWHE4&quot;&gt;&amp;quot;Salva 0.2: DFSPH, viscosity, surface tension, and elasticity&amp;quot;&lt;&#x2F;a&gt;
demo video.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustsim.org&#x2F;blog&#x2F;2020&#x2F;03&#x2F;01&#x2F;this-month-in-rustsim&quot;&gt;Read the full devlog here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fcyp7c&#x2F;this_month_in_rustsim_9_november_february_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;savefile-0-6-1&quot;&gt;savefile 0.6.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#savefile-0-6-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;savefile&quot;&gt;savefile&lt;&#x2F;a&gt; is a serialization crate used to effortlessly serialize rust crates
and enums into a binary format. Anything implementing the &lt;code&gt;Write&lt;&#x2F;code&gt; trait can
be serialized and deserialized. First-class versioning support and introspection
are some other features available.&lt;&#x2F;p&gt;
&lt;p&gt;Version 0.6.1 includes a fix and should be updated to if compilation using
the savefile-derive crate produces a &amp;quot;&lt;code&gt;SaveFileError&lt;&#x2F;code&gt; not found&amp;quot; compiler error.&lt;&#x2F;p&gt;
&lt;p&gt;For details, see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;avl&#x2F;savefile&quot;&gt;github page&lt;&#x2F;a&gt; or the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;savefile&#x2F;0.6.1&#x2F;savefile&quot;&gt;savefile documentation&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;specs-0-16&quot;&gt;specs 0.16&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#specs-0-16&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt; is an entity-component system (ECS) library, designed for high
performance. This update increases the MSRV to 1.38 and removes the &lt;code&gt;&amp;quot;nightly&amp;quot;&lt;&#x2F;code&gt;
feature.&lt;&#x2F;p&gt;
&lt;p&gt;In this version, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shred&#x2F;issues&#x2F;182&quot;&gt;panic message has been improved&lt;&#x2F;a&gt; to include
the name of the type that is accessed on stable Rust, as well as suggestions for
how to fix the issue. Prior to &lt;code&gt;specs 0.16&lt;&#x2F;code&gt;, retrieving a resource that had not
been added to the &lt;code&gt;World&lt;&#x2F;code&gt; panics with an obscure &lt;em&gt;&amp;quot;resource not found&amp;quot;&lt;&#x2F;em&gt; message,
and the &lt;code&gt;&amp;quot;nightly&amp;quot;&lt;&#x2F;code&gt; feature was necessary to discover what resource that is.&lt;&#x2F;p&gt;
&lt;p&gt;In addition, the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&#x2F;issues&#x2F;673&quot;&gt;&lt;code&gt;Send&lt;&#x2F;code&gt; and &lt;code&gt;Sync&lt;&#x2F;code&gt; trait constraints are
removed&lt;&#x2F;a&gt; from resources and &lt;code&gt;Component&lt;&#x2F;code&gt;s when the
&lt;code&gt;&amp;quot;parallel&amp;quot;&lt;&#x2F;code&gt; feature is disabled -- enabling types such as
&lt;code&gt;wasm_bindgen::JsValue&lt;&#x2F;code&gt; to be used with non-parallel &lt;code&gt;specs&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;For more details, please see the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&#x2F;blob&#x2F;0.16.1&#x2F;CHANGELOG.md#0161-2020-02-18&quot;&gt;&lt;code&gt;specs&lt;&#x2F;code&gt; changelog&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;riven&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MingweiSamuel&#x2F;Riven&quot;&gt;Riven&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#riven&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;riot-api.jpg&quot; alt=&quot;Riot Games API logo: steampunk&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MingweiSamuel&#x2F;Riven&quot;&gt;riven&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;developer.riotgames.com&#x2F;&quot;&gt;Riot API&lt;&#x2F;a&gt; library for Rust.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Riven handles rate limits and large requests with ease.
Data structs and endpoints are automatically generated from the
&lt;a href=&quot;https:&#x2F;&#x2F;developer.riotgames.com&#x2F;api-methods&quot;&gt;Riot API Reference&lt;&#x2F;a&gt; (&lt;a href=&quot;http:&#x2F;&#x2F;www.mingweisamuel.com&#x2F;riotapi-schema&#x2F;tool&quot;&gt;Swagger&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;exj48k&#x2F;riven_100_my_rust_lib_for_the_riot_games_league&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;weasel&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&#x2F;weasel&quot;&gt;weasel&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#weasel&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&#x2F;weasel&quot;&gt;weasel&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&quot;&gt;@Trisfald&lt;&#x2F;a&gt; is a customizable battle system for turn-based games.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Simple way to define the combat&#x27;s rules,
taking advantage of Rust&#x27;s strong type system.&lt;&#x2F;li&gt;
&lt;li&gt;Battle events are collected into a timeline to support save and restore,
replays, and more.&lt;&#x2F;li&gt;
&lt;li&gt;Client&#x2F;server architecture; all battle events are verified by the server.&lt;&#x2F;li&gt;
&lt;li&gt;Minimal performance overhead.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The idea behind this crate is to provide a structured
and safe framework to manage the game state.
Users can create a battle and evolve it by applying events.
Then, weasel takes care of keeping a historical timeline.
It also help with serializing&#x2F;deserializing save files
or sharing and verifying events between clients and server.
The game logic is defined through traits, which is nice because
it can benefit from Rust&#x27;s type system and compile time checks.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Check out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Trisfald&#x2F;weasel&#x2F;tree&#x2F;master&#x2F;examples&quot;&gt;examples&lt;&#x2F;a&gt; to see how it works in practice.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;shipyard-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt; v0.3&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#shipyard-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;shipyard&quot;&gt;Shipyard&lt;&#x2F;a&gt; is an ECS library built on top of sparse sets.&lt;&#x2F;p&gt;
&lt;p&gt;Some of &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fbo8wf&#x2F;shipyard_03_release&quot;&gt;the v0.3 updates&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;There&#x27;s now a &lt;a href=&quot;https:&#x2F;&#x2F;leudz.github.io&#x2F;shipyard&#x2F;book&quot;&gt;User guide&lt;&#x2F;a&gt; to explain what can be done
and how;&lt;&#x2F;li&gt;
&lt;li&gt;No need to register components anymore,
storages are now automatically created when they are first accessed;&lt;&#x2F;li&gt;
&lt;li&gt;!Send and !Sync components;&lt;&#x2F;li&gt;
&lt;li&gt;Unique components;&lt;&#x2F;li&gt;
&lt;li&gt;Components sorting;&lt;&#x2F;li&gt;
&lt;li&gt;no_std support.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;image-v0-23&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;image-rs&#x2F;image&quot;&gt;image&lt;&#x2F;a&gt; v0.23&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#image-v0-23&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;image-rs&#x2F;image&quot;&gt;image&lt;&#x2F;a&gt; crate provides basic imaging processing functions and methods for converting to and from image formats.&lt;&#x2F;p&gt;
&lt;p&gt;Check out &lt;a href=&quot;https:&#x2F;&#x2F;blog.image-rs.org&#x2F;2020&#x2F;02&#x2F;07&#x2F;release-0.23.0.html&quot;&gt;the release blog&lt;&#x2F;a&gt; for 0.23! It comes with improvements to error handling, and the buffer and loading interfaces.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;superluminal-perf-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;embarkStudios&#x2F;superluminal-perf-rs&quot;&gt;superluminal-perf-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#superluminal-perf-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;superlumunal.png&quot; alt=&quot;Logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;superluminal.eu&#x2F;&quot;&gt;Superluminal&lt;&#x2F;a&gt; is a next-generation CPU sampling profiler for C&#x2F;C++ on Windows
that has &lt;a href=&quot;https:&#x2F;&#x2F;superluminal.eu&#x2F;rust&quot;&gt;recently got an official Rust support&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;superluminal-app.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;superluminal-app.png&quot; alt=&quot;UI example&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Embark have recently open-sourced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;embarkStudios&#x2F;superluminal-perf-rs&quot;&gt;superluminal-perf-rs&lt;&#x2F;a&gt; -
a small crate that integrates with Superluminal profiler on Windows.&lt;&#x2F;p&gt;
&lt;p&gt;Example usage:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;superluminal_perf::begin_event(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;my-event&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;();
superluminal_perf::end_event();

superluminal_perf::begin_event(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;my-event2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;calc2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;();
superluminal_perf::end_event();
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;rust-on-rg-300-consoles&quot;&gt;Rust on &lt;a href=&quot;https:&#x2F;&#x2F;retrogame300.com&#x2F;products&#x2F;retro-game-300&quot;&gt;RG-300 Consoles&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-on-rg-300-consoles&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Rtf8ZEVALjQ&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;rg-300.jpeg&quot; alt=&quot;Real-world demo of using Rust on RG-300&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;fabgof&#x2F;wrote_a_rust_program_that_demonstrates_graphics&quot;&gt;@alexpdp7 shared their experience&lt;&#x2F;a&gt;
of writing an interactive application in Rust
for the retro &lt;a href=&quot;https:&#x2F;&#x2F;retrogame300.com&#x2F;products&#x2F;retro-game-300&quot;&gt;RG-300&lt;&#x2F;a&gt; console.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The process is complex for a lot of reasons:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cross-compiling for MIPS is tough &amp;lt;...&amp;gt;&lt;&#x2F;li&gt;
&lt;li&gt;Graphics is done through the Linux framebuffer &amp;lt;...&amp;gt;&lt;&#x2F;li&gt;
&lt;li&gt;Sound uses old-style Linux OSS &amp;lt;...&amp;gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;It&#x27;s a bit clunky, but it works!
There are quite a few devices with very similar hardware
this should work with.
It should be possible to make simple games for such devices,
which I find particularly motivating :)&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can find a working example that does graphics, sound and controls
with some explanations at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;alexpdp7&#x2F;retrofw2-rust&quot;&gt;alexpdp7&#x2F;retrofw2-rust&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=Rtf8ZEVALjQ&quot;&gt;See it in action here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;crow-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;crow&quot;&gt;crow&lt;&#x2F;a&gt; v0.3&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crow-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;crow&quot;&gt;crow&lt;&#x2F;a&gt; is a pixel perfect 2D rendering engine based on OpenGL.
It is designed to be easy to use while still allowing
for nearly everything one might want while using pixel art.&lt;&#x2F;p&gt;
&lt;p&gt;A showcase game is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lcnr&#x2F;akari&quot;&gt;being developed&lt;&#x2F;a&gt; with crow.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;crow-akari.png&quot; alt=&quot;Akari WIP screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad-rust-2d-engine-2020-roadmap&quot;&gt;miniquad: &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;posts&#x2F;34230612&quot;&gt;&amp;quot;Rust 2D Engine 2020 Roadmap&amp;quot;&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad-rust-2d-engine-2020-roadmap&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;miniquad-sample.png&quot; alt=&quot;mainloop async&#x2F;await experiment in macroquad&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;mainloop async&#x2F;await experiment in macroquad&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; is a safe cross-platform rendering library
focused on portability and low-end platforms support.&lt;&#x2F;p&gt;
&lt;p&gt;This month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;miniquad and related crates set up yearly goals:
&lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;posts&#x2F;34230612&quot;&gt;&amp;quot;Rust 2D Engine 2020 Roadmap&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;A first try on the higher-level engine design was tried: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;macroquad&#x2F;blob&#x2F;126773535&#x2F;examples&#x2F;flappy_bird.rs&quot;&gt;flappy bird.rs&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&#x2F;status&#x2F;1223602773532520448&quot;&gt;miniquad was successfully built for Android&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;luminance-v0-39&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fbe3l0&#x2F;luminance039&quot;&gt;luminance v0.39&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#luminance-v0-39&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;phaazon_&quot;&gt;@phaazon&lt;&#x2F;a&gt; is a type-safe, type-level and stateless
graphics framework.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fbe3l0&#x2F;luminance039&quot;&gt;luminance v0.39 got released&lt;&#x2F;a&gt;.
Updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Remove the concept of layering in textures.
Textures’ layerings (i.e. either flat or arrayed) is now encoded directly
in the dimension of the texture.&lt;&#x2F;li&gt;
&lt;li&gt;Add support for texture arrays. They can now be passed constructed
and passed as uniforms to shader programs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;glium-v0-26&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glium&#x2F;glium&quot;&gt;glium&lt;&#x2F;a&gt; v0.26&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glium-v0-26&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glium&#x2F;glium&quot;&gt;glium&lt;&#x2F;a&gt; is an elegant and safe OpenGL wrapper.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s no longer actively developed by its original author,
but maintenance is continued by the surrounding community.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glium&#x2F;glium&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#version-0260-2020-02-09&quot;&gt;glium v0.26 was released&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Updated glutin to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;glutin&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#version-0230-2020-02-06&quot;&gt;version 0.23.0&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Removal of some unsound code that rustc warns about.&lt;&#x2F;li&gt;
&lt;li&gt;Report the precise shader stage in which a shader failed compilation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;gfx-wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;wgpu-logo.png&quot; alt=&quot;wgpu-rs logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;re some of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt; ecosystem February updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Check out a new &lt;a href=&quot;https:&#x2F;&#x2F;sotrh.github.io&#x2F;learn-wgpu&quot;&gt;&amp;quot;Lear WGPU&amp;quot; tutorial&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&quot;&gt;@kvark&lt;&#x2F;a&gt; gave a &amp;quot;Building WebGPU with Rust&amp;quot; talk at FOSDEM.
&lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2020&#x2F;schedule&#x2F;event&#x2F;rust_webgpu&quot;&gt;You can watch the recorded video here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fosdem.org&#x2F;2020&#x2F;schedule&#x2F;event&#x2F;rust_webgpu&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;wgpu-talk.png&quot; alt=&quot;A slide from the talk: &amp;quot;wgpu-rs project structure&amp;quot;&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;naga&quot;&gt;naga&lt;&#x2F;a&gt; is a new experimental shader translation library
for the needs of gfx-rs project and WebGPU.
It&#x27;s meant to provide a safe and performant way
of converting to and from &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Standard_Portable_Intermediate_Representation&quot;&gt;SPIR-V&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The abovementioned &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ruddle&#x2F;oxidator&quot;&gt;Oxidator&lt;&#x2F;a&gt; RTS game is based on wgpu.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;git.koesters.xyz&#x2F;timo&#x2F;nbodysim&quot;&gt;nbodysim&lt;&#x2F;a&gt; is a realtime 3D N-Body-Simulation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;n-body-sim.gif&quot; alt=&quot;Simple demo with two bodies&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nannou-org&#x2F;nannou&quot;&gt;nannou&lt;&#x2F;a&gt; in an open-source creative-coding toolkit for Rust.
This month its graphics backend &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nannou-org&#x2F;nannou&#x2F;pull&#x2F;452&quot;&gt;was transitioned to wgpu&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nannou-org&#x2F;nannou&#x2F;blob&#x2F;9596fd31b&#x2F;examples&#x2F;simple_draw.rs&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;nannou.gif&quot; alt=&quot;nannou demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;pull&#x2F;179&quot;&gt;An extremely helpful &lt;code&gt;vertex_attr_array&lt;&#x2F;code&gt; macro was added to wgpu&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;After &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustwasm&#x2F;wasm-bindgen&#x2F;pull&#x2F;1997&quot;&gt;the support for unstable WebIDL was added to wasm-bindgen&lt;&#x2F;a&gt;
the work on integrating web-sys into wgpu-rs has begun.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;tikan&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;tendsinmende&#x2F;tikan&quot;&gt;tikan&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tikan&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;tendsinmende&#x2F;tikan&quot;&gt;tikan&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;siebencorgie&quot;&gt;@siebencorgie&lt;&#x2F;a&gt; is a Rust&#x2F;Vulkan based 3d engine that tries
to use high-resolution voxels to real-time ray-trace the final picture.&lt;&#x2F;p&gt;
&lt;p&gt;This month a &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;98XdA3BpWZU&quot;&gt;new video was released&lt;&#x2F;a&gt;
to showcase new voxel renderer:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;98XdA3BpWZU&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;tikan-youtube.png&quot; alt=&quot;youtube screenshot: glowing spheres&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;patchwork&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RedSquirrelsNut&#x2F;patchwork&quot;&gt;Patchwork&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#patchwork&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RedSquirrelsNut&#x2F;patchwork&quot;&gt;Patchwork&lt;&#x2F;a&gt; is a convenient crate for drawing tiles from a tilesheet using a &#x27;SpriteBatch&#x27; with &lt;code&gt;ggez&lt;&#x2F;code&gt;. It is an update to the &lt;code&gt;Mosaic&lt;&#x2F;code&gt; crate by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;repnop&#x2F;mosaic&quot;&gt;Repnop&lt;&#x2F;a&gt;, which is no longer maintained.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kas-gui-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt; GUI v0.3&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#kas-gui-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;kas.png&quot; alt=&quot;KAS widgets example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kas-gui&#x2F;kas&quot;&gt;KAS&lt;&#x2F;a&gt;, the tool&lt;strong&gt;K&lt;&#x2F;strong&gt;it &lt;strong&gt;A&lt;&#x2F;strong&gt;bstraction &lt;strong&gt;S&lt;&#x2F;strong&gt;ystem, is a general-purpose GUI toolkit.&lt;&#x2F;p&gt;
&lt;p&gt;0.3 is a decent sized release, focussing primarily on drawing, themes and layouts.
Highlights include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;a new FlatTheme,&lt;&#x2F;li&gt;
&lt;li&gt;many small visual improvements,&lt;&#x2F;li&gt;
&lt;li&gt;access to medium-level and low-level drawing APIs for custom widgets,&lt;&#x2F;li&gt;
&lt;li&gt;window size limits,&lt;&#x2F;li&gt;
&lt;li&gt;and switchable themes and colour schemes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;pushrod-v0-2-27-sdl2-based-gui&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KenSuenobu&#x2F;rust-pushrod&quot;&gt;Pushrod&lt;&#x2F;a&gt; v0.2.27: SDL2-based GUI&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pushrod-v0-2-27-sdl2-based-gui&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;pushrod-layout.png&quot; alt=&quot;Layout example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KenSuenobu&#x2F;rust-pushrod&quot;&gt;Pushrod&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;KenSuenobu&quot;&gt;@KenSuenobu&lt;&#x2F;a&gt;
is a Cross Platform UI Widget Library for Rust that uses SDL2
and leans heavily towards the KISS principle.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;f1fcya&#x2F;pushrod_0227_sdl2based_gui&quot;&gt;0.2.27 was released&lt;&#x2F;a&gt;.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improved documentation &amp;amp; examples;&lt;&#x2F;li&gt;
&lt;li&gt;Tile Widget;&lt;&#x2F;li&gt;
&lt;li&gt;Tab Bar Widget.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;oxygengine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;oxygengine-dark-logo.svg&quot; alt=&quot;Oxygengine logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; got new version 0.7.0 with
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;fd7kza&#x2F;oxygengine_visual_novel_and_animation_modules_are&quot;&gt;Visual Novel and Animation&lt;&#x2F;a&gt;
modules that allows users to focus on making VN games easily, with virtually no code needed to be written - it is a groundbreaking start in developing a set of tools for the professional game developers.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;As few might notice, Oxygengine is starting to get more complex modules, there is a reason for that - this engine is made with one big goal in mind, which is: to became a tool used by professionals, giving easy way to make complex games easily, therefore the current milestone is about bringing a basic game editor with first game maker module along with blueprints-like visual scripting and animation tool - the most important tools for visual novel game designers!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;oxygengine-visual-novel-teaser.gif&quot; alt=&quot;Oxygengine Visual Novel Teaser&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can find sources of the project that shows how to use these modules in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;visual-novel-testbed&quot;&gt;engine demo projects&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Another thing that was shipped in last milestone was a module that allows to make and run your game logic designed in Blueprint-like visual scripting.
Next milestone is focused on delivering a base for professional modular game editor that will allow users to easily create a complex and animated Visual Novel games using Visual Scripting - game makers for another genres are currently in planning stage.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bracket-lib-rltk-roguelike-tutorial&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;bracket-lib (RLTK)&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bracket-lib-rltk-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;roguelike-tutorial.jpg&quot; alt=&quot;Different font makes the log easier to read&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;[The Roguelike Tutorial][roguelike-book] by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
includes more than 70 chapters now and continues to grow!&lt;&#x2F;p&gt;
&lt;p&gt;Some of February&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;C71: adds easy to use, colored, logging and an achievement counter system
to track your progress through the dungeon.&lt;&#x2F;li&gt;
&lt;li&gt;C72: 2nd layer (VGA) for the log, refactors for batched draw calls.&lt;&#x2F;li&gt;
&lt;li&gt;C73: Systems use Specs dispatch on native, and single-thread on WASM.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;bracket-lib&lt;&#x2F;a&gt; (previously &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;rltk_rs&lt;&#x2F;a&gt;) by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
is a Rust implementation of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk&quot;&gt;C++ Roguelike Toolkit&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month the project was renamed and split into many crates:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is RLTK, renamed because it is increasingly finding
usage outside of just Roguelikes.
It&#x27;s also been divided into a number of crates,
to make it easy to pick-and-choose the features you need.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rltk&lt;&#x2F;code&gt; crate wraps bracket-lib and re-exports
in the &lt;code&gt;rltk::&lt;&#x2F;code&gt; and &lt;code&gt;rltk::prelude&lt;&#x2F;code&gt; namespace.
This preserves compatibility with all existing RLTK projects.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-algorithm&lt;&#x2F;code&gt;-traits exposes the traits required
for the various algorithm systems in other crates.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-color&lt;&#x2F;code&gt; is my RGB&#x2F;HSV color management system.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-geometry&lt;&#x2F;code&gt; exposes various geometric primitives and helpers.
Supports other crates.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-noise&lt;&#x2F;code&gt; is a port of Auburn&#x27;s FastNoise to Rust.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-pathfinding&lt;&#x2F;code&gt; provides a high-performance
A* (A-Star) pathing system, as well as Dijkstra maps.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;bracket-random&lt;&#x2F;code&gt; is a dice-oriented random number generator,
including parsing of RPG-style dice strings such as 3d6+12.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;fbdg7d&#x2F;rltk_is_now_bracketlib&quot;&gt;Read the full announcement post here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;neovide&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kethku&#x2F;neovide&quot;&gt;Neovide&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#neovide&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;neovide-cursor.gif&quot; alt=&quot;Neovide Animated Cursor Example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Kethku&#x2F;neovide&quot;&gt;Neovide&lt;&#x2F;a&gt; is a frontend for neovim that brings a lot of visual niceties.
It uses vulkan and skia for rendering.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;75&quot;&gt;#75 &amp;quot;Standardised API for sharing thread pools&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;89&quot;&gt;#89 &amp;quot;Moving ecs_bench to GDWG&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;90&quot;&gt;#90 &amp;quot;Rust on Consoles&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;91&quot;&gt;#91 &amp;quot;Should the wg volunteer to maintain winapi?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&quot;&gt;rust-gamedev&#x2F;arewegameyet&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;100&quot;&gt;#100 &amp;quot;Categorise games&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;252&quot;&gt;#252 &amp;quot;Split games and resources into categories&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;261&quot;&gt;#261 &amp;quot;Make .rs domain primary?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-007&#x2F;not-cool.png&quot; alt=&quot;A screenshot of the beginning of the game&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ratys.itch.io&#x2F;its-not-cool&quot;&gt;&amp;quot;It&#x27;s Not Cool&amp;quot;&lt;&#x2F;a&gt; is a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Ludum_Dare&quot;&gt;LD42&lt;&#x2F;a&gt; turn-based strategy game
by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ratysz&quot;&gt;@Ratysz&lt;&#x2F;a&gt;.
It&#x27;s based on the GGEZ game engine.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Assume role of the mayor of a small coastal city, caught
in the middle of hilariously rapid global warming spurt.&lt;&#x2F;p&gt;
&lt;p&gt;Build a freezer for the polar bears!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ratysz&#x2F;ludumdare42&quot;&gt;The source code can be found here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;977dpc&#x2F;my_ludum_dare_42_jam_entry_is_pure_rust&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;977g2t&#x2F;my_ludum_dare_42_jam_entry_is_pure_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;fe03sb&#x2F;this_month_in_rust_gamedev_7_february_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1235645370350227456&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>This Month in Rust GameDev #6 - January 2020</title>
                <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
                <link>https://rust-gamedev.github.io/posts/newsletter-006/</link>
                <guid>https://rust-gamedev.github.io/posts/newsletter-006/</guid>
                <description>&lt;!-- markdownlint-disable no-trailing-punctuation --&gt;
&lt;p&gt;Welcome to the sixth issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;ready-at-dawn-studios-is-hiring&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;readyatdawn.com&quot;&gt;Ready at Dawn Studios&lt;&#x2F;a&gt; is Hiring&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ready-at-dawn-studios-is-hiring&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;readyatdawn.com&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;rad.png&quot; alt=&quot;Ready at Dawn logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AndreaPessino&quot;&gt;@AndreaPessino&lt;&#x2F;a&gt; have announced that &lt;a href=&quot;https:&#x2F;&#x2F;readyatdawn.com&quot;&gt;Ready At Dawn Studios&lt;&#x2F;a&gt; is hiring:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AndreaPessino&#x2F;status&#x2F;1219341435238895616&quot;&gt;contractors with preferred experience in Rust (remote)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AndreaPessino&#x2F;status&#x2F;1223023108929409024&quot;&gt;and simulation&#x2F;physics coder (on-site)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;See the linked Twitter threads for details.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;rustacean-station-rust-for-aaa-game-dev&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;011-jake-yoshua-stjepan&quot;&gt;Rustacean Station: Rust for AAA Game Dev&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rustacean-station-rust-for-aaa-game-dev&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;rustacean-station.jpg&quot; alt=&quot;Rustacean Station logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Ca1ne&quot;&gt;Jake Shadle&lt;&#x2F;a&gt;, a veteran of DICE&#x2F;Frostbite,
was interviewed at &lt;a href=&quot;https:&#x2F;&#x2F;barcelona.rustfest.eu&quot;&gt;RustFest 2019&lt;&#x2F;a&gt; by the &lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;011-jake-yoshua-stjepan&quot;&gt;Rustacean Station&lt;&#x2F;a&gt; podcast
on using Rust for game development at Embark Studios.
Topics&#x2F;timestamps:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;[01:25] What is yours (and Embark’s) background in game development?&lt;&#x2F;li&gt;
&lt;li&gt;[02:14] What is the relevance of the Frostbite engine
and what is your experience with it?&lt;&#x2F;li&gt;
&lt;li&gt;[04:15] What makes you think that Rust as a language is suitable
for game development?&lt;&#x2F;li&gt;
&lt;li&gt;[06:13] How is parallelism employed in a game engine
on the scale of Frostbite?&lt;&#x2F;li&gt;
&lt;li&gt;[07:07] Where is the Rust library ecosystem lacking for your use case,
and what crates are you making use of?&lt;&#x2F;li&gt;
&lt;li&gt;[11:13] Why is Embark interested in WebAssembly?&lt;&#x2F;li&gt;
&lt;li&gt;[14:20] How can someone get in touch or learn more about Embark?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustacean-station.org&#x2F;episode&#x2F;011-jake-yoshua-stjepan&quot;&gt;Listen the eposide here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;veloren1.png&quot; alt=&quot;Morning landscape&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;^ Morning landscape&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG
inspired by Dwarf Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;At the end of January, Veloren 0.5 was released!
Most of January was spent on preparing for this.
It was also the first anniversary of This Week in Veloren!
There has been a devblog each week since the end of January last year.
Here are some of the big changes in this release:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;- Added initial region system implementation
- Added moon and clouds
- Added proper SFX system
- Added changelog
- Added Scrolling Combat Text (SCT) &amp;amp; Settings for it
- Added options to disable clouds and to use cheaper water rendering
- Added client-side character saving
- Added a localization system to provide multi-language support to voxygen
- Added fullscreen and window size to settings so that they can be persisted
- Added coverage based scaling for pixel art 28 new mobs
- Added waypoints
- Added pathfinding to NPCs
- Overhauled NPC AI
- Pets now attack enemies and defend their owners
- Added collars to tame wild animals
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can read more about some specific topics:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-49#how-to-effectively-write-a-proposal-for-the-game-design-team-by-silentium&quot;&gt;How to Effectively Write a Proposal for the Game Design Team&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-50#iterator-problems-with-angelonfira-and-sharp&quot;&gt;Iterator Problems&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-50#erosion-worldgen-updates-by-sharp&quot;&gt;Erosion Worldgen Updates&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-52#airshipper-progress-by-songtronix&quot;&gt;Airshipper Progress&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-52#veloren-for-all-of-us-localization-system-by-ender&quot;&gt;Veloren For All Of Us: Localization System&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-52#1-year-of-this-week-in-veloren-by-angelonfira&quot;&gt;1 Year of This Week in Veloren&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;veloren2.png&quot; alt=&quot;Sitting on the edge&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In February, the developers hope to push forward to 0.6
with a strong intro meeting.
Authentication is slated to be released, as well as the Airshipper GUI beta.
Hopefully, we also see controller support and improvements
to the sound system as well.&lt;&#x2F;p&gt;
&lt;p&gt;January&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-49&quot;&gt;#49&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-50&quot;&gt;#50&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-51&quot;&gt;#51&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-52&quot;&gt;#52&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;physically-based-temperature-simulation-for-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&#x2F;2020&#x2F;01&#x2F;10&#x2F;Physically-based-temperature-simulation-for-games.html&quot;&gt;Physically Based Temperature Simulation For Games&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#physically-based-temperature-simulation-for-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;dwarfs.gif&quot; alt=&quot;Dwarfs, cow and campfire demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&quot;&gt;Alexandru Ene&lt;&#x2F;a&gt; is working on a dwarf colony management game.
This month, a
&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&#x2F;2020&#x2F;01&#x2F;10&#x2F;Physically-based-temperature-simulation-for-games.html&quot;&gt;&amp;quot;Physically Based Temperature Simulation For Games&amp;quot;&lt;&#x2F;a&gt;
devlog was released:
how to adapt real-world thermodynamics formulas to a game
and why you may want to do it?&lt;&#x2F;p&gt;
&lt;h3 id=&quot;micro-entertainment-pack&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;c&#x2F;707330&#x2F;micro-entertainment-pack&quot;&gt;Micro Entertainment Pack&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#micro-entertainment-pack&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;micro-entertainment-pack.png&quot; alt=&quot;itch collection of 12 games&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;c&#x2F;707330&#x2F;micro-entertainment-pack&quot;&gt;Micro Entertainment Pack&lt;&#x2F;a&gt; is a collection of 12 tiny desktop games
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kamatsu8&quot;&gt;Liam O&#x27;Connor&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I like to watch terrible TV shows on my computer,
but often they tend to drag so I like to have something else to do
at the same time.
Thus, I developed the Micro Entertainment Pack --- fun casual games
that fit in a fraction of your screen real estate.
These games are inspired mostly by the Microsoft Plus! Entertainment packs
for Windows, but I am also throwing in some other
enjoyable titles from my days as a classic mac user.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;All games in the pack are made using Liam&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;tesserae&quot;&gt;tesserae&lt;&#x2F;a&gt; library for graphics composed
out of 8x8 2 colour tiles.
All graphics were drawn using the tesseraed editor that comes with the library.
All games use a common tileset to do all of their graphical drawing.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;liamoc&#x2F;desktop_games&quot;&gt;The source code for all games is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;scale&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#scale&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;scales.png&quot; alt=&quot;Society scales&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Uriopass&#x2F;Scale&quot;&gt;Scale&lt;&#x2F;a&gt; is a new open-source project about modern day society simulation
from the bottom-up.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Each individual has its own thought model, meaning every action
has its importance and influences the environment.
Scale is not a video game, but rather a live artwork.
The world itself won&#x27;t be generated or created by the user
but is part of the project.
That way, the focus is on the world itself and not on the tools to build it.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Also, check out
&lt;a href=&quot;http:&#x2F;&#x2F;douady.paris&#x2F;blog&#x2F;scale_1.html&quot;&gt;the first devlog about the author&#x27;s motivation and vision&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;em8zon&#x2F;introducing_scale&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;colony-genesis-ascii-ant-colony-sandbox&quot;&gt;Colony Genesis - ASCII Ant Colony Sandbox&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#colony-genesis-ascii-ant-colony-sandbox&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;colony-genesis.png&quot; alt=&quot;New colony screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nativesystems.rs&quot;&gt;Native Systems&lt;&#x2F;a&gt; is working on a &amp;quot;Colony Genesis&amp;quot; ant colony sandbox game.&lt;&#x2F;p&gt;
&lt;p&gt;Current features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Procedurally generated world&lt;&#x2F;li&gt;
&lt;li&gt;Day&#x2F;night cycle and weather&lt;&#x2F;li&gt;
&lt;li&gt;Temperature, humidity, and fluid simulation&lt;&#x2F;li&gt;
&lt;li&gt;Food sources including aphid and fungus harvesting&lt;&#x2F;li&gt;
&lt;li&gt;6 castes governing ant behavior and attributes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;streamable.com&#x2F;wv5ee&quot;&gt;Watch 5 minutes of initial gameplay here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;eow23i&#x2F;ascii_ant_colony_sandbox&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;snake-game-with-rust-javascript-and-webassembly&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-5e22b357ec7b&quot;&gt;Snake Game With Rust, JavaScript, and WebAssembly&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#snake-game-with-rust-javascript-and-webassembly&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;snake-course.gif&quot; alt=&quot;Final game demo: snake eats red dots&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;jeremylikness&quot;&gt;@jeremylikness&lt;&#x2F;a&gt; started publishing a course
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-5e22b357ec7b&quot;&gt;&amp;quot;Snake Game With Rust, JavaScript, and WebAssembly&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;We will learn how to export API implemented with Rust to JavaScript app.
We will get to know canvas rendering, applications of vectors, and basics of game development.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;At the moment, the series consists of six articles (of eight planned):&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-929f79efc78f&quot;&gt;Game Architecture&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-part-2-9d729b87c186&quot;&gt;Creating Game Instance&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-part-3-94b618db74a3&quot;&gt;Rendering the Game&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-part-4-1f20ab2638c4&quot;&gt;Placing the Food&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-part-5-7c114ce4583a&quot;&gt;Game Loop&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@geekrodion&#x2F;snake-game-with-rust-javascript-and-webassembly-part-6-274a0f9bbbfe&quot;&gt;Moving the Snake&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;The source code can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;RodionChachura&#x2F;rust-js-snake-game&quot;&gt;in this repo&lt;&#x2F;a&gt;
and you can &lt;a href=&quot;https:&#x2F;&#x2F;rodionchachura.github.io&#x2F;rust-js-snake-game&#x2F;&quot;&gt;check out the game itself here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;12-seconds-awake&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;12-seconds-awake.psichix.io&quot;&gt;12 Seconds Awake&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#12-seconds-awake&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;12-seconds-awake.psichix.io&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;12seconds.jpeg&quot; alt=&quot;Title screen: click to play&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;12-seconds-awake.psichix.io&quot;&gt;&amp;quot;12 Seconds Awake&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PsichiX&quot;&gt;@PsichiX&lt;&#x2F;a&gt; is a small 2D top-down
physics-based tank war game with worms-like turn mechanics
written using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; (see &amp;quot;Oxygengine&amp;quot; section below).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;demo-web-game&quot;&gt;The source code is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;eljrq2&#x2F;12_seconds_awake_web_game_made_in_rust&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tennis-academy-dash&quot;&gt;Tennis Academy: Dash&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy-dash&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;dash.gif&quot; alt=&quot;menu, levels, and customers&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1218632638136754182&quot;&gt;v0.1.5 version&lt;&#x2F;a&gt;
of &amp;quot;Tennis Academy: Dash&amp;quot;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🍜 the puppy has a bowl&lt;&#x2F;li&gt;
&lt;li&gt;🛁 code refactoring and using clippy&lt;&#x2F;li&gt;
&lt;li&gt;💯 UI displaying score and other info&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;cows&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pilotinpyjamas.itch.io&#x2F;cows&quot;&gt;COWs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cows&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;cows.png&quot; alt=&quot;COWs screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Another Game Off submission: &lt;a href=&quot;https:&#x2F;&#x2F;pilotinpyjamas.itch.io&#x2F;cows&quot;&gt;COWs&lt;&#x2F;a&gt; is a WIP puzzle game
about turning complete cows.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Welcome to the Logically Executed Automatic Paddock, or LEAP for short,
where we keep our cows. Whoops, did I say cow? I meant to say COW.
That stands for &amp;quot;Carry On Walking&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;I suppose all of our COWs happen to be cows too. What a coincidence!&lt;&#x2F;p&gt;
&lt;p&gt;Our COWs are bound together to solve puzzles. Some of our COWs
are advanced enough that we call them COmputational Workers (COW for short).
It&#x27;s a logical LEAP, but you&#x27;re BOUND to get it.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;andymac-2&#x2F;leaps-bounds&quot;&gt;The source code is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;noodle-cat&quot;&gt;Noodle Cat&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#noodle-cat&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;noodle-cat.png&quot; alt=&quot;Debug rendering of Cat&#x27;s physics parts&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&quot;&gt;@Fryer00&lt;&#x2F;a&gt; tweeted a bunch of updates about their WIP Box2D physics game prototype:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1212597726606692353&quot;&gt;snake kinematics&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1217924172346728449&quot;&gt;&amp;quot;air swimming&amp;quot; force&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;🐾 &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1216229512238829568&quot;&gt;paws grabbing&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1218167388165885952&quot;&gt;animation&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1219320622544838659&quot;&gt;Harfbuzz-based text renderer&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1213770289999437825&quot;&gt;debug rendering&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1220850604647555078&quot;&gt;interactive debugging settings&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Fryer00&#x2F;status&#x2F;1222794916646006784&quot;&gt;extending&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;urban-myth&quot;&gt;Urban Myth&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#urban-myth&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;cmd-tea-game.jpeg&quot; alt=&quot;relationships view mode&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cmd_tea&quot;&gt;@cmd_tea&lt;&#x2F;a&gt; tweeted about the progress
of their &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SiegeLord&#x2F;RustAllegro&quot;&gt;Allegro&lt;&#x2F;a&gt;-based superhero-themed game
&amp;quot;Urban Myth&amp;quot; (working title):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cmd_tea&#x2F;status&#x2F;1218584171863519234&quot;&gt;Different viewing modes: normal, dna, knowledge, relationships&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;cmd_tea&#x2F;status&#x2F;1216809496066121740&quot;&gt;Updated UI&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;akigi.png&quot; alt=&quot;Sticks that surround Pookie&#x27;s house&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a multiplayer online world where most believe that
humans are inferior.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Some of January&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Autonomous NPC architecture &amp;amp; movement;&lt;&#x2F;li&gt;
&lt;li&gt;New capuchin rigged mesh and animation;&lt;&#x2F;li&gt;
&lt;li&gt;Chasing and basic combat system;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full January&#x27;s devlogs:
&lt;a href=&quot;http:&#x2F;&#x2F;devjournal.akigi.com&#x2F;january-2020&#x2F;2020-01-05.html&quot;&gt;#049&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;january-2020&#x2F;2020-01-12.html&quot;&gt;#050&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;january-2020&#x2F;2020-01-19.html&quot;&gt;#051&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;january-2020&#x2F;2020-01-26.html&quot;&gt;#052&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;split&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mistodon.itch.io&#x2F;split&quot;&gt;Split&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#split&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;split.png&quot; alt=&quot;gameplay screenshot: ships and asteroids&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Mistodon&#x2F;status&#x2F;1216525697398853632&quot;&gt;Another entry for the Games Made Quick jam from @Mistodon&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mistodon.itch.io&#x2F;split&quot;&gt;Split&lt;&#x2F;a&gt; is a game about outrunning a supernova and using time travel to improve your chances.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the middle of using time travel to research a dying star,
you find yourself fleeing from a supernova.
I know, who would have guessed.&lt;&#x2F;p&gt;
&lt;p&gt;On the route to safety are three When Points - time traveling stations.
This means you can retry your journey between them as many times as you like.
The faster you move between them, the further from danger you are.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;3 extremely high speed stages&lt;&#x2F;li&gt;
&lt;li&gt;Multiple variants of stages, depending on how quickly you reach them&lt;&#x2F;li&gt;
&lt;li&gt;5 different ending epilogues, based on your completion time&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=8E0PKetLEdo&quot;&gt;Check out a gameplay video here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;antorum.jpg&quot; alt=&quot;Spider NPCs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt; is a multiplayer RPG where players build their characters
and fight against the growing threats on the isle.
The game server is authoritative and written in Rust,
while the client is written in Unity&#x2F;C#.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt; published a bunch of devlogs:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;14&quot;&gt;#14 &amp;quot;Equipment&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;15&quot;&gt;#15 &amp;quot;Trees&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;16&quot;&gt;#16 &amp;quot;Terrain + Minimap Update&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;17&quot;&gt;#17 &amp;quot;Data Driven Entity Updates&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt; Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;amethyst-logo.png&quot; alt=&quot;Amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Machine-Hum&#x2F;realm.one&quot;&gt;Realm.One&lt;&#x2F;a&gt; is a new open-source tile-based game
written using the Amethyst game engine.
It is the first game that will be integrated
into &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Machine-Hum&#x2F;Worlds&quot;&gt;the distributed MMO platform Worlds&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Meet the first devlog:
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@ryan.cjw&#x2F;adventures-with-rust-game-development-1d998c45381c&quot;&gt;&amp;quot;Adventures with Rust - Game Development&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;eljx1s&#x2F;adventures_with_rust_game_development&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;];&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;realm-one.png&quot; alt=&quot;Realm.One screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&quot;&gt;Azriel&lt;&#x2F;a&gt; published an &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2020&#x2F;01&#x2F;31&#x2F;i-choose-ui&quot;&gt;&amp;quot;I Choose UI&amp;quot;&lt;&#x2F;a&gt; devlog:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Character selection UI lists all available characters,
with player selections highlighted.&lt;&#x2F;li&gt;
&lt;li&gt;Map selection UI lists all available maps, with a selection highlight.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=z2KG_prMJ1c&quot;&gt;Demo video&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;will-character-selection.png&quot; alt=&quot;Updated character selection UI that shows all chars&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mvlabat&#x2F;status&#x2F;1219341273573863425&quot;&gt;@mvlabat shared a video&lt;&#x2F;a&gt; about the evolution
of a fragment shader for a magic missile in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;grumpy_visitors&quot;&gt;Grumpy Visitors&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mvlabat&#x2F;status&#x2F;1219341273573863425&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;grumpy-visitors.png&quot; alt=&quot;Final shader&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;legendiguess.itch.io&#x2F;wall-jump&quot;&gt;&amp;quot;Wall Jump&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;legendiguess&quot;&gt;@legendiguess&lt;&#x2F;a&gt; is a simple game for WeeklyGameJam.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nothing special, just a two minutes adventure of a Wall.
Collect wall putty and return back to the house.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;wall-jump.gif&quot; alt=&quot;Wall Jump gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-1-41-profile-overrides-are-stable-now&quot;&gt;Rust 1.41: &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;cargo&#x2F;reference&#x2F;profiles.html#overrides&quot;&gt;Profile Overrides&lt;&#x2F;a&gt; are Stable Now!&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-1-41-profile-overrides-are-stable-now&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;rust-1-41.png&quot; alt=&quot;Rust 1.41&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Though it wasn&#x27;t mentioned in &lt;a href=&quot;https:&#x2F;&#x2F;blog.rust-lang.org&#x2F;2020&#x2F;01&#x2F;30&#x2F;Rust-1.41.0.html&quot;&gt;the official announcement post&lt;&#x2F;a&gt;,
Rust 1.41 brings a cargo feature
that many gamedevs have been waiting a long time for:
&lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;cargo&#x2F;reference&#x2F;profiles.html#overrides&quot;&gt;profile overrides&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This feature allows you to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use optimized deps in debug build to reduce incremental build time
and get a sane FPS.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;To override the settings for all dependencies
(but not any workspace member), use the &amp;quot;*&amp;quot; package name:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;[profile.dev.package.&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;opt-level &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;blockquote&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Do not optimize build-dependencies (like &lt;code&gt;syn&lt;&#x2F;code&gt;) to increase
full release build time:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#c0c5ce;&quot;&gt;[profile.release.build-override]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;opt-level &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ew9pis&#x2F;profile_overrides_are_stable_now&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ew8htz&#x2F;announcing_rust_1410_rust_blog&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;adventuring-into-the-world-of-games-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;phoward.me&#x2F;introduction&#x2F;rust&#x2F;game-development&#x2F;2020&#x2F;01&#x2F;27&#x2F;gamedev-rust.html&quot;&gt;Adventuring into the World of Games in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#adventuring-into-the-world-of-games-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MontyPatrick&quot;&gt;@MontyPatrick&lt;&#x2F;a&gt; shared their initial experience of diving into Rust GameDev
in the &lt;a href=&quot;https:&#x2F;&#x2F;phoward.me&#x2F;introduction&#x2F;rust&#x2F;game-development&#x2F;2020&#x2F;01&#x2F;27&#x2F;gamedev-rust.html&quot;&gt;&amp;quot;Adventuring into the World of Games in Rust&amp;quot;&lt;&#x2F;a&gt; blog post.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Overall, while things are still relatively new in developing games in Rust
I believe that Rust can serve as a great alternative
to languages such as C++ in the field of game development.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;translating-quake-3-into-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;immunant.com&#x2F;blog&#x2F;2020&#x2F;01&#x2F;quake3&quot;&gt;Translating Quake 3 into Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#translating-quake-3-into-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;q3.jpeg&quot; alt=&quot;Rusty Q3 main menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;immunant.com&quot;&gt;Immunant&lt;&#x2F;a&gt; published an article &lt;a href=&quot;https:&#x2F;&#x2F;immunant.com&#x2F;blog&#x2F;2020&#x2F;01&#x2F;quake3&quot;&gt;&amp;quot;Translating Quake 3 into Rust&amp;quot;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Rust-loving team at &lt;a href=&quot;https:&#x2F;&#x2F;immunant.com&quot;&gt;Immunant&lt;&#x2F;a&gt; has been hard at work on &lt;a href=&quot;https:&#x2F;&#x2F;c2rust.com&quot;&gt;C2Rust&lt;&#x2F;a&gt;,
a migration framework that takes the drudgery out of migrating to Rust.
Our goal is to make safety improvements to the translated Rust automatically
where we can, and help the programmer do the same where we cannot.
First, however, we have to build a rock-solid translator that gets
people up and running in Rust.
Testing on small CLI programs gets old eventually, so we decided
to try translating Quake 3 into Rust.
After a couple of days, we were likely the first people to ever play
Quake3 in Rust!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Check out a
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=lQjvSJLDXW4&quot;&gt;video of transpiling Q3, loading the game and playing it&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;el2z0k&#x2F;translating_quake_3_into_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;programming&#x2F;comments&#x2F;elc0f9&#x2F;translating_quake_3_into_rust&quot;&gt;&#x2F;r&#x2F;programming&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21979555&quot;&gt;Hacker News&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-code-in-unreal-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ejmahler.github.io&#x2F;rust_in_unreal&quot;&gt;Rust Code in Unreal Engine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-code-in-unreal-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ejmahler.github.io&#x2F;rust_in_unreal&quot;&gt;A short blog post&lt;&#x2F;a&gt; by @ejmahler about getting Rust code
integrated into Unreal Engine.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve written a full writeup &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ejmahler&#x2F;UnrealEngine&#x2F;blob&#x2F;rust-modules&#x2F;RustPost&#x2F;RustInUnreal.md&quot;&gt;here&lt;&#x2F;a&gt;, which includes
a full demo project and all the necessary engine changes.
You’ll need to be logged into GitHub with an account that has access
to the Unreal Engine source code.
If not, the link will look like a 404 – but it’s easy
to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EpicGames&#x2F;Signup&quot;&gt;request access&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;As a quick summary of features I’ve found to work:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Compiling a Rust crate as an Unreal Engine Module&lt;&#x2F;li&gt;
&lt;li&gt;C++ Unreal modules linking to our Rust crate&lt;&#x2F;li&gt;
&lt;li&gt;Automatic rebuilding C++ and binaries that depend on Rust code when that Rust code changes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;emp0su&#x2F;proof_of_concept_rust_code_in_unreal_engine&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;writing-a-4k-intro-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;codeslow.com&#x2F;2020&#x2F;01&#x2F;writing-4k-intro-in-rust.html&quot;&gt;Writing a 4K Intro in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#writing-a-4k-intro-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;4k-mini-gl.png&quot; alt=&quot;Rust OpenGL in 2 Kbytes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Jani Peltonen has published an article &lt;a href=&quot;https:&#x2F;&#x2F;codeslow.com&#x2F;2020&#x2F;01&#x2F;writing-4k-intro-in-rust.html&quot;&gt;&amp;quot;Writing a 4K intro in Rust&amp;quot;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;For now I have a simple intro that initializes a modern OpenGL context
in Win32 and puts up a relatively simple shader.
The compressed size is &amp;lt;2Kbytes which, I think,
validates Rust as viable language for writing 4K intros.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;janiorca&#x2F;tinywin&#x2F;tree&#x2F;master&#x2F;miniwinGL&quot;&gt;The source code is available here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;enbbxu&#x2F;writing_a_4k_intro_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3d-graphics-in-your-browser-with-rust-and-wasm&quot;&gt;3D Graphics in Your Browser with Rust and WASM&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#3d-graphics-in-your-browser-with-rust-and-wasm&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;rust-3d-wasm.png&quot; alt=&quot;Slide with table of content&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Doug Milford released three tutorial videos:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=p7DtoeuDT5Y&quot;&gt;&amp;quot;Boilerplate Setup and WASM Introduction&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=kjYCSySObDo&quot;&gt;&amp;quot;2D Graphics&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=K63uBfs1K7Y&quot;&gt;&amp;quot;3D Graphics&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dmilford&#x2F;rust-3d-demo&quot;&gt;The source code can be found here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;discord-game-sdk&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ldesgoui&#x2F;discord_game_sdk&quot;&gt;discord_game_sdk&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#discord-game-sdk&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ldesgoui&#x2F;discord_game_sdk&quot;&gt;discord_game_sdk&lt;&#x2F;a&gt; in an &lt;em&gt;unofficial&lt;&#x2F;em&gt; safe interface to the &lt;a href=&quot;https:&#x2F;&#x2F;discordapp.com&#x2F;developers&#x2F;docs&#x2F;game-sdk&#x2F;sdk-starter-guide&quot;&gt;Discord Game SDK&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;discordapp.com&#x2F;developers&#x2F;docs&#x2F;game-sdk&#x2F;sdk-starter-guide&quot;&gt;Discord Game SDK&lt;&#x2F;a&gt; provides features such as, but not limited to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Activities (Rich Presence)&lt;&#x2F;li&gt;
&lt;li&gt;Users, Avatars and Relationships&lt;&#x2F;li&gt;
&lt;li&gt;Lobbies, Matchmaking and Voice communication&lt;&#x2F;li&gt;
&lt;li&gt;Faux-P2P Networking on Discord&#x27;s Infrastructure&lt;&#x2F;li&gt;
&lt;li&gt;Cloud Synchronized Storage&lt;&#x2F;li&gt;
&lt;li&gt;Store Transactions&lt;&#x2F;li&gt;
&lt;li&gt;Achievements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;optimath&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djugei&#x2F;optimath&quot;&gt;Optimath&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#optimath&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djugei&#x2F;optimath&quot;&gt;Optimath&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;djugei.github.io&quot;&gt;@djugei&lt;&#x2F;a&gt;
is an experimental const generics based linear algebra library
that works without any allocations in no_std and utilizes SIMD.
&lt;em&gt;Requires nightly toolchain.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Project goals:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Besides being hopefully useful as a library it is also
an exploration of rusts newer advanced type system features.
It is therefore an explicit goal to provide feedback
to the developers of those features.
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;optimath&#x2F;0.3.0&#x2F;optimath&#x2F;insights&#x2F;index.html&quot;&gt;The &lt;code&gt;insights&lt;&#x2F;code&gt; module&lt;&#x2F;a&gt; contains some of that.&lt;&#x2F;p&gt;
&lt;p&gt;It is also meant to explore the design space
of Linear Algebra libraries that utilize those features.
As such it may serve as inspiration for how bigger linalg libraries
might adopt them.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;djugei.github.io&#x2F;optimath-0-3-0&quot;&gt;Check out a detailed v0.3 announcement post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussion:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eo4ury&#x2F;show_rrust_optimath_linear_algebra_with_const&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;keyframe-animation-library-for-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HannesMann&#x2F;keyframe&quot;&gt;keyframe&lt;&#x2F;a&gt; - Animation Library for Rust&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#keyframe-animation-library-for-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;HannesMann&#x2F;keyframe&quot;&gt;keyframe&lt;&#x2F;a&gt; is a simple library for animation.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Several &lt;a href=&quot;https:&#x2F;&#x2F;easings.net&#x2F;en&quot;&gt;easing functions&lt;&#x2F;a&gt;, including user-defined Bézier curves
and keyframable curves;&lt;&#x2F;li&gt;
&lt;li&gt;Animation sequences;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;mint&quot;&gt;mint&lt;&#x2F;a&gt; integration for 2D&#x2F;3D&#x2F;4D support (points, rectangles, colors, etc)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Animation sequences example:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#b48ead;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;keyframe::{keyframes, Keyframe, AnimationSequence};

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;example&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; (value, time) or (value, time, function)
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; sequence = keyframes![
         (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; &amp;lt;-- EaseInOut used from 0.0 to 0.3
         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, Linear), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; &amp;lt;-- Linear used from 0.3 to 1.0
         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; &amp;lt;-- Easing function here is never used, since we&amp;#39;re at the end
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;];

    sequence.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;advance_by&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.65&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;);

    assert_eq!(sequence.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;now&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;);
    assert_eq!(sequence.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;duration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;);
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;h3 id=&quot;rltk-rs-v0-6-roguelike-tutorial&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;etiywv&#x2F;sharing_saturday_295&#x2F;ffi13dw&#x2F;&quot;&gt;rltk_rs v0.6&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rltk-rs-v0-6-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;rl-c70-pewpew.gif&quot; alt=&quot;Ranged attack demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; continues to grow:
chapter &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&#x2F;chapter_70.html&quot;&gt;#70 &amp;quot;Missiles and Ranged Attacks&amp;quot;&lt;&#x2F;a&gt; was added to the book.
It adds targeting, ranged weaponry, AI that shoots back, and projectile particles to the mix.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&#x2F;wasm&#x2F;chapter-70-missiles&quot;&gt;Check out an online demo here.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;rltk_rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt; is a Rust implementation of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk&quot;&gt;C++ Roguelike Toolkit&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;etiywv&#x2F;sharing_saturday_295&#x2F;ffi13dw&#x2F;&quot;&gt;rltk_rs v0.6&lt;&#x2F;a&gt; was released. Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Breaking changes: usize for indexing, cargo features rename,
TryInto in generic functions, and a few more;&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;sticky&amp;quot; ctrl&#x2F;alt&#x2F;shift modifiers;&lt;&#x2F;li&gt;
&lt;li&gt;more auto-derived traits;&lt;&#x2F;li&gt;
&lt;li&gt;performance optimizations &amp;amp; bugfixes;&lt;&#x2F;li&gt;
&lt;li&gt;updated examples.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;implementing-a-turn-based-game-in-an-ecs-with-specs-task&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@bonsairobo&#x2F;implementing-a-turn-based-game-in-an-entity-component-system-with-specs-task-d7f3358198b4&quot;&gt;Implementing a Turn-Based Game in an ECS with SPECS-Task&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#implementing-a-turn-based-game-in-an-ecs-with-specs-task&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@bonsairobo&quot;&gt;@bonsairobo&lt;&#x2F;a&gt; published an article
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@bonsairobo&#x2F;implementing-a-turn-based-game-in-an-entity-component-system-with-specs-task-d7f3358198b4&quot;&gt;&amp;quot;Implementing a Turn-Based Game in an ECS with SPECS-Task&amp;quot;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’ve heard from a few people who are just getting started with
entity component systems (ECS) that implementing logic for a turn-based game
seems more complicated than it should be.
I thought that seemed odd, but I just recently ran into this problem myself.
While certainly not insurmountable, implementing turn-based logic
in an ECS just doesn’t feel great.
I think the reason is that no one likes to implement a loop
via distributed state machines.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;flukejones-ecs-bench&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;flukejones&#x2F;ecs_bench&quot;&gt;flukejones&#x2F;ecs_bench&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#flukejones-ecs-bench&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;flukejones&quot;&gt;@flukejones&lt;&#x2F;a&gt; forked an old Rust ECS benchmark set
and updated it to show some of the more recent ECS around:
&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;flukejones&#x2F;tiny_ecs&quot;&gt;tiny_ecs&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Ralith&#x2F;hecs&quot;&gt;hecs&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jaynus&#x2F;legion&quot;&gt;legion&lt;&#x2F;a&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;flukejones&#x2F;ecs_bench&quot;&gt;flukejones&#x2F;ecs_bench&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;awesome-wgpu&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rofrol&#x2F;awesome-wgpu&quot;&gt;awesome-wgpu&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#awesome-wgpu&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rofrol&#x2F;awesome-wgpu&quot;&gt;awesome-wgpu&lt;&#x2F;a&gt; is a new curated list of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu&lt;&#x2F;a&gt;-related links:
learning resources, games, app, articles, etc.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, check out a new &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt;-based ios app:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;mao-brush.png&quot; alt=&quot;Mao Brush logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;apps.apple.com&#x2F;us&#x2F;app&#x2F;id1492608770&quot;&gt;Mao Brush&lt;&#x2F;a&gt; realistically simulated the writing effect of
Chinese brush + rice paper, the focus is on bringing
the traditional Chinese calligraphy art to the digital age.&lt;&#x2F;p&gt;
&lt;p&gt;The WebGPU-based (wgpu-rs) brush engine uses the LBM fluid simulation
to achieve the unique expression of the brush.
You can use it to experience the splash of Chinese calligraphy anytime,
anywhere, and create brush calligraphy works.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;crow-v0-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;crow&quot;&gt;crow&lt;&#x2F;a&gt; v0.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#crow-v0-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;crow&quot;&gt;crow&lt;&#x2F;a&gt; is a simple and efficient pixel based 2D graphics library.
It&#x27;s designed to be easy to use and should allow users
to do nearly everything they want
without requiring custom renderers or unsafe code.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;luminance-v0-38&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance v0.38&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#luminance-v0-38&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;phaazon_&quot;&gt;@phaazon&lt;&#x2F;a&gt; is a type-safe, type-level and stateless
graphics framework.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance v0.38&lt;&#x2F;a&gt; got released.
Among the changes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;Mode::Patch&lt;&#x2F;code&gt; tessellation primitive.&lt;&#x2F;li&gt;
&lt;li&gt;The pipelines can now be customized in deeper ways
(besides clear color, one can enable or disable clearing color buffer,
depth buffer, sRGB framebuffers, dynamic viewport, etc.).&lt;&#x2F;li&gt;
&lt;li&gt;sRGB textures.&lt;&#x2F;li&gt;
&lt;li&gt;Framebuffers now accept a Sampler to control how their associated textures
will be sampled.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;blob&#x2F;master&#x2F;docs&#x2F;imgs&#x2F;displacement_map.gif&quot;&gt;A cool displacement mapping example&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;A complete changes list can be found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;blob&#x2F;master&#x2F;luminance&#x2F;CHANGELOG.md#038&quot;&gt;in the CHANGELOG&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, the luminance book got updated: &lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;learn-luminance&quot;&gt;check it out here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ejys2l&#x2F;official_announcement_release_of_luminance038&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&#x2F;status&#x2F;1213569285496410116&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;space-game.png&quot; alt=&quot;gameplay screenshot: block, space ship, dialog box&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Btw, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&quot;&gt;@resinten&lt;&#x2F;a&gt; continues working on a luminance-based game:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;extra parallax layers,&lt;&#x2F;li&gt;
&lt;li&gt;a basic UI with placeholder art,&lt;&#x2F;li&gt;
&lt;li&gt;dialog system,&lt;&#x2F;li&gt;
&lt;li&gt;updated player movement,&lt;&#x2F;li&gt;
&lt;li&gt;music.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&#x2F;status&#x2F;1213569285496410116&quot;&gt;Check out a WIP gameplay video here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;spir-q-v0-4-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt; v0.4.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#spir-q-v0-4-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;spir-q.png&quot; alt=&quot;Example walking an entry point of a SPIR-V file&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;Example walking an entry point of a SPIR-V file&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt; is a lightweight &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Standard_Portable_Intermediate_Representation&quot;&gt;SPIR-V&lt;&#x2F;a&gt; query library.
This month v0.2..v0.4.1 versions were released:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;SPIR-Q is now more handy with better and easier reflection information accessors;&lt;&#x2F;li&gt;
&lt;li&gt;component number for shared-location interface variables;&lt;&#x2F;li&gt;
&lt;li&gt;separable sampler types;&lt;&#x2F;li&gt;
&lt;li&gt;descriptor access type query &amp;amp; multibinding for all descriptors;&lt;&#x2F;li&gt;
&lt;li&gt;new examples, bugfixes, and significant performance improvements.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;glsl-v4-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eklo6l&#x2F;official_announcement_glsl40&quot;&gt;glsl v4.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glsl-v4-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;glsl&quot;&gt;glsl&lt;&#x2F;a&gt; is a crate to parse GLSL formatted sources into a typed AST.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eklo6l&#x2F;official_announcement_glsl40&quot;&gt;glsl-4.0 and glsl-quasiquote got released this month&lt;&#x2F;a&gt;.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;support for two backward-compatible keywords: attribute and varying
(allows parsing GLSL450);&lt;&#x2F;li&gt;
&lt;li&gt;binary operands are now parsed as left-associative.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eklo6l&#x2F;official_announcement_glsl40&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxygengine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;oxygengine-dark-logo.svg&quot; alt=&quot;Oxygengine logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; got
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;epupkb&#x2F;oxygengine_pure_js_scripting_backend_for_quick&quot;&gt;JavaScript scripting interface&lt;&#x2F;a&gt;
to allow faster prototyping of games.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This prebuilt WASM version would let game devs with JS background
to quickly prototype game ideas and then slowly move their logic
into Rust implementation, while learning Rust meantime.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Example source code: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;blob&#x2F;master&#x2F;oxygengine-js&#x2F;js&#x2F;index.js&quot;&gt;oxygengine-js&#x2F;js&#x2F;index.js&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, you can now &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eunppk&#x2F;oxygengine_instantiate_entities_from_prefab_assets&quot;&gt;instantiate entities from prefab assets&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; is a safe cross-platform rendering library
focused on portability and low-end platforms support.&lt;&#x2F;p&gt;
&lt;p&gt;Some of this month&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;miniquad&quot;&gt;first crates.io version&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;native macOS support;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;muoxi-modern-mud-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;duysqubix&#x2F;MuOxi&quot;&gt;MuOxi&lt;&#x2F;a&gt; - Modern &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;MUD&quot;&gt;MUD&lt;&#x2F;a&gt; Engine&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#muoxi-modern-mud-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;muoxi-cog.png&quot; alt=&quot;MuOxi cog logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;duysqubix&#x2F;MuOxi&quot;&gt;MuOxi&lt;&#x2F;a&gt; is a modern library for creating &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;MUD&quot;&gt;online multiplayer text games&lt;&#x2F;a&gt;
(MU* family) using the powerful features offered by Rust;
backed by Tokio and Diesel.&lt;&#x2F;p&gt;
&lt;p&gt;Current Status:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is a working TCP server that allows for multiple connections
and handles them accordingly.
Effort is focused at the moment in designing the database architecture
utilizing Diesel with PostgreSQL backend.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ekwvay&#x2F;muoxi_a_modern_mud_engine_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun-january-2020&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;01&#x2F;31&#x2F;this-month-january&quot;&gt;This Month in Mun - January 2020&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun-january-2020&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;mun-logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused
on quick iteration times that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;01&#x2F;31&#x2F;this-month-january&quot;&gt;January updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;marketplace.visualstudio.com&#x2F;items?itemName=0x9ef.vscode-mun&quot;&gt;vscode plugin&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;use extern functions in dispatch table;&lt;&#x2F;li&gt;
&lt;li&gt;add marshalling of structs;&lt;&#x2F;li&gt;
&lt;li&gt;add struct as marshallable field type;&lt;&#x2F;li&gt;
&lt;li&gt;bugfixes and improved test coverage.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;nestur-nes-emulator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spieglt&#x2F;nestur&quot;&gt;nestur&lt;&#x2F;a&gt; NES Emulator&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nestur-nes-emulator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;nestur.png&quot; alt=&quot;NES games&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;spieglt&#x2F;nestur&quot;&gt;nestur&lt;&#x2F;a&gt; is yet another NES emulator.
It&#x27;s mostly an educational project but it&#x27;s usable.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;SDL2 is the only dependency&lt;&#x2F;li&gt;
&lt;li&gt;no use of unsafe&lt;&#x2F;li&gt;
&lt;li&gt;NTSC timing&lt;&#x2F;li&gt;
&lt;li&gt;supports mappers 0-4 which cover ~85% of games&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ewqiuh&#x2F;nestur_nes_emulator_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;71&quot;&gt;#71 &amp;quot;Proof Of Concept Crate: Simplistic Bump Allocator&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;81&quot;&gt;#81 &amp;quot;Meetings On Discord?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;82&quot;&gt;#82 &amp;quot;Tracking: Rust All-Hands 2020&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;84&quot;&gt;#84 &amp;quot;New Charter Proposal Discussion&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&quot;&gt;rust-gamedev&#x2F;arewegameyet&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;210&quot;&gt;#210 &amp;quot;Transfer ownership to Rust Gamedev Working Group&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;arewegameyet&#x2F;issues&#x2F;252&quot;&gt;#252 &amp;quot;Split games and resources into categories&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;labels&#x2F;good%20first%20issue&quot;&gt;Mun&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;habr.com&#x2F;post&#x2F;436254&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-006&#x2F;bonus-bw.png&quot; alt=&quot;Module debug output&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;habr.com&#x2F;post&#x2F;436254&quot;&gt;&amp;quot;A bot for Starcraft in Rust, C or any other language&amp;quot;&lt;&#x2F;a&gt;
is an article by Roman @humbug Proskuryakov
about writing a dynamic library for Windows that could be loaded
into &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;StarCraft:_Brood_War&quot;&gt;StarCraft&lt;&#x2F;a&gt;&#x27;s address space to manage units.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;agvho5&#x2F;a_bot_for_starcraft_in_rust_c_or_any_other&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=18931961&quot;&gt;Hacker News&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;f4r368&#x2F;this_month_in_rust_gamedev_6_january_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1229047231916969987&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Rust Game Development - Ecosystem Survey</title>
                <pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate>
                <link>https://rust-gamedev.github.io/posts/survey-01/</link>
                <guid>https://rust-gamedev.github.io/posts/survey-01/</guid>
                <description>&lt;p&gt;In August last year, we conducted a survey for the Rust gamedev ecosystem. After an unfortunate delay, we can finally present the results. We received a whopping 403 responses! This trove of valuable feedback will inform the WG&#x27;s roadmap for 2020.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;hobbyist-or-developer&quot;&gt;Hobbyist or developer?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#hobbyist-or-developer&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;survey-01&#x2F;hobbyist-or-professional.png&quot; alt=&quot;Respondents identifying as professional or hobbyist&quot; &#x2F;&gt;
Out of the 400 respondents, 3&#x2F;4 identified as a &lt;em&gt;Hobbyist&lt;&#x2F;em&gt;. It should also be noted that a significant portion of the self-identified &lt;em&gt;Professionals&lt;&#x2F;em&gt; are more accurately described as &amp;quot;aspiring professional&amp;quot; undertaking their first game development venture. That still amounts to a large amount of commercial interest in Rust game development all the same!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;are-you-using-rust-for-gamedev&quot;&gt;Are you using Rust for gamedev?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#are-you-using-rust-for-gamedev&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;survey-01&#x2F;using-rust.png&quot; alt=&quot;Respondents using Rust in game development&quot; &#x2F;&gt;
Among the Professionals only 1&#x2F;4 said they are currently using Rust in games. That means the 200 respondents currently using Rust for gamedev are mostly hobbyists. No surprise there, as most professionals can&#x27;t bear the risk of being an early adopter. Big shoutout to all the hobbyists who are pushing the status quo, and kudos to the handful of studios that are using Rust in production long before most of their industry peers have even caught the scent.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;em&gt;For the free-form answers that follow, a basic eyeballs&amp;amp;hands sentiment analysis was used to distill 400 replies into digestible form. The (#) number next to a heading roughly indicates the number of times that topic came up. Think of it as the &lt;strong&gt;signal strength&lt;&#x2F;strong&gt; of a given topic.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-about-rust-as-a-language-and-ecosystem-presents-the-biggest-negatives-for-you-as-a-game-developer-right-now&quot;&gt;What about Rust as a language and ecosystem presents the biggest NEGATIVES for you as a game developer right now?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-about-rust-as-a-language-and-ecosystem-presents-the-biggest-negatives-for-you-as-a-game-developer-right-now&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Priorities for professionals and hobbyists are largely the same. The biggest differences were:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Hobbyists call for ecosystem maturity 2x more than anything else.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Hobbyists care much more about mobile&#x2F;web support&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Professionals care much more about console support&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Professionals care much more about C++ interop&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ecosystem-maturity-114&quot;&gt;Ecosystem maturity (114)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecosystem-maturity-114&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;From playing in the space I know it&#x27;s possible to make games using Rust. However in the ecosystem my biggest negatives is the [lack of] case studies and demonstrations of it working.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust is still a risky choice, compared to C++.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Still feels like a new community. There is always risk associated with that - does the language take a big swing in direction - does support drop off. I&#x27;m encouraged by the support for low level (embedded &#x2F; OS ) development, which hopefully means the core feature set remains robust.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Many unfinished, unmaintained crates. Lots of churn.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;A lot of common needs are not yet available &#x27;out of the box&#x27;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;iteration-times-68&quot;&gt;Iteration times (68)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#iteration-times-68&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Compile time, no runtime reflection, updating deep dependency in the tree is hard.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Iteration time is I think too big, due to compilation time, [lack of] hot-reloading tooling, etc.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Iteration time (especially while prototyping). This includes both compile time but also sorting out lifetimes when I know I&#x27;ll be rewriting something very soon anyway, this &amp;quot;frontloading&amp;quot; the effort of having the borrow checker run at compile time is useful for most tasks but when I want to try something quickly it can be a draining experience, in this regard GC&#x27;d languages have an advantage imo.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Prototyping seems not as easy in Rust due to &amp;quot;fighting the compiler&amp;quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;documentation-43&quot;&gt;Documentation (43)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#documentation-43&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Not enough documentation to get past beginner stage&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Lacking examples for gamedev libs.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Documentation is usually either high level or examples but rarely both. Very few real world examples to draw from.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;lack-of-full-featured-engines-35&quot;&gt;Lack of full-featured engines (35)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#lack-of-full-featured-engines-35&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Lack of a data-and-script based engine like Unreal Engine or Unity means even small projects end up feeling very bring-your-own-engine.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Missing graphical editors, frictionless prototyping of games&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;rust-learning-curve-onboarding-to-a-niche-language-29&quot;&gt;Rust learning curve &#x2F; onboarding to a niche language (29)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-learning-curve-onboarding-to-a-niche-language-29&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The language has a higher upfront cognitive load than any other mainstream language I know of, mostly due to the borrow checker. It&#x27;s very hard to hack through stuff and get away with it, which makes it a particularly hard sell for game prototypes.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I know that it is a less common language to use so as a company I will have to have my staff learn Rust before they can start.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust could be tricky to hire for, and hiring someone who doesn&#x27;t know Rust to work in Rust will come with a ramp-up period.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;ide-rls-story-28&quot;&gt;IDE&#x2F;RLS story (28)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ide-rls-story-28&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Tooling around IDE is limited compared to Visual Studio with C++ or C#.´&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Definitely lack of proper IDE (like out of the box Cargo integration and working debugger - yeah, I tested Visual Studio Code and it&#x27;s very slow, suggestions are not great, fastest way to run, check and build is to use terminal - not IDE) - I would say that something like QT Creator or Visual Studio would be great&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Regarding debugging, the industry standard is (or that I&#x27;m aware of) Visual Studio, for its very good IDE and tools, also, a lot of users are very used to that kind of tools and looks like Rust is missing some of them.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;rust-analyzer is still very incomplete, but it&#x27;s the only thing that works for me&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Poor IDE and debugging support in IDE. Mainly visual studio.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Can&#x27;t debug it properly, hashmap (for example) is absolutely not debuggable. Not sure how it works inside (instead of C++).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;debug mode way too slow, often need to set opt-level=1 or 2 for dev profile&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;gui-tooling-23&quot;&gt;GUI tooling (23)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gui-tooling-23&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;As a tools developer, a major negative point is the current absence of a reliable GUI framework (we use WPF + C# with Visual Studio).&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;game-consoles-13&quot;&gt;Game consoles (13)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-consoles-13&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;No first party support for console development makes Rust a tough sell for a lot of professional work.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust is not officially supported on console by Sony or Microsoft.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust can&#x27;t be seriously considered yet, because it does not have support from the PS4 SDK. Although there are other considerations (studio culture, integration with existing systems, etc.), official support from Sony is a requirement before Rust could be used in a PS4 game.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;web-mobile-support-14&quot;&gt;Web&#x2F;mobile support (14)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#web-mobile-support-14&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;allocators-10&quot;&gt;Allocators (10)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#allocators-10&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;c-interop-7&quot;&gt;C++ interop (7)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#c-interop-7&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Our code, and any middleware&#x2F;engine that we might license, is in C++. Using Rust and C++ together is painful, and rewriting the existing tech to be purely Rust would be very expensive.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Testing and too much things linked to C.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also, no professional game engine (UE4, Unity) integrates with Rust yet.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Unknown compatibility&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Lack of a straightforward path to make rust work easily with C++ in both directions. The only trustable way I see now is through manual C wrappers, which is error-prone and time consuming.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;what-about-rust-as-a-language-and-ecosystem-presents-the-biggest-positives-for-you-as-a-game-developer-right-now&quot;&gt;What about Rust as a language and ecosystem presents the biggest POSITIVES for you as a game developer right now?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-about-rust-as-a-language-and-ecosystem-presents-the-biggest-positives-for-you-as-a-game-developer-right-now&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h1&gt;
&lt;h3 id=&quot;safety-100&quot;&gt;Safety (100)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#safety-100&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Strong type system allows for easily enforcing some performance and safety best practices&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Multithreading safety&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Elimination of data races greatly improves reliability for multithreaded code.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Safe concurrency&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;performance-89&quot;&gt;Performance (89)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#performance-89&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Great performance and compile time verifications&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Performance and reliability&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Parallelism&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;community-69&quot;&gt;Community (69)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#community-69&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;the ecosystem is full of passionate and smart people who take quality software very seriously&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;a really welcoming community with great goals and courage to pursue them&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Collective community effort to &amp;quot;build the right thing&amp;quot; and &amp;quot;build the thing right&amp;quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;cargo-57&quot;&gt;Cargo (57)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cargo-57&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;being able to pull down libraries piecemeal and have them build with your stuff immediately is great&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;ecosystem-50&quot;&gt;Ecosystem (50)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecosystem-50&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A mature Rust ecosystem will (hopefully!) have a lower bar for entry than a mature C++ ecosystem, without giving up performance.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;wasm-web-support-20&quot;&gt;WASM (web)  support (20)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wasm-web-support-20&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;no-garbage-collection-8&quot;&gt;No garbage collection (8)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#no-garbage-collection-8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;ecs-data-driven-data-oriented-8&quot;&gt;ECS; data-driven; data-oriented (8)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecs-data-driven-data-oriented-8&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;cross-platform-5&quot;&gt;Cross platform (5)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cross-platform-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;c-interop-3&quot;&gt;C interop (3)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#c-interop-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h2 id=&quot;selected-quotes&quot;&gt;Selected quotes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#selected-quotes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The language has a higher upfront cognitive load than any other mainstream language. Which means that on an established, bigger project (maybe with a team behind) the productivity is amazing compared to C++! It&#x27;s much easier to express strong &amp;amp; safe interfaces that make bugs just harder to introduce.
It really shines in network code that needs to be 100% safe and resist bad actors! My current game server code has 0 unwraps&#x2F;panics&#x2F;expects and so I just &lt;em&gt;know&lt;&#x2F;em&gt; it can&#x27;t crash... I wish I could have that feeling in C++.
C++ on the contrary makes it easy to whip up something which then has a 20% crash rate and tanks perf and takes 2 weeks to hammer into shape, and after those 2 weeks it looks like Rust code anyway.
Unfortunately, knowing the management culture in the gamedev industry, Rust has an extremely hard road in front of it due to this. In my experience gamedev is plagued by extreme short term (like, 1 month) reasoning resulting in crunches and awful technical tradeoffs. Rust made many choices that delay that fateful &amp;quot;demo day with the execs&amp;quot; because it forces you to do things right. But very few can express why this is valuable up the chain and be listened to.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I love Rust!
• it&#x27;s perfect for &amp;quot;API-minded&amp;quot; systems programmers
• as more production users come, things will get very good very quickly
• being cross-platform is easier than ever
• refactoring is very fun
• proc macros are cool as heck
• serde is insanely useful
• seriously there&#x27;s a ton of awesome crates
• I know we&#x27;ll get there together!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;We are especially interested in data-driven games for procedural generation and AI. Rust seems a great fit for this computationally intensive work.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Since most game developers are tinkerers more than engineers or scientists, the whole industry is plagued with bad code quality, lack of architecture and bad code design. Undefined behavior, nullptr exceptions, use after freed, multithreading issues and so on are recurrent problems. Rust biggest positive is really the fact that it addresses all that without needing to change the people behind the games. That&#x27;s why I believe in it so much :).
Also worth noting that the module system and crates are really important nowadays because monolithic codebases of millions of lines of code is really a hell to work into.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;what-do-you-think-should-be-the-game-dev-working-group-s-priorities-for-the-next-3-6-months&quot;&gt;What do you think should be the game-dev working group&#x27;s priorities for the next 3-6 months?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-do-you-think-should-be-the-game-dev-working-group-s-priorities-for-the-next-3-6-months&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;documentation-107&quot;&gt;Documentation (107)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#documentation-107&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;better onboarding to rust gamedev&lt;&#x2F;li&gt;
&lt;li&gt;Better explanation of best practices&lt;&#x2F;li&gt;
&lt;li&gt;How to get started&lt;&#x2F;li&gt;
&lt;li&gt;Rust for seasoned gamedevs&lt;&#x2F;li&gt;
&lt;li&gt;What works &lt;em&gt;right now&lt;&#x2F;em&gt;?&lt;&#x2F;li&gt;
&lt;li&gt;Example games&lt;&#x2F;li&gt;
&lt;li&gt;Standard practices for common gamedev problems&lt;&#x2F;li&gt;
&lt;li&gt;How to do windowing&lt;&#x2F;li&gt;
&lt;li&gt;How to do graphics&lt;&#x2F;li&gt;
&lt;li&gt;How to do ECS&lt;&#x2F;li&gt;
&lt;li&gt;More documentation for foundational libraries&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;cross-platform-support-59&quot;&gt;Cross-platform support (59)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cross-platform-support-59&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Lobby for Rust adoption on next-gen consoles.&lt;&#x2F;li&gt;
&lt;li&gt;Clearer information about console support.&lt;&#x2F;li&gt;
&lt;li&gt;Start an entity capable of getting and maintain console NDAs to keep official rust builds made for console support. It’s a huge pain, but other open source projects do it, and it would be awesome for the community.&lt;&#x2F;li&gt;
&lt;li&gt;Wasm&#x2F;web support (heavier from hobbyists)&lt;&#x2F;li&gt;
&lt;li&gt;Paint a clearer picture of what the path to gaming consoles looks like, within the confines of what those proprietary SDKs and APIs allow.&lt;&#x2F;li&gt;
&lt;li&gt;Mobile support&lt;&#x2F;li&gt;
&lt;li&gt;Easier packaging&lt;&#x2F;li&gt;
&lt;li&gt;Cross-compiling&lt;&#x2F;li&gt;
&lt;li&gt;XR (AR&#x2F;VR)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ecosystem-promotion-coordination-51&quot;&gt;Ecosystem promotion &amp;amp; coordination (51)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ecosystem-promotion-coordination-51&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Develop contacts within the industry so that the WG can be a liaison between industry and OSS developers. By inviting and involving industry, the ecosystem can grow and potentially receive support (in the form of PRs, open sourcing existing tools, or financial support for OSS developers.)&lt;&#x2F;li&gt;
&lt;li&gt;Encourage &amp;amp; facilitate collaboration on existing tools.&lt;&#x2F;li&gt;
&lt;li&gt;Library “blessings”&lt;&#x2F;li&gt;
&lt;li&gt;more things like this survey&lt;&#x2F;li&gt;
&lt;li&gt;Ecosystem mapping&lt;&#x2F;li&gt;
&lt;li&gt;Outreach &#x2F; evangelising&lt;&#x2F;li&gt;
&lt;li&gt;Game jams&lt;&#x2F;li&gt;
&lt;li&gt;Better insight into WG’s current agenda&lt;&#x2F;li&gt;
&lt;li&gt;Come up with ways to unblock foundational projects if they get stuck&lt;&#x2F;li&gt;
&lt;li&gt;Identify in-progress issues, and propose new issues, for the Rust language, that are relevant to game development. (For example, debug Rust is very slow, so we need good ways to control what is and isn&#x27;t optimized.)&lt;&#x2F;li&gt;
&lt;li&gt;Seek opportunities to address cross-cutting concerns where possible. The recent investigation into raw-window-handle and evaluation of if we can&#x2F;should converge on a math library are both good examples.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;first-grade-game-engine-framework-46&quot;&gt;First-grade game engine&#x2F;framework (46)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#first-grade-game-engine-framework-46&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Simple 2D game engine&lt;&#x2F;li&gt;
&lt;li&gt;Basic editor workflow&lt;&#x2F;li&gt;
&lt;li&gt;An SDL-like&lt;&#x2F;li&gt;
&lt;li&gt;A Unity&#x2F;Unreal competitor&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;graphics-libraries-33&quot;&gt;Graphics libraries (33)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#graphics-libraries-33&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Improve accessibility of graphics programming&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;foundational-libraries-27&quot;&gt;Foundational libraries (27)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#foundational-libraries-27&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;UI libraries&lt;&#x2F;li&gt;
&lt;li&gt;Windowing&lt;&#x2F;li&gt;
&lt;li&gt;Audio&lt;&#x2F;li&gt;
&lt;li&gt;Graphics&lt;&#x2F;li&gt;
&lt;li&gt;Collection of “Standard crates” with some form of WG support&lt;&#x2F;li&gt;
&lt;li&gt;Push for stabilisation&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;faster-iteration-times-17&quot;&gt;Faster iteration times (17)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#faster-iteration-times-17&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Hot code reloading&lt;&#x2F;li&gt;
&lt;li&gt;Scripting&lt;&#x2F;li&gt;
&lt;li&gt;Faster compile times&lt;&#x2F;li&gt;
&lt;li&gt;More libraries like Processing&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;integration-with-existing-toolchains-14&quot;&gt;Integration with existing toolchains (14)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#integration-with-existing-toolchains-14&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;C&#x2F;C++&lt;&#x2F;li&gt;
&lt;li&gt;Xcode, Android studio, Visual studio, Blender&lt;&#x2F;li&gt;
&lt;li&gt;Unity&#x2F;Unreal&#x2F;Godot&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;custom-allocation-story-10&quot;&gt;Custom allocation story (10)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#custom-allocation-story-10&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;debugging-support-and-ide-integration-5&quot;&gt;Debugging support and IDE integration (5)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#debugging-support-and-ide-integration-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h3 id=&quot;interoperability-between-libraries-5&quot;&gt;Interoperability between libraries (5)&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#interoperability-between-libraries-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;h2 id=&quot;can-you-name-some-libraries-you-are-thankful-for-or-take-special-interest-in&quot;&gt;Can you name some libraries you are thankful for or take special interest in?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#can-you-name-some-libraries-you-are-thankful-for-or-take-special-interest-in&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Just for fun, we asked respondents to name libraries or projects they were thankful for. In the 6 months that have passed since this survey went out there&#x27;s been quite a few newcomers on the rise that would probably show more prominently here if we asked again today. Rest assured there will be more surveys.
&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;survey-01&#x2F;survey-thanks.png&quot; alt=&quot;Shoutouts to ecosystem projects&quot; &#x2F;&gt;
&lt;em&gt;Thanks so much to the survey respondents and all the people out there working tirelessly make Rust a first-tier language and ecosystem for game development.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>This Month in Rust GameDev #5 - December 2019</title>
                <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
                <link>https://rust-gamedev.github.io/posts/newsletter-005/</link>
                <guid>https://rust-gamedev.github.io/posts/newsletter-005/</guid>
                <description>&lt;p&gt;Welcome to the fifth issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;call-for-speakers-rust-london-gamedev-meetup&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ecfb3x&#x2F;a_call_for_speakers_rust_london_meetup_gamedev&quot;&gt;Call for Speakers: Rust London GameDev Meetup&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#call-for-speakers-rust-london-gamedev-meetup&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;I&#x27;m the community lead for &lt;a href=&quot;https:&#x2F;&#x2F;meetup.com&#x2F;Rust-London-User-Group&quot;&gt;Rust London&lt;&#x2F;a&gt; and I just wanted
to put out the feelers for anybody who is London based and would like
to give a talk at our Rust London Meetup.
We want to hold a special LDN Talks event solely focused on GameDev.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ecfb3x&#x2F;a_call_for_speakers_rust_london_meetup_gamedev&quot;&gt;See the details here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;a-b-street-adjust-traffic-patterns-in-real-cities&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet#ab-street&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; - Adjust Traffic Patterns in Real Cities&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-b-street-adjust-traffic-patterns-in-real-cities&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Ever been on a bus stuck in traffic, wondering why there are cars parked on the
road instead of a bus lane?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet#ab-street&quot;&gt;A&#x2F;B Street&lt;&#x2F;a&gt; is a game exploring how small changes to
road space and traffic signals affect the movement of drivers, cyclists,
transit users, and pedestrians. The game models Seattle as accurately as
possible using &lt;a href=&quot;https:&#x2F;&#x2F;openstreetmap.org&quot;&gt;OpenStreetMap&lt;&#x2F;a&gt; and other public datasets, lets the player adjust
existing infrastructure, and then does a detailed comparison to see who the
changes help and hurt.&lt;&#x2F;p&gt;
&lt;p&gt;A&#x2F;B Street is written in Rust, using a custom GUI library on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;glium&#x2F;glium&quot;&gt;glium&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;blob&#x2F;master&#x2F;docs&#x2F;INSTRUCTIONS.md&quot;&gt;Play it now&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues&quot;&gt;start contributing&lt;&#x2F;a&gt; to
expand the game to more cities, model light rail and shared foot&#x2F;bike paths,
and work on gameplay modes (like &amp;quot;make everything as slow as possible&amp;quot; and
&amp;quot;what if nobody owned and parked personal vehicles?&amp;quot;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;abstreet.gif&quot; alt=&quot;Demo of some UI work in A&#x2F;B Street&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;December highlights:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Preview traffic signal changes &amp;quot;live&amp;quot; without resetting the simulation&lt;&#x2F;li&gt;
&lt;li&gt;UI: new minimap, popup info panels with graphs, better shapes,
and colors for cars&lt;&#x2F;li&gt;
&lt;li&gt;Data viz: histogram showing count of faster&#x2F;slower trips, visualizing which
road has the longest backup at a traffic signal, breaking down the timeline
of a trip (walk to a car, drive somewhere, look for parking, walk to
destination...)&lt;&#x2F;li&gt;
&lt;li&gt;Improved pedestrian pathfinding and decisions to use a bus or not&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e9h7d4&#x2F;want_to_work_on_a_traffic_simulation_game&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vange-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;vange-rs&quot;&gt;vange-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vange-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;vangers.png&quot; alt=&quot;Vehicle&#x27;s collision shape&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kvark&#x2F;vange-rs&quot;&gt;vange-rs&lt;&#x2F;a&gt; is the project of re-implementing the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Vangers&quot;&gt;Vangers&lt;&#x2F;a&gt; game (from 1998)
in Rust using modern development practices, parallel computations, and GPU.&lt;&#x2F;p&gt;
&lt;p&gt;This month, the project has gained a few major features.
The biggest one is an implementation of the physics engine
completely on GPU in a closed loop.
At the same time, the CPU code path was fixed to allow
for a smooth ride (&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;e8r695&#x2F;vangers_gpu_physics_engine&quot;&gt;video&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Another pack of changes has landed to allow many NPC cars to be riding
the world alongside the user.
The renderer has shifted towards being completely instanced,
and CPU physics computations were parallelized.
The game can now host up to 50000 total cars on the level,
all simulated at once, with up to 5000 on screen at a time
(&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;eg3k6x&#x2F;spawning_4k_of_cars_in_vangers&quot;&gt;video&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;In minor features, it became possible to jump in the game
as well as change the car color.&lt;&#x2F;p&gt;
&lt;p&gt;The project has also started the &lt;a href=&quot;http:&#x2F;&#x2F;kvark.github.io&#x2F;vange-rs&quot;&gt;development blog&lt;&#x2F;a&gt;,
describing both new and old technology, such as:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&#x2F;vange-rs&#x2F;2019&#x2F;12&#x2F;12&#x2F;data-formats.html&quot;&gt;Data formats&lt;&#x2F;a&gt; used in the original game.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&#x2F;vange-rs&#x2F;2019&#x2F;12&#x2F;17&#x2F;collision-model.html&quot;&gt;Collision model&lt;&#x2F;a&gt; of the original game.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kvark.github.io&#x2F;vange-rs&#x2F;2019&#x2F;12&#x2F;19&#x2F;gpu-collisions.html&quot;&gt;Pure-GPU implementation&lt;&#x2F;a&gt; of the collision model.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;veloren1.png&quot; alt=&quot;Morning landscape&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open world, open-source voxel RPG
inspired by Dwarf Fortress and Cube World.&lt;&#x2F;p&gt;
&lt;p&gt;Some of December&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A formal changelog&lt;&#x2F;li&gt;
&lt;li&gt;Pathfinding&lt;&#x2F;li&gt;
&lt;li&gt;Airshipper launcher progress&lt;&#x2F;li&gt;
&lt;li&gt;Erosion system improvements&lt;&#x2F;li&gt;
&lt;li&gt;First animated UI elements&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can read more about some specific topics:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-48#character-states-overhaul-by-adam&quot;&gt;Character States Overhaul&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-46#airshipper-updates-with-songtronix&quot;&gt;Airshipper Update&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-46#sfx-with-shandley&quot;&gt;SFX&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-46&#x2F;#contributor-spotlight-angelonfira&quot;&gt;Contributor Spotlight: @AngelOnFira&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-45&#x2F;#pathfinding-by-chrischrischris&quot;&gt;Pathfinding&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-44&#x2F;#lantern-slides-mac-build-predicament&quot;&gt;Mac Build Predicament&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-44&#x2F;#lantern-slides-unfinished-rust-ci-blog&quot;&gt;Unfinished Rust CI Blog&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;veloren2.png&quot; alt=&quot;Sitting on the edge&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the works for January include player account authentication,
preliminary modding work, and character state systems.
There are ongoing talks that are also looking
into the networking system and optimizations.&lt;&#x2F;p&gt;
&lt;p&gt;December&#x27;s full weekly devlogs: &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-44&quot;&gt;#44&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-45&quot;&gt;#45&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-46&quot;&gt;#46&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-47&quot;&gt;#47&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-48&quot;&gt;#48&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;voxel-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technici4n&#x2F;voxel-rs&quot;&gt;voxel-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#voxel-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;voxel-rs.png&quot; alt=&quot;Some lake, hills, blue sunny sky and debug output&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technici4n&#x2F;voxel-rs&quot;&gt;voxel-rs&lt;&#x2F;a&gt; is a new multiplayer Minecraft-like sandbox game engine
written in Rust using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The game is currently under heavy development and it&#x27;s not yet playable.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The project&#x27;s roadmap is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Technici4n&#x2F;voxel-rs#roadmap&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussion:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e9qqnv&#x2F;in_the_works_minecraftlike_game_written_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tennis-academy-dash&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy: Dash&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy-dash&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;tennis-academy.gif&quot; alt=&quot;menu, levels, and customers&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1205891407606636544&quot;&gt;v0.1.2&lt;&#x2F;a&gt;..&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1207671483981537280&quot;&gt;v0.1.4&lt;&#x2F;a&gt;
versions of &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy: Dash&lt;&#x2F;a&gt;&amp;quot;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🖼️ art redesign, &amp;amp; new colour palette;&lt;&#x2F;li&gt;
&lt;li&gt;✂️ spritesheet and assets packing;&lt;&#x2F;li&gt;
&lt;li&gt;🧮 the game finally has a name: &amp;quot;Tennis Academy: Dash&amp;quot;;&lt;&#x2F;li&gt;
&lt;li&gt;⛱️ logo, splash screen, and UI polish.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;dank-defense&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;elijahlucian.itch.io&#x2F;dank-defense-theyre-coming&quot;&gt;Dank Defense&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dank-defense&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;dank-defense.gif&quot; alt=&quot;Trying to shoot down the missles&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;elijahlucian.itch.io&#x2F;dank-defense-theyre-coming&quot;&gt;Dank Defense&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ELI7VHBO7&quot;&gt;Elijah Lucian&lt;&#x2F;a&gt;
is a fun little missle defense game made in Rust using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;akigi&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#akigi&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;akigi.png&quot; alt=&quot;Akigi screenshot: map, character model, chat and panel&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;akigi.com&quot;&gt;Akigi&lt;&#x2F;a&gt; is a multiplayer online world where most believe that
humans are inferior.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Some of December&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The game server was ported to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;The spawning system was rewritten and simplified;&lt;&#x2F;li&gt;
&lt;li&gt;Initial scenery setup using YAML config files;&lt;&#x2F;li&gt;
&lt;li&gt;Pathfinding now works between arbitrarily sized sets of tiles;&lt;&#x2F;li&gt;
&lt;li&gt;Better test coverage;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Full December&#x27;s devlogs:
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2019&#x2F;2019-12-15.html&quot;&gt;#046&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2019&#x2F;2019-12-22.html&quot;&gt;#047&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;devjournal.akigi.com&#x2F;december-2019&#x2F;2019-12-29.html&quot;&gt;#048&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;eejnyl&#x2F;akigi_rust_wasm_webgl_game_dev_journal_047&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;garden-devlog-december&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;december&quot;&gt;Garden Devlog: December&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden-devlog-december&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=xU93FGrk1d8&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;garden.gif&quot; alt=&quot;Playing with dirt&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;new smooth soil editing demo&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around growing realistic plants.&lt;&#x2F;p&gt;
&lt;p&gt;Some of December&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;a new terrain system that doesn&#x27;t use voxels with surface nets anymore,
but regular cubic voxels with heightmaps (&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=xU93FGrk1d8&quot;&gt;video&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;new building materials;&lt;&#x2F;li&gt;
&lt;li&gt;improved rendering performance and compilation time;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;slavic-castles&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leinnan.itch.io&#x2F;slavic-castles&quot;&gt;Slavic Castles&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#slavic-castles&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;slavic-castles.jpg&quot; alt=&quot;Updated cards &amp;amp; battle UI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leinnan.itch.io&#x2F;slavic-castles&quot;&gt;Slavic Castles&lt;&#x2F;a&gt; is a card game inspired by &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Arcomage&quot;&gt;Arcomage&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The following changes were made since the last devlog:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;real cards that are loaded from JSON file;&lt;&#x2F;li&gt;
&lt;li&gt;the project migrated to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ryanisaacg&#x2F;quicksilver&quot;&gt;quicksilver&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;menu, simple animations and visual &amp;amp; audio feedback;&lt;&#x2F;li&gt;
&lt;li&gt;ability to save the game state.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;e4isx9&#x2F;card_game_progress&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;robo-instructus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;roboinstructus.jpg&quot; alt=&quot;logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; puzzle game -
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.18, 1.19, and 1.20 versions were released&lt;&#x2F;a&gt;:
UI tweaks, better translations (including full Russian translation!),
bugfixes, and performance optimizations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt; Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&quot;&gt;Azriel&lt;&#x2F;a&gt; published an &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2019&#x2F;12&#x2F;20&#x2F;i-see-the-character-in-ui&quot;&gt;&amp;quot;I See The Character In UI&amp;quot;&lt;&#x2F;a&gt; devlog:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Character selection UI displays the character that the player will use.&lt;&#x2F;li&gt;
&lt;li&gt;Control settings UI allows players to view the configured control keys.&lt;&#x2F;li&gt;
&lt;li&gt;User interfaces (UIs) are largely defined through configuration,
making development and customization easier.&lt;&#x2F;li&gt;
&lt;li&gt;Events to control application behaviour can be defined in configuration.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=aQiK5rOylCY&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;will.png&quot; alt=&quot;Controls menu&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dave_tucker&quot;&gt;@dave_tucker&lt;&#x2F;a&gt; is reimplementing some classics.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dave_tucker&#x2F;status&#x2F;1208103971044438017&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;mines.gif&quot; alt=&quot;minesweeper&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt; has been adding animations and boss enemies to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;Space Shooter&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1208128889891033095&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;space-shooter.gif&quot; alt=&quot;boss enemy&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;a5huynh&quot;&gt;@a5huynh&lt;&#x2F;a&gt; got the rotating map working;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;amethyst-rotating-map.gif&quot; alt=&quot;Rotating map&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;ultraviolet-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;grayolson.me&#x2F;blog&#x2F;posts&#x2F;ultraviolet-0.4&quot;&gt;ultraviolet v0.4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ultraviolet-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;rayn.png&quot; alt=&quot;Rayn output example - this renderer uses ultraviolet for its math&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt; is a crate for computer-graphics and games-related linear algebra,
but &lt;em&gt;fast&lt;&#x2F;em&gt;, both in terms of productivity and in terms of runtime performance.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;grayolson.me&#x2F;blog&#x2F;posts&#x2F;ultraviolet-0.4&quot;&gt;ultraviolet v0.4&lt;&#x2F;a&gt; was released by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fu5ha&quot;&gt;@fu5ha&lt;&#x2F;a&gt;.
It brings
&lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ultraviolet&#x2F;0.4.3&#x2F;ultraviolet&#x2F;transform&#x2F;index.html&quot;&gt;transform&lt;&#x2F;a&gt;
&amp;amp; &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;ultraviolet&#x2F;0.4.3&#x2F;ultraviolet&#x2F;projection&#x2F;index.html&quot;&gt;projection&lt;&#x2F;a&gt; modules
and many smaller improvements.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;grayolson.me&#x2F;blog&#x2F;posts&#x2F;ultraviolet-0.4&quot;&gt;full release announcement post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;component-group-v0-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sunjay&#x2F;component_group&quot;&gt;component_group&lt;&#x2F;a&gt; v0.2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#component-group-v0-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sunjay&#x2F;component_group&quot;&gt;component_group&lt;&#x2F;a&gt; is a crate for working with a group of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt;::Components.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This crate defines the &lt;a href=&quot;https:&#x2F;&#x2F;docs.rs&#x2F;component_group&#x2F;2.0.0&#x2F;component_group&#x2F;trait.ComponentGroup.html&quot;&gt;ComponentGroup&lt;&#x2F;a&gt; trait.
This trait is used to make managing a group of &lt;code&gt;specs::Component&lt;&#x2F;code&gt; instances easier.
This is useful when you have several components that are often
created, read, and updated together.
You can use this trait to easily move an entire group of components
between instances of specs::World.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;a-thought-experiment-using-an-ecs-outside-of-game-engines&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;adventures.michaelfbryan.com&#x2F;posts&#x2F;ecs-outside-of-games&quot;&gt;A Thought Experiment: Using an ECS Outside of Game Engines&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#a-thought-experiment-using-an-ecs-outside-of-game-engines&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;adventures.michaelfbryan.com&#x2F;posts&#x2F;ecs-outside-of-games&quot;&gt;This article&lt;&#x2F;a&gt; by &lt;a href=&quot;http:&#x2F;&#x2F;adventures.michaelfbryan.com&quot;&gt;Michael Bryan&lt;&#x2F;a&gt; discusses
the usage of the ECS pattern in a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Computer-aided_design&quot;&gt;CAD&lt;&#x2F;a&gt; library.
It&#x27;s obviously not about games,
but it still can be interesting for some game developers.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;egcvil&#x2F;a_thought_experiment_using_an_ecs_outside_of_game&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;lyon-v0-15&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nical.github.io&#x2F;posts&#x2F;new-tessellator.html&quot;&gt;Lyon v0.15&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#lyon-v0-15&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;lyon-sweep-v-h.png&quot; alt=&quot;The triangles generated with vertical and horizontal traversals of the same path&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&quot;&gt;Lyon&lt;&#x2F;a&gt; a rust crate to tessellate arbitrary 2D shapes into
triangle meshes that can be easily rendered on the GPU.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;nical.github.io&quot;&gt;@nical&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;nical.github.io&#x2F;posts&#x2F;new-tessellator.html&quot;&gt;Lyon 0.15&lt;&#x2F;a&gt;.
The fill tessellator was rewritten from scratch (it took two years),
it should solve robustness issues the previous implementation had
and also has a bunch of new features.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;nical.github.io&#x2F;posts&#x2F;new-tessellator.html&quot;&gt;full release announcement post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;efz5jb&#x2F;lyon_0150_a_new_tessellator&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;winit-v0-20-alpha-and-web-support&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;winit-0-20-and-web-support&#x2F;36155&quot;&gt;winit v0.20-alpha and Web Support&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#winit-v0-20-alpha-and-web-support&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt; is a pure-Rust library for creating and managing windows.&lt;&#x2F;p&gt;
&lt;p&gt;A new alpha release of winit brings the web support.
The web version expectedly has some API limitations
(like window decorations, resizing, fullscreen, etc).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Web support is very much in alpha, and we&#x27;d like to encourage you
to try it out and stress-test it so we can see where
the issues are and improve where necessary.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Check out &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;winit-0-20-and-web-support&#x2F;36155&quot;&gt;the announcement post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;efz0rm&#x2F;winit_020_and_web_support&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;the-state-of-ggez-2020&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;wiki.alopex.li&#x2F;TheStateOfGGEZ2020&quot;&gt;The State Of GGEZ 2020&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#the-state-of-ggez-2020&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;ggez-logo-maroon-full.svg&quot; alt=&quot;GGEZ logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt; is a lightweight game framework for making 2D games with minimum friction,
inspired by &lt;a href=&quot;https:&#x2F;&#x2F;love2d.org&quot;&gt;love2D&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;icefoxen&quot;&gt;Icefox&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;wiki.alopex.li&#x2F;TheStateOfGGEZ2020&quot;&gt;&amp;quot;The State Of GGEZ 2020&amp;quot;&lt;&#x2F;a&gt; blog post
with an overview of what happened in ggez&#x27;s development this year,
what is the current ggez 0.6 development status,
what&#x27;s in the roadmap, and thoughts about the Rust ecosystem.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eh7wkx&#x2F;the_state_of_ggez_2020&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;miniquad&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#miniquad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;miniquad.gif&quot; alt=&quot;miniquad demos&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;miniquad&quot;&gt;miniquad&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; is a safe cross-platform rendering library
focused on portability and low-end platforms support.&lt;&#x2F;p&gt;
&lt;p&gt;Web demos:
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;quad.html&quot;&gt;quad&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;offscreen.html&quot;&gt;offscreen&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;astroblasto.html&quot;&gt;astroblasto&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;arkanoid.html&quot;&gt;arkanoid&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;not-fl3.github.io&#x2F;miniquad-samples&#x2F;zemeroth.html&quot;&gt;zemeroth&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; also posted a few Patreon updates this month:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;posts&#x2F;32234274&quot;&gt;&amp;quot;Status update&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;posts&#x2F;rust-2d-engine-32439672&quot;&gt;&amp;quot;Rust 2D Engine, Rendering revisited&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;godot-and-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot&lt;&#x2F;a&gt; and Rust&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-and-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;After a year of work &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GodotNativeTools&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt; 0.7 bindings were released.
Some of the updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Rust 2018;&lt;&#x2F;li&gt;
&lt;li&gt;The API description of Godot classes was updated to the stable Godot version 3.1.1;&lt;&#x2F;li&gt;
&lt;li&gt;More helper traits and  derive&#x2F;procedural macroses to reduce the boilerplate;&lt;&#x2F;li&gt;
&lt;li&gt;Iterators for Godot collection types;&lt;&#x2F;li&gt;
&lt;li&gt;New example projects;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, check out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tom-leys&#x2F;godot-rust&#x2F;tree&#x2F;feature_specs_integration_example&#x2F;examples&#x2F;specs_integration&quot;&gt;a Godot-Specs example project&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;@RecallSingularity&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;raylib-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deltaphc&#x2F;raylib-rs&quot;&gt;raylib-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#raylib-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deltaphc&#x2F;raylib-rs&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;raylib-rs.png&quot; alt=&quot;raylib-rs minimalistic logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;raylib.com&quot;&gt;raylib&lt;&#x2F;a&gt; is a simple C 2D&#x2F;3D game engine with virtually no dependencies.
This month, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deltaphc&#x2F;raylib-rs&quot;&gt;raylib-rs&lt;&#x2F;a&gt; 1.0 was released - mostly idiomatic
and thread-safe Rust raylib bindings.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;deltaphc&#x2F;raylib-rs&#x2F;blob&#x2F;7e387774c&#x2F;samples&#x2F;roguelike.rs&quot;&gt;Check out an example of a roguelike game here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ednyyz&#x2F;check_out_raylibrs_rust_bindings_for_the_raylib&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;makepad&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;makepad.nl&quot;&gt;Makepad&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#makepad&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;makepad.nl&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;makepad.jpg&quot; alt=&quot;Makepad in action&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;makepad.nl&quot;&gt;Makepad&lt;&#x2F;a&gt; is a creative software development platform for Rust
that compiles to WASM&#x2F;WebGL, macOS&#x2F;Metal, Windows&#x2F;DX11, Linux&#x2F;OpenGL.&lt;&#x2F;p&gt;
&lt;p&gt;An early alpha version of Makepad Basic was launched.
This version shows off the development platform,
but does not include the visual design tools or library ecosystem yet.&lt;&#x2F;p&gt;
&lt;p&gt;Play with Rust+Wasm live at &lt;a href=&quot;http:&#x2F;&#x2F;makepad.nl&quot;&gt;makepad.nl&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e6zcp3&#x2F;introducing_makepad_live_editing&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tetra-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra&lt;&#x2F;a&gt; v0.3&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tetra-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;tetra.seventeencups.net&quot;&gt;Tetra&lt;&#x2F;a&gt; is a simple 2D game framework
that uses SDL2 for event handling and OpenGL 3.2+ for rendering.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&quot;&gt;@17cupsofcoffee&lt;&#x2F;a&gt; has released Tetra v0.3.
Main changes are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nalgebra.org&quot;&gt;nalgebra&lt;&#x2F;a&gt; linalg library was replaced with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yoanlcq&#x2F;vek&quot;&gt;vek&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Improved window&#x2F;input events;&lt;&#x2F;li&gt;
&lt;li&gt;Improved cameras&#x2F;transform matrices;&lt;&#x2F;li&gt;
&lt;li&gt;More flexible screen scaling;&lt;&#x2F;li&gt;
&lt;li&gt;Better error handling;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md&quot;&gt;Read the full changelog here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;17cupsofcoffee&quot;&gt;@17cupsofcoffee&lt;&#x2F;a&gt; also posted &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;17cupsofcoffee&#x2F;f5082a13626ddf0030075d542262c728&quot;&gt;a little example&lt;&#x2F;a&gt;
of how you can implement pooling for sound effects&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is handy for situations where you don&#x27;t want more than X instances of the same sound playing at once (e.g. if the player is able to fire a weapon as fast as they can hit a button), etc...&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puppetmaster.itch.io&#x2F;compact-space&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;compact-space.gif&quot; alt=&quot;Compact Space gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fischspiele&#x2F;status&#x2F;1206014736300728322&quot;&gt;@puppetmaster updated their &amp;quot;Compact Space&amp;quot; game&lt;&#x2F;a&gt;
to Tetra 0.3, added some sound effects and a little x-max surprise.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JohanLindfors&quot;&gt;@JohanLindfors&lt;&#x2F;a&gt; updated their &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;programmeramera&#x2F;snake-in-tetra&quot;&gt;Snake&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;programmeramera&#x2F;flappy-in-rust&quot;&gt;Flappy Bird&lt;&#x2F;a&gt; sample games to Tetra 0.3.&lt;&#x2F;p&gt;
&lt;p&gt;Also, the Snake sample now has
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;programmeramera&#x2F;snake-in-tetra&#x2F;tree&#x2F;5c7cc79f8&#x2F;tutorial&quot;&gt;a ten step tutorial on how to build it from scratch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rg3d-sound&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-sound&quot;&gt;rg3d-sound&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rg3d-sound&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-sound&quot;&gt;rg3d-sound&lt;&#x2F;a&gt; is a new sound library in active development.&lt;&#x2F;p&gt;
&lt;p&gt;This month it has gained three major features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Head-related_transfer_function&quot;&gt;Head-related transfer function&lt;&#x2F;a&gt; support - it provides perfect binaural sound.
Try it: &lt;code&gt;cargo run --example hrtf --release&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Reverberation&quot;&gt;Reverberation&lt;&#x2F;a&gt; support - basic effect that gives your scene &amp;quot;sound volume&amp;quot;.
Try it: &lt;code&gt;cargo run --example reverb --release&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Vorbis&quot;&gt;Vorbis&#x2F;ogg&lt;&#x2F;a&gt; support - a compressed format similar to mp3.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d-sound&quot;&gt;rg3d-sound&lt;&#x2F;a&gt; is a component of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mrDIMAS&#x2F;rg3d&quot;&gt;rg3d&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;siebencorgie-s-voxel-engine&quot;&gt;@siebencorgie&#x27;s Voxel Engine&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#siebencorgie-s-voxel-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;siebencorgie-voxels.jpeg&quot; alt=&quot;roughness-based reflections&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;siebencorgie&quot;&gt;@siebencorgie&lt;&#x2F;a&gt; got &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;siebencorgie&#x2F;status&#x2F;1209086915925991425&quot;&gt;voxel global illumination&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;siebencorgie&#x2F;status&#x2F;1201171106641698816&quot;&gt;voxel cone traced reflections&lt;&#x2F;a&gt; working in their voxel engine.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;introduction-to-rendology&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leod.github.io&#x2F;rust&#x2F;gamedev&#x2F;rendology&#x2F;2019&#x2F;12&#x2F;13&#x2F;introduction-to-rendology.html&quot;&gt;Introduction to Rendology&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#introduction-to-rendology&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;rendology_hdr_0_4.png&quot; alt=&quot;Rendology demo screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;leod&#x2F;rendology&quot;&gt;Rendology&lt;&#x2F;a&gt; is a 3D rendering pipeline based on Glium and written in Rust.
It features basic implementations of shadow mapping, deferred shading, a glow effect, FXAA and instanced rendering.&lt;&#x2F;p&gt;
&lt;p&gt;An &lt;a href=&quot;https:&#x2F;&#x2F;leod.github.io&#x2F;rust&#x2F;gamedev&#x2F;rendology&#x2F;2019&#x2F;12&#x2F;13&#x2F;introduction-to-rendology.html&quot;&gt;&amp;quot;Introduction to Rendology&amp;quot;&lt;&#x2F;a&gt; article
outlines some of the concepts of Rendology
and describes how they came to be this way.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eaj6su&#x2F;introduction_to_rendology_a_gliumbased_rendering&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxygengine-v0-5&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; v0.5&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine-v0-5&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;oxygengine-dark-logo.svg&quot; alt=&quot;Oxygengine logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&quot;&gt;Oxygengine&lt;&#x2F;a&gt; is
&amp;quot;the hottest HTML5 + WASM game engine for games written in Rust with web-sys&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;Main updates of v0.5 version:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Automated asset packs generation on build phase;&lt;&#x2F;li&gt;
&lt;li&gt;Loading assets from asset packs;&lt;&#x2F;li&gt;
&lt;li&gt;Support for audio: sound effects (buffered) and background music &amp;gt; (streaming);&lt;&#x2F;li&gt;
&lt;li&gt;Support for 2D physics (rigid bodies and colliders) via &lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&#x2F;&quot;&gt;nphysics2d&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;A new example: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;basic-web-game&quot;&gt;a basic web game&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ei8754&#x2F;oxygengine_v050_2020_edition_release_of_the&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun-december-2019&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;1&#x2F;1&#x2F;this-month-december&quot;&gt;This Month in Mun - December 2019&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun-december-2019&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;mun_logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused on quick iteration times
that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2020&#x2F;1&#x2F;1&#x2F;this-month-december&quot;&gt;December updates&lt;&#x2F;a&gt; include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Parsing of tuple data structures;&lt;&#x2F;li&gt;
&lt;li&gt;Parsing and type inferencing of data structure literals;&lt;&#x2F;li&gt;
&lt;li&gt;Indexing of data structure fields;&lt;&#x2F;li&gt;
&lt;li&gt;Improved handling of data structure information;&lt;&#x2F;li&gt;
&lt;li&gt;Type checking of binary operations;&lt;&#x2F;li&gt;
&lt;li&gt;A community member made a PoC of Mun-powered hot reloading
in &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rust-roguelike-tutorial&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Rust Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;rl-c63-s4.gif&quot; alt=&quot;Roguelike gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
includes almost 70 chapters now and continues to grow!&lt;&#x2F;p&gt;
&lt;p&gt;Some of the December&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;item identification and magical weapons;&lt;&#x2F;li&gt;
&lt;li&gt;a generic &amp;quot;effects&amp;quot; system;&lt;&#x2F;li&gt;
&lt;li&gt;cursed items, scrolls of remove curse, and item identification scrolls;&lt;&#x2F;li&gt;
&lt;li&gt;items that affect your attributes, generic statuses;&lt;&#x2F;li&gt;
&lt;li&gt;spells, spellbooks, weapon proc fx, mob special abilities, DoT, initiative +&#x2F;- effects;&lt;&#x2F;li&gt;
&lt;li&gt;a dragon lair in a ruined fort;&lt;&#x2F;li&gt;
&lt;li&gt;multi-tile entities including pathfinding;&lt;&#x2F;li&gt;
&lt;li&gt;parameterized procgen of magic weaponry&#x2F;armor;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, check out
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;roguelikedev&#x2F;comments&#x2F;eij9nl&#x2F;2020_in_roguelikedev_one_knight_in_the_dungeon&quot;&gt;@blackfuture&#x27;s 2019 Roguelike Development Retrospective post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;doryen-rs-v1-2-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jice-nospam&#x2F;doryen-rs&quot;&gt;doryen-rs&lt;&#x2F;a&gt; v1.2.1&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#doryen-rs-v1-2-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jice-nospam.github.io&#x2F;doryen-rs&#x2F;docs&#x2F;demo&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;doryen-small.png&quot; alt=&quot;Visual demo screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jice-nospam&#x2F;doryen-rs&quot;&gt;doryen-rs&lt;&#x2F;a&gt; is an ASCII roguelike library with native and WASM support.
Uses the uni-gl and uni-app crates from the &lt;a href=&quot;http:&#x2F;&#x2F;github.com&#x2F;unrust&#x2F;unrust&quot;&gt;unrust&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jice-nospam&#x2F;doryen-rs&quot;&gt;doryen-rs&lt;&#x2F;a&gt; v1.2.1 was released this month.
Some of the new features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;added InputApi.keys_released() and InputApi.keys_pressed()
that return iterators on key events since last update;&lt;&#x2F;li&gt;
&lt;li&gt;added alpha example showcasing framebuffer overdrawing;&lt;&#x2F;li&gt;
&lt;li&gt;added text input support through InputApi.text();&lt;&#x2F;li&gt;
&lt;li&gt;added a visual demo showcasing subcell resolution + dynamic lighting
in a real time roguelike;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;nes-rust-wasm-nes-emulator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;takahirox&#x2F;nes-rust&quot;&gt;nes-rust&lt;&#x2F;a&gt; - WASM &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Nintendo_Entertainment_System&quot;&gt;NES&lt;&#x2F;a&gt; Emulator&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nes-rust-wasm-nes-emulator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;nes-multiplay.png&quot; alt=&quot;Multiplayer session&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;takahirox&#x2F;nes-rust&quot;&gt;nes-rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;superhoge&quot;&gt;@superhoge&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Nintendo_Entertainment_System&quot;&gt;NES&lt;&#x2F;a&gt; (Famicom) emulator in Rust on the Web, compiled to WASM.&lt;&#x2F;p&gt;
&lt;p&gt;This month nes-rust got remote multiplay:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once you enter a room, share the URL with someone
and start the game you want to play with them. Enjoy!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;raw.githack.com&#x2F;takahirox&#x2F;nes-rust&#x2F;WebRTC&#x2F;multiplay.html&quot;&gt;Try it!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rx-v0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&quot;&gt;rx v0.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rx-v0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&#x2F;gifs&#x2F;demo.gif&quot; alt=&quot;Animation editing sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&quot;&gt;rx&lt;&#x2F;a&gt; is an extensible, modern and minimalist pixel editor,
designed with great care and love for artists and hackers.
It was conceived to have as little UI as possible,
and instead focus on the work.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The 0.3 release comes with:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&#x2F;videos&#x2F;manipulating.webm&quot;&gt;vim-like visual mode&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;a &lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&quot;&gt;new website&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;and a &lt;a href=&quot;https:&#x2F;&#x2F;rx.cloudhead.io&#x2F;guide.html&quot;&gt;user guide&lt;&#x2F;a&gt;!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;eh6it4&#x2F;rx_v03_released_with_user_guide_a_modern_pixel&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;texel-ascii-art-editor&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;almindor&#x2F;texel&quot;&gt;Texel&lt;&#x2F;a&gt; - ASCII Art Editor&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#texel-ascii-art-editor&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;almindor&#x2F;texel&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;texel.png&quot; alt=&quot;Texel tutorial screen&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;almindor&#x2F;texel&quot;&gt;Texel&lt;&#x2F;a&gt; is an ASCII art and landscape editor with VIM-like controls.
It aims to make editing ASCII art easy especially for use in games.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ebmbt2&#x2F;introducing_texel_ascii_art_editor&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;embark-developer-newsletter-002&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;us20.campaign-archive.com&#x2F;?u=4206f0696b8b13a996c701852&amp;amp;id=0339af3ed2&quot;&gt;Embark: Developer Newsletter 002&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#embark-developer-newsletter-002&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;embark.png&quot; alt=&quot;Embark&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;Embark&lt;&#x2F;a&gt; posted &lt;a href=&quot;https:&#x2F;&#x2F;us20.campaign-archive.com&#x2F;?u=4206f0696b8b13a996c701852&amp;amp;id=0339af3ed2&quot;&gt;the second issue of their newsletter&lt;&#x2F;a&gt;.
Here&#x27;re some of the Rust news from it:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;embarkstudios&#x2F;inside-rust-at-embark-b82c06d1d9f4&quot;&gt;&amp;quot;Inside Rust at Embark 🦀&amp;quot;&lt;&#x2F;a&gt; - a peek inside Embark&#x27;s
day-to-day work with Rust and open source gamedev
(&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e7120k&#x2F;inside_rust_at_embark&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;embarkstudios&#x2F;cargo-about&quot;&gt;cargo-about&lt;&#x2F;a&gt; - a cargo plugin to generate list of all licenses for a crate
(&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e74uux&#x2F;embarkstudioscargoabout_cargo_plugin_to_generate&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;32&quot;&gt;#32 &amp;quot;Selective Enabling&#x2F;Disabling optimizations at a crate&#x2F;file&#x2F;function level&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;46&quot;&gt;#46 &amp;quot;Make sure key crates have &lt;code&gt;crev&lt;&#x2F;code&gt; code reviews&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;69&quot;&gt;#69 &amp;quot;Input Handling&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;71&quot;&gt;#71&amp;quot; Proof Of Concept Crate: Simplistic Bump Allocator&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;75&quot;&gt;#75 &amp;quot;Standardised API for sharing thread pools&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;77&quot;&gt;#77 &amp;quot;Can we contribute to OpenXR to get Keyboard&#x2F;Mouse support to be official?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;79&quot;&gt;#79 &amp;quot;Polymorph project&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabreegster&#x2F;abstreet&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;A&#x2F;B Street&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=n-txrCMvdms&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-005&#x2F;modulator_youtube.gif&quot; alt=&quot;Modulator video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;click to see &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=n-txrCMvdms&quot;&gt;the tutorial video&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In the November of 2018,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AndreaPessino&quot;&gt;@AndreaPessino&lt;&#x2F;a&gt; (Founder&#x2F;CTO of &lt;a href=&quot;https:&#x2F;&#x2F;readyatdawn.com&quot;&gt;Ready At Dawn&lt;&#x2F;a&gt; Studios)
released a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apessino&#x2F;modulator&quot;&gt;Modulator&lt;&#x2F;a&gt; crate and
an awesome &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=n-txrCMvdms&quot;&gt;&amp;quot;Modulator (Rust conding series)&amp;quot;&lt;&#x2F;a&gt; tutorial video about it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apessino&#x2F;modulator&quot;&gt;Modulator&lt;&#x2F;a&gt; is a Rust crate for abstracted, decoupled modulation sources.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Modulators are sources of change over time which exist
independently of the parameters they affect, their destinations.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Modulator comes with playground&#x2F;testbed application &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;apessino&#x2F;modulator_play&quot;&gt;Modulator Play&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;An environment to visualize and test the modulator crate and to experiment
with expressive 2d primitive rendering.
Based on Piston Window, this application is meant to be both a test bed
for the Modulator crate and its included source types,
and a minimal friction environment to experiment with Rust coding.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;9zem4v&#x2F;modulator_andrea_pessino_on_twitter&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;en7tki&#x2F;this_month_in_rust_gamedev_5_december_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1215998150118461440&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>This Month in Rust GameDev #4 - November 2019</title>
                <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
                <link>https://rust-gamedev.github.io/posts/newsletter-004/</link>
                <guid>https://rust-gamedev.github.io/posts/newsletter-004/</guid>
                <description>&lt;!-- markdownlint-disable no-trailing-punctuation --&gt;
&lt;p&gt;Welcome to the fourth issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;le-train-dispatcher-route-trains-in-simulated-rail-network&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;athorus.itch.io&#x2F;ltd&quot;&gt;Le Train Dispatcher&lt;&#x2F;a&gt; - Route Trains in Simulated Rail Network&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#le-train-dispatcher-route-trains-in-simulated-rail-network&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;ltd.gif&quot; alt=&quot;Demo of Le Train Dispatcher&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Le Train Dispatcher (&lt;a href=&quot;http:&#x2F;&#x2F;athorus.itch.io&#x2F;ltd&quot;&gt;itch.io&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;athorus&quot;&gt;Patreon&lt;&#x2F;a&gt;)
allows you to route trains in a fully simulated rail network.
Particular care has been taken on the realistic management of light signals
(block systems, switch protection), train physics and curve tracing.&lt;&#x2F;p&gt;
&lt;p&gt;The game is programmed in Rust and the main crates used are: ggez, imgui and serde.&lt;&#x2F;p&gt;
&lt;p&gt;This first version is fully playable, but if you want to comment,
bring your ideas or contribute to the development of the game,
in any way, do not hesitate to post a &lt;a href=&quot;https:&#x2F;&#x2F;athorus.itch.io&#x2F;ltd&#x2F;community&quot;&gt;message&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Unique characteristics:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Realistic light signals simulation:
Huge engineering work has been done to have realistic
management of railway signaling.&lt;&#x2F;li&gt;
&lt;li&gt;No collision:
Yes it&#x27;s fun to watch many trains running automatically without getting in.
All your actions are checked: you cannot put the trains in danger.&lt;&#x2F;li&gt;
&lt;li&gt;True physics
&lt;ul&gt;
&lt;li&gt;Each locomotive or wagon has its own weight,
its driving or braking force, its coefficient of adhesion.&lt;&#x2F;li&gt;
&lt;li&gt;The curves are not simple circles, they are calculated with
the same equations as those used in real road or rail networks.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;veloren.png&quot; alt=&quot;Character creation screen&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open-world, open-source multiplayer voxel RPG.
The game is in an early stage of development, but is playable.&lt;&#x2F;p&gt;
&lt;p&gt;Some of November&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The main repository reached 50,000 lines of code (according to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;XAMPPRocky&#x2F;tokei&quot;&gt;Tokei&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;airshipper&quot;&gt;Airshipper launcher&lt;&#x2F;a&gt; was significantly improved;&lt;&#x2F;li&gt;
&lt;li&gt;game design working group was started;&lt;&#x2F;li&gt;
&lt;li&gt;improved auth, player creation screen, asset compression, lore, and soundtrack;&lt;&#x2F;li&gt;
&lt;li&gt;CI upgrades, lots of bugfixes and content upgrades.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The full weekly devlogs &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-40&quot;&gt;#40&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-41&quot;&gt;#41&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-42&quot;&gt;#42&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-43&quot;&gt;#43&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Check out a new video &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=IIl271iDulY&quot;&gt;&amp;quot;What is Veloren?&amp;quot;&lt;&#x2F;a&gt;
by @DoNeo and @RonVal4 (it&#x27;s in Russian but has English subtitles):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=IIl271iDulY&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;veloren-video.png&quot; alt=&quot;Youtube preview img&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Also, they&#x27;ve written &lt;a href=&quot;https:&#x2F;&#x2F;dtf.ru&#x2F;indie&#x2F;83725-veloren-igra-mechty&quot;&gt;an article in Russian about Veloren for dtf.ru&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;math-defense&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jackmott.itch.io&#x2F;math-defense&quot;&gt;Math Defense&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#math-defense&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;math-def.png&quot; alt=&quot;Math Defense screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jackmott.itch.io&#x2F;math-defense&quot;&gt;Math Defense&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;512Avx&quot;&gt;@512Avx&lt;&#x2F;a&gt; is a math game for kids.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Progress through addition, subtraction, multiplication, and division
by solving the math problems to shoot down enemy space ships.
Multiple difficulty levels and fully customizable by editing the levels.json file.
Create your own levels, change the difficulty, whatever you like.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jackmott&#x2F;mathblaster&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sulis-basic-resource-management&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&#x2F;dev-modding&#x2F;9-dev&#x2F;15-managing-resources&quot;&gt;Sulis: Basic Resource Management&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sulis-basic-resource-management&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;sulis_logo.png&quot; alt=&quot;Sulis logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&#x2F;dev-modding&#x2F;9-dev&#x2F;15-managing-resources&quot;&gt;Sulis&lt;&#x2F;a&gt; is a Role-Playing Game (RPG) with turn-based, tactical combat,
deep character customization, and an engaging storyline.&lt;&#x2F;p&gt;
&lt;p&gt;This month, an article &lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&#x2F;dev-modding&#x2F;9-dev&#x2F;15-managing-resources&quot;&gt;&amp;quot;Basic Resource Management&amp;quot;&lt;&#x2F;a&gt;
was published:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In developing Sulis, one of the primary goals
is easy and powerful modding capabilities.
To that end, virtually all resources are defined via simple YAML files.
The idea is that anyone with a text editor can create new resources
or edit existing ones easily.
However, this immediately brings up the question of how to manage
all these resources within the game&#x27;s state.
In Sulis, this is handled via a central resource manager.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;While Sulis is used as the primary example,
the article should apply to pretty much any game.&lt;&#x2F;p&gt;
&lt;p&gt;Also, the project (the game itself and its source code)
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=gvibvDiVzn8&quot;&gt;was reviewed by gamefromscratch.com&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;du48iw&#x2F;sulis_an_rpg_created_using_rust_gamesfromscratch&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;h3 id=&quot;paddlers-fun-with-rust-and-distributed-systems&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.jakobmeier.ch&#x2F;blogging&#x2F;Paddlers_3.html&quot;&gt;Paddlers: Fun with Rust and distributed systems&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#paddlers-fun-with-rust-and-distributed-systems&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.jakobmeier.ch&#x2F;blogging&#x2F;Paddlers_3.html&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;paddlers-arch.png&quot; alt=&quot;Paddlers architecture scheme&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakmeier&#x2F;paddlers-browser-game&quot;&gt;Paddlers&lt;&#x2F;a&gt; is a multi-player real-time strategy browser game
about making all Paddland&#x27;s ducks happy.&lt;&#x2F;p&gt;
&lt;p&gt;Check out a live demo at &lt;a href=&quot;http:&#x2F;&#x2F;demo.paddlers.ch&quot;&gt;demo.paddlers.ch&lt;&#x2F;a&gt;
(a test user&#x27;s username is &amp;quot;Tester&amp;quot;, password is &amp;quot;1&amp;quot;).&lt;&#x2F;p&gt;
&lt;p&gt;This month the third devlog was published:
&lt;a href=&quot;https:&#x2F;&#x2F;www.jakobmeier.ch&#x2F;blogging&#x2F;Paddlers_3.html&quot;&gt;&amp;quot;#3: Fun with Rust and distributed systems&amp;quot;&lt;&#x2F;a&gt;.
It overviews the architecture and implementation of the project.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum-drop-tables&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;11&quot;&gt;Antorum: Drop Tables&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum-drop-tables&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;antorum.jpeg&quot; alt=&quot;screenshot: battlefield after slaying some chonkrats&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt; is a multiplayer RPG where players build their characters
and fight against the growing threats on the isle.
The game server is authoritative and written in Rust,
while the client is written in Unity&#x2F;C#.&lt;&#x2F;p&gt;
&lt;p&gt;This month, @dooskington published
the &lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;11&quot;&gt;11th devlog &amp;quot;Drop Tables&amp;quot;&lt;&#x2F;a&gt;
about the implementation of a drop table system to handle monster loot.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;recall-singularity-november-progress&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;recalling-nov-2019-236cdf9c0a8a&quot;&gt;Recall Singularity: November Progress&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#recall-singularity-november-progress&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=AoPSAoqmTCk&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;recall-sing.gif&quot; alt=&quot;Demo of the basic ship collision&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;Demo of the basic ship collision.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;Tom Leys&lt;&#x2F;a&gt; is working on a &amp;quot;The Recall Singularity&amp;quot; game
about designing autonomous factory ships and stations
and this month they published a devlog post:
&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;recalling-nov-2019-236cdf9c0a8a&quot;&gt;&amp;quot;Recalling Nov 2019&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can also &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=AoPSAoqmTCk&quot;&gt;watch a video version here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Summary:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;basic networked inputs to move ships or players;&lt;&#x2F;li&gt;
&lt;li&gt;physics for ships, including collisions;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;recallsingularity&quot;&gt;Twich streaming the development&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;a more generic approach to syncronising from Rust (Specs) to Godot.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;slavic-castles&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leinnan.itch.io&#x2F;slavic-castles&quot;&gt;Slavic Castles&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#slavic-castles&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;castles.jpg&quot; alt=&quot;Just a screenshot of some battle&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;leinnan.itch.io&#x2F;slavic-castles&quot;&gt;Slavic Castles&lt;&#x2F;a&gt; is a card game inspired by &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Arcomage&quot;&gt;Arcomage&lt;&#x2F;a&gt;
written in Rust using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&quot;&gt;ggez&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;good-web-game&quot;&gt;good-web-game&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;You can play online &lt;a href=&quot;http:&#x2F;&#x2F;leinnan.ayz.pl&#x2F;ukw&#x2F;slavic_castles&#x2F;index.html&quot;&gt;here&lt;&#x2F;a&gt;
or on &lt;a href=&quot;https:&#x2F;&#x2F;leinnan.itch.io&#x2F;slavic-castles&quot;&gt;itch.io&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Leinnan&#x2F;slavic_castles&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;dsm2dh&#x2F;card_game_inspired_by_arcomage&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tennis-academy&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;tennis-academy.gif&quot; alt=&quot;robots demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1192178573488070659&quot;&gt;v0.0.5&lt;&#x2F;a&gt;..&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1199073510443945985&quot;&gt;v0.1.0&lt;&#x2F;a&gt;
versions of &lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;⏰ players have patience levels and leave when they get bored;&lt;&#x2F;li&gt;
&lt;li&gt;✨ score multipliers with text effects;&lt;&#x2F;li&gt;
&lt;li&gt;🥇 winning and losing states;&lt;&#x2F;li&gt;
&lt;li&gt;🤖 no more people, the robots have taken over!&lt;&#x2F;li&gt;
&lt;li&gt;🎨 new colour palette and graphics, new buttons and UI (using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&quot;&gt;Iced&lt;&#x2F;a&gt;).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;twenty-asteroids&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pum-purum-pum-pum.itch.io&#x2F;twenty-asteroids&quot;&gt;Twenty Asteroids&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#twenty-asteroids&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1197855075269521409&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;asteroids-demo.gif&quot; alt=&quot;space ship destroys enemies and asteroids with plasma beams&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The game is now officially named &amp;quot;Twenty Asteroids&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;@VladZhukov0&lt;&#x2F;a&gt; published
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1197855075269521409&quot;&gt;a short video of the updated&#x2F;tweaked gameplay&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;erasterra&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;erasterra&quot;&gt;Erasterra&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#erasterra&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;erasterra.png&quot; alt=&quot;Flying cars&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;coffejunkstudio.itch.io&#x2F;erasterra&quot;&gt;Erasterra&lt;&#x2F;a&gt; is a geography racing game.
It uses Rust to implement the matchmaking server.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;It made sense to implement the matchmaker in Rust because
it&#x27;s designed to be a long-running service and as such it may not crash.
Rust simply makes it easier to implement non-crashing software 🙌&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;garden&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;garden.jpeg&quot; alt=&quot;Garden screenshot: ruins, trees and water in craters&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt; tweeted a bunch of updates, including:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1192825303338536960&quot;&gt;ruin generation through &amp;quot;fake bombing&amp;quot; the buildings&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1196195909119496199&quot;&gt;improved soil physics&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1195461536275415040&quot;&gt;craters&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;robo-instructus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&#x2F;&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;robo.jpeg&quot; alt=&quot;A screenshot of a later game level&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&#x2F;&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; game;
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.15, 1.16, and 1.17 versions were released&lt;&#x2F;a&gt;:
Rust 1.39, bugfixes, and better translations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;big-ab-games&#x2F;robo-instructus-translation#about&quot;&gt;You can contribute to translations here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;github-game-off-2019&quot;&gt;GitHub Game Off 2019&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#github-game-off-2019&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;gh-gameoff.gif&quot; alt=&quot;gameoff logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;jam&#x2F;game-off-2019&quot;&gt;GitHub&#x27;s Game Off&lt;&#x2F;a&gt;
is an annual month-long game jam (hackathon for building games).
This year’s theme is &lt;a href=&quot;https:&#x2F;&#x2F;github.blog&#x2F;2019-11-01-game-off-2019-theme-announcement&quot;&gt;&amp;quot;leaps and bounds&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;fedorgames.itch.io&#x2F;ggoff2019&quot;&gt;&amp;quot;TopDown&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&quot;&gt;@fedor_games&lt;&#x2F;a&gt; made with
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fedor_games&#x2F;status&#x2F;1192989017840730112&quot;&gt;their own unannounced game engine&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;not-fl3&#x2F;gameoff-2019&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;fedor-defense.gif&quot; alt=&quot;TopDown: gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puppetmaster.itch.io&#x2F;compact-space&quot;&gt;&amp;quot;Compact Space&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fischspiele&quot;&gt;@fischspiele&lt;&#x2F;a&gt;
made with specs and Tetra (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;puppetmaster-&#x2F;compact-space&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;How long can you stay alive?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;compact-space.png&quot; alt=&quot;Compact-Space screenshot: asteroids, ship, aliens&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&amp;quot;evo&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;&quot;&gt;@ZappedCow&lt;&#x2F;a&gt;  made with Tetra (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jlauener&#x2F;evo&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A life&#x2F;environment simulator with a bit of rogue-like tossed in.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;rogue-sim.gif&quot; alt=&quot;evo: demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;Amethyst Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&quot;&gt;Azriel&lt;&#x2F;a&gt; published a &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2019&#x2F;11&#x2F;08&#x2F;that-looks-good-on-ui&quot;&gt;&amp;quot;That Looks Good On UI&amp;quot;&lt;&#x2F;a&gt; devlog.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;What’s new:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Animated menus and backgrounds can be defined.&lt;&#x2F;li&gt;
&lt;li&gt;Player names can be specified in controller configuration.&lt;&#x2F;li&gt;
&lt;li&gt;Winner is displayed when a game ends.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Behind the scenes, the following code maintenance has been made:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Moved all tests into a separate crate – 1.9x speedup,
65% less disk usage.&lt;&#x2F;li&gt;
&lt;li&gt;Assets are loaded into separate asset components – easier
to share logic between different types of objects.&lt;&#x2F;li&gt;
&lt;li&gt;Asset loading is done in stages, in preparation
for the ability to disable certain stages.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;will_winner_status.png&quot; alt=&quot;Will: Winner Status Demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&quot;&gt;@takeryo_eeic&lt;&#x2F;a&gt; named their hexagonal game &amp;quot;Conquest&amp;quot;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1195263050896429057&quot;&gt;added a main menu&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1192407134245228546&quot;&gt;showed a video of new map generator and map scrolling&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;conquest.png&quot; alt=&quot;Main menu demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;memory-arena&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kooparse.com&#x2F;blog&#x2F;memory-arena&quot;&gt;Memory Arena&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#memory-arena&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;mem-arena.jpg&quot; alt=&quot;how entities&#x2F;handles are related to each others&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kooparse&quot;&gt;@kooparse&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;kooparse.com&#x2F;blog&#x2F;memory-arena&quot;&gt;a post about implementing a quick memory arena&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;For my game, I decided to store almost every entity in a big chunk of memory
allocated only once when the program boot.
I am using this technique for three reasons.
First, I want full and precise control over how memory is managed
in the game,
second I want better data locality in order to increase cache hits
from the cpu,
and finally, at runtime asking the operating system
in order to allocate more memory is slow.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;wgpu-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;drcje5&#x2F;wgpu04_is_out&quot;&gt;wgpu v0.4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#wgpu-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;webgpu.png&quot; alt=&quot;some webgpu logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt; is a library in Rust that is meant to be the go-to solution
for most graphics and compute needs.&lt;&#x2F;p&gt;
&lt;p&gt;wgpu-rs version 0.4 was released on crates.
wgpu is based on &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dm89t2&#x2F;gfxhal_version_04_release&quot;&gt;gfx-hal-0.4&lt;&#x2F;a&gt; and includes
changes from the &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2019&#x2F;10&#x2F;01&#x2F;update.html&quot;&gt;previous blog post&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;p&gt;A few notable additions are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;proper Windows 7 support;&lt;&#x2F;li&gt;
&lt;li&gt;support for multiple clients on the same GPU server;&lt;&#x2F;li&gt;
&lt;li&gt;slimmed-down Rendy dependencies (memory and descriptor);&lt;&#x2F;li&gt;
&lt;li&gt;new skybox example.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Lyon has &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nical&#x2F;lyon&#x2F;pull&#x2F;496&quot;&gt;updated examples&lt;&#x2F;a&gt; for this version, showing how to draw vector graphics on &lt;code&gt;wgpu&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, &lt;code&gt;wgpu&lt;&#x2F;code&gt; is now a part of Gecko code base for powering the emerging WebGPU implementation.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;book-learn-luminance&quot;&gt;Book: &lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;learn-luminance&quot;&gt;Learn Luminance&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#book-learn-luminance&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; is a type-safe, type-level and stateless Rust graphics framework.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&quot;&gt;@phaazon&lt;&#x2F;a&gt; released a &lt;a href=&quot;https:&#x2F;&#x2F;rust-tutorials.github.io&#x2F;learn-luminance&quot;&gt;&amp;quot;Learn Luminance&amp;quot;&lt;&#x2F;a&gt; book.
Luminance&#x27;s wiki was deprecated and the book is now the central reference
to onboard newcomers to use luminance as well as people
who would like to give luminance a try and who knows nothing about rendering.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e3662k&#x2F;learn_luminance_the_book&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Btw, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&#x2F;status&#x2F;1194825522418765826&quot;&gt;@resinten is working on a game using luminance&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;resinten&#x2F;status&#x2F;1194825522418765826&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;luminance-space-game.gif&quot; alt=&quot;space ship pew pew&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pixels&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;Pixels&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pixels&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;pixels.png&quot; alt=&quot;Pixels logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;parasyte&#x2F;pixels&quot;&gt;Pixels&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;kodewerx&quot;&gt;@kodewerx&lt;&#x2F;a&gt; is a tiny hardware-accelerated
pixel frame buffer based on wgpu.
It&#x27;s supposed to be used for emulators, software rendering,
2D animations and games prototyping.&lt;&#x2F;p&gt;
&lt;p&gt;Check out &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;announcing-pixels-hardware-accelerated-pixel-frame-buffer&#x2F;34326&#x2F;1&quot;&gt;the URLO announcement post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;drunej&#x2F;announcing_pixels_hardwareaccelerated_pixel_frame&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;metropolis&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuyL99&#x2F;metropolis&quot;&gt;Metropolis&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#metropolis&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuyL99&#x2F;metropolis&quot;&gt;metropolis&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GuyL99&quot;&gt;@GuyL99&lt;&#x2F;a&gt;
is a high-level graphics renderer, with easy functions to use.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This crate should make graphics programming easy with functions
like rect, ellipse, line, text, and such,
and it&#x27;s fast with 60-120 FPS on a bad computer.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;e3lfr7&#x2F;new_graphics_renderer_metropolis&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;skulpin&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;skulpin&quot;&gt;skulpin&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#skulpin&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=El99FgGSzfg&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;skuplin.jpeg&quot; alt=&quot;physics demo video&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ Click to see &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=El99FgGSzfg&quot;&gt;a demo video&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;skulpin&quot;&gt;skulpin&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt; provides an easy option for drawing hardware-accelerated 2D
by combining Vulkan and &lt;a href=&quot;https:&#x2F;&#x2F;skia.org&quot;&gt;Skia&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ultraviolet-v0-2&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt; v0.2&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ultraviolet-v0-2&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt; v0.2 were released by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fu5ha&quot;&gt;@fu5ha&lt;&#x2F;a&gt;.
This release introduces &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Bivector&quot;&gt;Bivectors&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Rotor_(mathematics)&quot;&gt;Rotors&lt;&#x2F;a&gt; and improved usability.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dt9zhz&#x2F;ultraviolet_02_released&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;rayn-render.png&quot; alt=&quot;rayn fractal render example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dxjn64&#x2F;rayn_03_a_major_update_with_deeply_integrated&#x2F;&quot;&gt;Rayn v0.3 was released recently&lt;&#x2F;a&gt; - it&#x27;s a CPU-based
path tracing renderer focused on rendering SDFs (specifically fractals)
that is based on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mun-v0-1&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2019&#x2F;11&#x2F;11&#x2F;release-mun-v0-1-0&quot;&gt;Mun v0.1&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#mun-v0-1&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;mun_logo.png&quot; alt=&quot;Mun logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev focused
on quick iteration times that is written in Rust.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;As a language, Mun is still far from production-ready,
but this release gives you a glimpse of what
natively supported hot reloading will look like in the future.
The purpose of this release is to showcase our progress and gather feedback
from those brave souls willing to try out Mun at this early stage.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;To get started, read &lt;a href=&quot;https:&#x2F;&#x2F;docs.mun-lang.org&quot;&gt;the Mun Book&lt;&#x2F;a&gt;
and have a look at &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&#x2F;tree&#x2F;master&#x2F;crates&#x2F;mun_runtime&#x2F;examples&quot;&gt;Rust examples&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;For the full roadmap of Mun, have a look at their &lt;a href=&quot;https:&#x2F;&#x2F;trello.com&#x2F;b&#x2F;ZcMiREnC&#x2F;mun-roadmap&quot;&gt;Trello board&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;duw3ls&#x2F;mun_v010_released&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;glsl-v3-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dw87um&#x2F;glsl30_official_release_announcement&quot;&gt;glsl v3.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#glsl-v3-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;glsl&quot;&gt;glsl&lt;&#x2F;a&gt; is a crate to parse GLSL formatted sources into a typed AST.
The crate exposes several methods, types and modules
to perform transformations on that AST, among outputting GLSL,
SPIR-V generation and visiting the AST with possible in-place mutations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dw87um&#x2F;glsl30_official_release_announcement&quot;&gt;glsl v3.0&lt;&#x2F;a&gt; was released by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&quot;&gt;@phaazon&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the CPP directives (e.g. &lt;code&gt;#line&lt;&#x2F;code&gt;, &lt;code&gt;#pragma&lt;&#x2F;code&gt;, &lt;code&gt;#ifdef&lt;&#x2F;code&gt;, etc.) are now all implemented;&lt;&#x2F;li&gt;
&lt;li&gt;improved parsing of deeply nested expressions;&lt;&#x2F;li&gt;
&lt;li&gt;multiline annotations () is now supported as a best-effort;&lt;&#x2F;li&gt;
&lt;li&gt;other bugfixes.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;spir-q&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#spir-q&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;spir-q.png&quot; alt=&quot;example output&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PENGUINLIONG&#x2F;spirq-rs&quot;&gt;SPIR-Q&lt;&#x2F;a&gt; is a lightweight &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Standard_Portable_Intermediate_Representation&quot;&gt;SPIR-V&lt;&#x2F;a&gt; query library.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;SPIR-Q &amp;lt;...&amp;gt; can be very useful for dynamic graphics&#x2F;compute pipeline construction,
shader debugging and so on.
SPIR-Q is currently compatible with a subset of SPIR-V 1.5,
with most of graphics capabilities but no OpenCL kernel capabilities covered.
Btw, SPIR-Q currently only depends on the Rust standard library.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;e1ft1k&#x2F;spirq_spirv_metadata_extraction_library&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;iced-beta-version&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e1jckj&#x2F;iced_a_crossplatform_gui_library_new_release&quot;&gt;Iced: Beta Version&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#iced-beta-version&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;iced.gif&quot; alt=&quot;Iced demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&quot;&gt;Iced&lt;&#x2F;a&gt; is a renderer-agnostic GUI library focused on simplicity
and type-safety.&lt;&#x2F;p&gt;
&lt;p&gt;This month, a &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e1jckj&#x2F;iced_a_crossplatform_gui_library_new_release&quot;&gt;beta version of Iced was released&lt;&#x2F;a&gt;.
The most important new features are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;22&quot;&gt;basic renderer&lt;&#x2F;a&gt;
built on top of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu&quot;&gt;wgpu&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;A windowing shell powered by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;A &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;17&quot;&gt;web runtime&lt;&#x2F;a&gt;
based on &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fitzgen&#x2F;dodrio&quot;&gt;dodrio&lt;&#x2F;a&gt; (try the tour on &lt;a href=&quot;https:&#x2F;&#x2F;iced.rs&quot;&gt;iced.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;First-class &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;62&quot;&gt;async actions&lt;&#x2F;a&gt;,
leveraging futures;&lt;&#x2F;li&gt;
&lt;li&gt;New widgets, like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;37&quot;&gt;text inputs&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;pull&#x2F;35&quot;&gt;scrollables&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;blog.cryptowat.ch&#x2F;2019&#x2F;11&#x2F;25&#x2F;sponsoring-rust-gui-library-iced&quot;&gt;Cryptowatch is now sponsoring the development of Iced!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;embark-s-stockholm-rust-meetup-and-newsletter&quot;&gt;Embark&#x27;s Stockholm Rust Meetup and Newsletter&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#embark-s-stockholm-rust-meetup-and-newsletter&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;embark.png&quot; alt=&quot;Embark logo white on black&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Videos from &lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;Embark&lt;&#x2F;a&gt;&#x27;s Stockholm Rust Meetup arrived:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=RxtXGeDHu0w&quot;&gt;&amp;quot;An Unholy Fusion of Rust and C++ in physx-rs&amp;quot;&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;h3r2tic&quot;&gt;Tomasz Stachowiak&lt;&#x2F;a&gt;, senior software engineer at Embark,
details their experiences combining Rust and C++ code
during the creation of the physx-rs open source project
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;du91t1&#x2F;an_unholy_fusion_of_rust_and_c_in_physxrs&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;];&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=lpOg2nl3kr0&quot;&gt;&amp;quot;Rust, Open Source, Game Dev&amp;quot;&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Ca1ne&quot;&gt;Jake Shadle&lt;&#x2F;a&gt; explains how Rust, open source,
and game development fit together
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;du9g5d&#x2F;rust_open_source_game_dev_stockholm_rust_meetup&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;];&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, &lt;a href=&quot;https:&#x2F;&#x2F;embark.dev&#x2F;#newsletter&quot;&gt;Embark started a newsletter&lt;&#x2F;a&gt;.
Check out the first issue
&lt;a href=&quot;http:&#x2F;&#x2F;eepurl.com&#x2F;gI3v89&quot;&gt;&amp;quot;11&#x2F;08&#x2F;2019 - Rust, Blender, Hacktoberfest, and more: Newsletter 001 from Embark&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;creative-coding-in-rust-with-nannou&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dev.to&#x2F;deciduously&#x2F;creative-coding-in-rust-with-nannou-1lbl&quot;&gt;Creative Coding in Rust with Nannou&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#creative-coding-in-rust-with-nannou&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;nannou.png&quot; alt=&quot;Nannou example screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A beginner-level tutorial article teaching how to build a small demo
with the &lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&quot;&gt;nannou&lt;&#x2F;a&gt; creative coding framework.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rltk-rust-roguelike-tutorial&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;RLTK&lt;&#x2F;a&gt; &amp;amp; &lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Rust Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rltk-rust-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;rogulike-demo.gif&quot; alt=&quot;Dungeon generation demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
includes almost 60 chapters now and continues to grow!&lt;&#x2F;p&gt;
&lt;p&gt;Some of the November&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;backtracking&#x2F;persistent maps,&lt;&#x2F;li&gt;
&lt;li&gt;dynamic colored lighting,&lt;&#x2F;li&gt;
&lt;li&gt;town portals, and teleportation in general (including optionally affecting NPCs),&lt;&#x2F;li&gt;
&lt;li&gt;cheat mode (for testing later maps).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;nes-rust-wasm-nes-emulator&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;takahirox&#x2F;nes-rust&quot;&gt;nes-rust&lt;&#x2F;a&gt; - WASM &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Nintendo_Entertainment_System&quot;&gt;NES&lt;&#x2F;a&gt; Emulator&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nes-rust-wasm-nes-emulator&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;raw.githack.com&#x2F;takahirox&#x2F;nes-rust&#x2F;master&#x2F;index.html&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;nes-wasm.gif&quot; alt=&quot;Screenshot of the NES emulator&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;takahirox&#x2F;nes-rust&quot;&gt;nes-rust&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;superhoge&quot;&gt;@superhoge&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Nintendo_Entertainment_System&quot;&gt;NES&lt;&#x2F;a&gt;(Famicom) emulator in Rust on the Web, compiled to WASM.&lt;&#x2F;p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https:&#x2F;&#x2F;raw.githack.com&#x2F;takahirox&#x2F;nes-rust&#x2F;master&#x2F;index.html&quot;&gt;online Demo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst&quot;&gt;Amethyst&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;amethyst-logo.png&quot; alt=&quot;Amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blaineprice.me&quot;&gt;Blaine Price&lt;&#x2F;a&gt; is working on a “The Ten Top” game and shared a
&lt;a href=&quot;https:&#x2F;&#x2F;blaineprice.me&#x2F;posts&#x2F;rustlang-up-some-grub&quot;&gt;&amp;quot;Rustlang Up Some Grub at The Ten Top&amp;quot;&lt;&#x2F;a&gt;
devlog about dependency graphs;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;food_truck_cropped.jpg&quot; alt=&quot;food truck&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;rfcs&#x2F;issues&#x2F;22&quot;&gt;&amp;quot;[RFC Discussion] Legion ECS Evolution&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;duki8d&#x2F;amethyst_legion_ecs_rfc&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;legion-ecs-discussion&#x2F;965&quot;&gt;forum&lt;&#x2F;a&gt;];&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mvlabat&quot;&gt;@mvlabat&lt;&#x2F;a&gt; posted
&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;how-can-we-improve-custom-shaders-user-experience&#x2F;1230&quot;&gt;&amp;quot;How can we improve custom shaders user experience?&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;future-of-nalgebra-and-math-in-amethyst&#x2F;1228&quot;&gt;&amp;quot;Future of nalgebra and math in Amethyst&amp;quot;&lt;&#x2F;a&gt;
discussion;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;skepticism-about-rendy&#x2F;1221&quot;&gt;&amp;quot;Skepticism about Rendy&amp;quot;&lt;&#x2F;a&gt; discussion;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;obiwanuss-long-link-time-feedback&#x2F;1207&quot;&gt;A thread by @obiwanus about long link time&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;50&quot;&gt;#50 &amp;quot;Linking Time&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;51&quot;&gt;#51 &amp;quot;Using wasm-bindgen for games&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;68&quot;&gt;#68 &amp;quot;Modding&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;69&quot;&gt;#69 &amp;quot;Input Handling&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;71&quot;&gt;#71 &amp;quot;Proof Of Concept Crate: Simplistic Bump Allocator&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;73&quot;&gt;#73 &amp;quot;Membership Listing&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dyhylu&#x2F;luster_lua_vm_in_rust_this_project_is_currently&quot;&gt;@kyren is looking for a new maintainer for &amp;quot;rlua&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;t&#x2F;616119&#x2F;contributing&quot;&gt;Add assets (graphics, levels, sounds) to Le Train Dispatcher&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;diuqg7&#x2F;need_help_porting_steam_libraries_to_rust&quot;&gt;&#x2F;r&#x2F;rust: &amp;quot;Need help porting steam libraries to rust&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=EgFr73AUwps&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-004&#x2F;penguin.png&quot; alt=&quot;Pascal Penguin logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;click to see the &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=EgFr73AUwps&quot;&gt;release trailer&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;luduminis.com&#x2F;pascal&#x2F;about&#x2F;&quot;&gt;&amp;quot;Adventures of Pascal Penguin&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;http:&#x2F;&#x2F;luduminis.com&quot;&gt;Matthew Michelotti&lt;&#x2F;a&gt;
is a 2D grid-based puzzle game with levels designed around slippery ice.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Push blocks and bounce off bumpers as you try
to reach the crystal at the end of each level.
Grab invisibility orbs to walk through solid objects.
Build a safe path over boiling lava and ice-cold water.
There are 40 levels spread out across 5 zones.
Can you complete them all?&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Written using the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;SergiusIW&#x2F;gate&quot;&gt;Gate&lt;&#x2F;a&gt; game engine.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;e7xdwf&#x2F;this_month_in_rust_gamedev_4_november_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1203745439243223044&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>This Month in Rust GameDev #3 - October 2019</title>
                <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
                <link>https://rust-gamedev.github.io/posts/newsletter-003/</link>
                <guid>https://rust-gamedev.github.io/posts/newsletter-003/</guid>
                <description>&lt;!-- markdownlint-disable no-trailing-punctuation --&gt;
&lt;p&gt;Welcome to the third issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;!--
Ideal section structure is:

```
### [Title]

![image&#x2F;GIF description](image link)

A paragraph or two with a summary and [useful links].

_Discussions:
[&#x2F;r&#x2F;rust](https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;todo),
[twitter](https:&#x2F;&#x2F;twitter.com&#x2F;todo&#x2F;status&#x2F;123456)_

[Title]: https:&#x2F;&#x2F;first.link
[useful links]: https:&#x2F;&#x2F;other.link
```

Discussion links are added only if they contain
some actual interesting discussions.

If needed, a section can be split into subsections with a &quot;------&quot; delimiter.
--&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;sulis-a-turn-based-rpg&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&quot;&gt;Sulis&lt;&#x2F;a&gt; - a Turn-Based RPG&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#sulis-a-turn-based-rpg&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;sulis-inventory.png&quot; alt=&quot;chest and inventory with items&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&quot;&gt;Sulis&lt;&#x2F;a&gt; is a Role Playing Game (RPG) with turn based, tactical combat,
deep character customization and an engaging storyline.
The game has been built from the ground up with modding
and custom content in mind.
Currently supported on Windows and Linux platforms.&lt;&#x2F;p&gt;
&lt;p&gt;The game is currently fully playable
and includes the first act of The Twin Expanse,
an old school RPG campaign in the vein of classic games
such as &lt;em&gt;Baldur&#x27;s Gate&lt;&#x2F;em&gt;,
but mixing in modern elements from titles like
&lt;em&gt;Divinity: Original Sin&lt;&#x2F;em&gt; and &lt;em&gt;Pillars of Eternity&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The core game engine as well as the campaign
are still under heavy development.
Users are encouraged to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Grokmoo&#x2F;sulis&#x2F;issues&quot;&gt;file issues with bugs&lt;&#x2F;a&gt;,
feature requests, or any other feedback.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;sulis-battle.png&quot; alt=&quot;flaming fingers spell demonstration&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cross platform native binaries, currently &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Grokmoo&#x2F;sulis&#x2F;releases&quot;&gt;built for Windows and Linux&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Multiple campaigns with over 8 hours of playtime,
featuring both handcrafted and procedural content.&lt;&#x2F;li&gt;
&lt;li&gt;A detailed and fully realized world and story - check out
the &lt;a href=&quot;https:&#x2F;&#x2F;sulisgame.com&#x2F;lore&quot;&gt;Lore page&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Designed with modding in mind - although more work still needs
to be done in this area.&lt;&#x2F;li&gt;
&lt;li&gt;A powerful 2D graphics engine with zoom, scalable UI, HiDPI support,
and a swappable graphics backend.&lt;&#x2F;li&gt;
&lt;li&gt;Runs on very modest hardware - even software renderers
(although at a reduced frame rate).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;sulis-abilities-tree.png&quot; alt=&quot;ability tree gui&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The GPLv3-licensed &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Grokmoo&#x2F;sulis&quot;&gt;source code is hosted on GitHub&lt;&#x2F;a&gt;.
Sulis is written in Rust, with scripting in Lua and most data files in the YAML format.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;din01e&#x2F;sulis_a_turnbased_rpg_written_in_rust_by_ugrokmoo&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;veloren.png&quot; alt=&quot;Bumpy terrain with a rivers and trees&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open-world, open-source multiplayer voxel RPG.
The game is in an early stage of development, but is playable.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-37&quot;&gt;a v0.4 version was released&lt;&#x2F;a&gt;
and a &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-36&#x2F;#player-survey&quot;&gt;player survey results was published&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Some of October&#x27;s improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;lots of bugfixes and optimizations;&lt;&#x2F;li&gt;
&lt;li&gt;improved erosion, rivers and water flow physics;&lt;&#x2F;li&gt;
&lt;li&gt;user interface improvements;&lt;&#x2F;li&gt;
&lt;li&gt;improved game lore;&lt;&#x2F;li&gt;
&lt;li&gt;RFC procedure for 0.5 development.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;New video: &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=iwP7SXdWcTg&quot;&gt;&amp;quot;Cities, dungeons and other structures&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;Veloren&#x2F;comments&#x2F;ddp0n9&#x2F;veloren_cities_dungeons_and_other_structures&quot;&gt;&#x2F;r&#x2F;veloren&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;The full weekly devlogs &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-36&quot;&gt;#36&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-37&quot;&gt;#37&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-38&quot;&gt;#38&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-39&quot;&gt;#39&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, check out &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;Veloren&quot;&gt;&#x2F;r&#x2F;veloren subreddit&lt;&#x2F;a&gt;,
it&#x27;s pretty active.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pf-sandbox&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rukai&#x2F;PF_Sandbox&quot;&gt;PF Sandbox&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#pf-sandbox&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;pf-sandbox.jpg&quot; alt=&quot;Exported models with textureas and skeletal animations&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rukai&#x2F;PF_Sandbox&quot;&gt;PF Sandbox&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&quot;&gt;@rukai&lt;&#x2F;a&gt; is a platform fighter sandbox featuring:
in game Fighter and Stage Editor, replays, and TAS tools.&lt;&#x2F;p&gt;
&lt;p&gt;This month,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1180477120113340417&quot;&gt;exporting and hot-reloading assets from blender&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1182945899485335552&quot;&gt;freelook camera&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1182945899485335552&quot;&gt;textures&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;thisIsRukai&#x2F;status&#x2F;1188261107124727808&quot;&gt;animations&lt;&#x2F;a&gt;
were added to the project.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;antorum&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#antorum&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;antorum.jpeg&quot; alt=&quot;Antorum screenshot: a few human characters, a few rats and an inventory UI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&quot;&gt;Antorum&lt;&#x2F;a&gt; is a multiplayer RPG where players build their characters
and fight against the growing threats on the isle.
The game server is authoritative and written in Rust,
while the client is written in Unity&#x2F;C#.&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt; published a bunch of devlogs:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;6&quot;&gt;#6 &amp;quot;Items And Inventory&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;7&quot;&gt;#7 &amp;quot;Grubbnet&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;8&quot;&gt;#8 &amp;quot;The Editor&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;9&quot;&gt;#9 &amp;quot;The Editor, Pt. 2&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;10&quot;&gt;#10 &amp;quot;Terrain Sync&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;As described in the &lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;7&quot;&gt;7th devlog&lt;&#x2F;a&gt;,
an initial version of a &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Dooskington&#x2F;grubbnet&quot;&gt;grubbnet&lt;&#x2F;a&gt;&amp;quot; crate was published.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s a lightweight TCP client&#x2F;server
for writing networked applications and games.
It abstracts socket code, keeps track of connections,
and delivers everything back to the developer in a nice list of events.
In addition to handling network events
(such as client connects and disconnects),
handling incoming packets is as easy as grabbing an iterator
over the incoming packet queue.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s the same networking crate that the Antorum game server uses
under the hood.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ferris-fencing&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ferrisfencing.org&quot;&gt;Ferris Fencing&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ferris-fencing&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;ferris-fencing.png&quot; alt=&quot;Two crabs fencing on a 1D map&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ferrisfencing.org&quot;&gt;Ferris Fencing&lt;&#x2F;a&gt; is a live tournament in which
player-programmed bots combat each other on a &lt;a href=&quot;https:&#x2F;&#x2F;riscv.org&quot;&gt;RISC-V&lt;&#x2F;a&gt; virtual machine.
It is a showcase of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;nervosnetwork&#x2F;ckb-vm&quot;&gt;CKB-VM&lt;&#x2F;a&gt;, a simple implementation of the RISC-V instruction set,
written in the Rust programming language.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.ferrisfencing.org&#x2F;#rules&quot;&gt;Here&#x27;re the rules&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The Ferris Fencing tournament is not yet live,
but fencers may begin building their bots and testing them locally.
Instructions are in the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;brson&#x2F;ferris-fencing&quot;&gt;GitHub repo&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tennis-academy-v0-03-v0-0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy&lt;&#x2F;a&gt; v0.03 &amp;amp; v0.0.4&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tennis-academy-v0-03-v0-0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;tennis-academy.png&quot; alt=&quot;4 courts with players&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1185576890746265600&quot;&gt;v0.0.3&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1185945850771660805&quot;&gt;v0.0.4&lt;&#x2F;a&gt; updates for &lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🏘️ improved reception area queueing&lt;&#x2F;li&gt;
&lt;li&gt;🎆 timed effects when players disappear&lt;&#x2F;li&gt;
&lt;li&gt;⛹️ click to collect coins from player&lt;&#x2F;li&gt;
&lt;li&gt;👟 4 courts on screen&lt;&#x2F;li&gt;
&lt;li&gt;⛹️ matching t-shirts for players&lt;&#x2F;li&gt;
&lt;li&gt;💯 money is now score&lt;&#x2F;li&gt;
&lt;li&gt;🚥 court + t-shirt colour matching logic&lt;&#x2F;li&gt;
&lt;li&gt;📊 score multipliers&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;piano-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ritiek&#x2F;piano-rs&quot;&gt;piano-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#piano-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;piano.png&quot; alt=&quot;Virtual piano keyboard&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ritiek&#x2F;piano-rs&quot;&gt;piano-rs&lt;&#x2F;a&gt; is a multiplayer piano using UDP sockets
that can be played using computer keyboard, in the terminal.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;de28rz&#x2F;a_multiplayer_piano_game_for_the_terminal&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;will-it-dissolve&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puppetmaster.itch.io&#x2F;dissolve&quot;&gt;Will it dissolve?&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#will-it-dissolve&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;dissolve.gif&quot; alt=&quot;Dissolve gameplay demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;puppetmaster.itch.io&#x2F;dissolve&quot;&gt;&amp;quot;Will it dissolve?&amp;quot;&lt;&#x2F;a&gt; is a small puzzle game
for &lt;a href=&quot;http:&#x2F;&#x2F;openjam.io&quot;&gt;&amp;quot;Open Jam 2019&amp;quot;&lt;&#x2F;a&gt;
where you have to prepare the level so that it will
automatically convert and dissolve in the future.&lt;&#x2F;p&gt;
&lt;p&gt;Programmed with the help of the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;17cupsofcoffee&#x2F;tetra&quot;&gt;Tetra engine&lt;&#x2F;a&gt;.
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;puppetmaster-&#x2F;will_it_dissolve&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;garden-devlog-october&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;cyberplant.xyz&#x2F;posts&#x2F;october&quot;&gt;Garden Devlog: October&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#garden-devlog-october&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;garden.jpeg&quot; alt=&quot;Garden screenshot: a tree, leaves, water and ruins&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; is an upcoming game centered around
growing realistic plants.&lt;&#x2F;p&gt;
&lt;p&gt;The following changes were made since the last devlog:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improved flowers were added.&lt;&#x2F;li&gt;
&lt;li&gt;The plant simulation code is almost finalized,
and developers will be able to start adding new species soon.&lt;&#x2F;li&gt;
&lt;li&gt;The procedural ruin generation was improved:
no more floating concrete chunks.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1190754460575961089&quot;&gt;Watch the video demo here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, a new design plan was created:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The main objective is to restore the luscious ecosystem
in a polluted wasteland.
The player will have to continuously figure out how to handle different
environmental constraints to keep trees growing, collect enough fruit
and figure out what to do with them, and unlock new goals and flora.&lt;&#x2F;li&gt;
&lt;li&gt;But for players who are interested in wild, goalless plant growth,
there’ll also be a sandbox mode.
As one progresses in the main game and “unlocks” more trees,
playing around with creating flourishing jungle troves will be possible.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;To stay informed of smaller updates, screenshots, and new devlogs,
follow &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&quot;&gt;@logicsoup&lt;&#x2F;a&gt; on Twitter.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;eve-aether-wars-backend-optimization&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1165670&#x2F;EVE_Aether_Wars__Tech_Demo&#x2F;&quot;&gt;EVE Aether Wars&lt;&#x2F;a&gt; Backend Optimization&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#eve-aether-wars-backend-optimization&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aidanhs&#x2F;status&#x2F;1181584776584675328&quot;&gt;@aidanhs shared&lt;&#x2F;a&gt;
a small &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1165670&#x2F;EVE_Aether_Wars__Tech_Demo&#x2F;&quot;&gt;EVE Aether Wars&lt;&#x2F;a&gt; backend optimization success story:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;To double the tick rate to 30Hz, our underlying @rustlang layer
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aidanhs&#x2F;status&#x2F;1110607519385350150&quot;&gt;from last time&lt;&#x2F;a&gt;
needed...a two line bugfix and some metrics support.
Nice proof point for reliable software in Rust!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;robo-instructus&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&#x2F;&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#robo-instructus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&#x2F;&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; game;
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.12, 1.13, and 1.14 versions were released&lt;&#x2F;a&gt;:
non-ascii code input, new icons, bugfixes, and better translations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;big-ab-games&#x2F;robo-instructus-translation#about&quot;&gt;You can contribute to translations here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;robo-ru.png&quot; alt=&quot;translated menu items&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;godot-and-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot&lt;&#x2F;a&gt; and Rust&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-and-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;rendering-a-2d-game-in-3d-bd24ddbee6eb&quot;&gt;&amp;quot;Rendering a 2D game in 3D&amp;quot;&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;Tom Leys&lt;&#x2F;a&gt; is working on a “The Recall Singularity” &lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot&lt;&#x2F;a&gt;&#x2F;Rust game
about designing autonomous factory ships and stations
and this month they published
a post about evolution of the game&#x27;s rendering.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;recall-singular.png&quot; alt=&quot;Recall Singularity screenshot: map, a few belts and processing nodes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ardawanizadi&quot;&gt;@ardawanizadi&lt;&#x2F;a&gt; shared a
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;godot&#x2F;comments&#x2F;dilbar&#x2F;game_progress_for_almost_a_month_rust_godot&quot;&gt;short text report&lt;&#x2F;a&gt;
and a &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;ardawanizadi&#x2F;status&#x2F;1184353596927688704&quot;&gt;video demo&lt;&#x2F;a&gt;
of their progress with a project of an OpenWorld game this month:
character physics, weapon system, cameras, animations system,
dynamic damage system.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;godot&#x2F;comments&#x2F;dfam0p&#x2F;i_made_a_pong_clone_in_godot_using_the_gdnative&quot;&gt;&amp;quot;Pong Clone in Godot Using &#x27;gdnative&#x27; Rust Bindings&amp;quot;&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;you-win&quot;&gt;@you-win&lt;&#x2F;a&gt; couldn&#x27;t find any full game examples that used &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;GodotNativeTools&#x2F;godot-rust&quot;&gt;godot-rust&lt;&#x2F;a&gt; so they made their own [&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;you-win&#x2F;godot-pong-rust&quot;&gt;source code&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;ludum-dare-45&quot;&gt;Ludum Dare 45&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ludum-dare-45&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Ludum_Dare&quot;&gt;Ludum Dare&lt;&#x2F;a&gt; is a regular game jam event,
during which developers create games from scratch in a weekend
based on a theme suggested by the community.&lt;&#x2F;p&gt;
&lt;p&gt;LD45&#x27;s theme was &amp;quot;Start with nothing&amp;quot;.
Here are some of the games made with Rust:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;45&#x2F;working-title&quot;&gt;&amp;quot;Working Title&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;NoahRosenzweig&quot;&gt;@NoahRosenzweig&lt;&#x2F;a&gt; made with Amethyst
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Noah2610&#x2F;LD45-WorkingTitle&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Experience a work in progress.&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Play through the development process of a 2D platformer game,
and watch your environment transform as you progress...
The further you get, the more features are added, including
menacing enemies, destructive spikes, and adaptive music.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;working-title.png&quot; alt=&quot;Working Title: an early stage of the game&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;45&#x2F;mindmaze&quot;&gt;&amp;quot;Mindmaze&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sigodme&quot;&gt;@sigodme&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sigod&#x2F;ludum-dare-45&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A small and unhurried story about devious passages
of the trapped human mind.
Begin in the middle of oblivion as shadow and take a walk through
every chamber of this place to find all shards of lost personality.
Can you find the way out?!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;ld45-mindmaze.png&quot; alt=&quot;Mindmaze: main menu&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;45&#x2F;legally-dead&quot;&gt;&amp;quot;Legally Dead&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;vilcans&quot;&gt;@vilcans&lt;&#x2F;a&gt; made with &lt;a href=&quot;https:&#x2F;&#x2F;ggez.rs&quot;&gt;ggez&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vilcans&#x2F;ld45&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;With nothing, not even memories, you find yourself maneuvering
some kind of craft in strange caves.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;legally-dead.png&quot; alt=&quot;ultra-low-poly ship in low-poly caves&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Check out the devlog post:
&lt;a href=&quot;https:&#x2F;&#x2F;ldjam.com&#x2F;events&#x2F;ludum-dare&#x2F;45&#x2F;legally-dead&#x2F;tools-and-tech-for-my-game-written-in-rust&quot;&gt;&amp;quot;Tools and tech for my game written in Rust&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;Amethyst Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;See the &amp;quot;Working Title&amp;quot; LD45 game above.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;A top-down 2D shooter &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;grumpy_visitors&quot;&gt;&amp;quot;Grumpy Visitors&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mvlabat&quot;&gt;@mvlabat&lt;&#x2F;a&gt;
became an official showcase game.&lt;&#x2F;p&gt;
&lt;p&gt;Read the announcement post: &lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;showcase-game-4-grumpy-visitors&quot;&gt;&amp;quot;Showcase game #4: Grumpy Visitors&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Current game features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cooperative multiplayer;&lt;&#x2F;li&gt;
&lt;li&gt;Spawning monsters with basic AI;&lt;&#x2F;li&gt;
&lt;li&gt;Sprite animations and custom shaders (health HUD).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;grumpy_visitors&quot;&gt;The source code is available here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;grumpy-visitors.png&quot; alt=&quot;A magician shooting missiles at giant bugs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;JPMoresmau&#x2F;arrakis&quot;&gt;Arrakis&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;JpMoresmau&quot;&gt;@JpMoresmau&lt;&#x2F;a&gt; is a 80s game ported in Rust and Amethyst.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&#x27;s a mini role-playing&#x2F;adventure game. The goal?
Walk through the streets of Arrakis to find the fabled Wizard of Arrakis,
that can teach you arcane powers you&#x27;ve only dreamt of!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;arrakis.png&quot; alt=&quot;Arrakis screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Webshinra&quot;&gt;@webshinra&lt;&#x2F;a&gt; finished porting their hexagonal game to Amethyst
and is now preparing to build gameplay.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;webshinra-hex.jpg&quot; alt=&quot;hexagonal pam with a few mechs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&quot;&gt;@takeryo_eeic&lt;&#x2F;a&gt; is also working on a turn-based hexagonal game.
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1190142474062184448&quot;&gt;Watch the video demo here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;takeryo_eeic&#x2F;status&#x2F;1190142474062184448&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;takeryo-eeic-hex-game.png&quot; alt=&quot;a small hex field with a few fighters&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;Space Shooter&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt; got
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&#x2F;pull&#x2F;19&quot;&gt;2 new items&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&#x2F;pull&#x2F;18&quot;&gt;1 new enemy&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;dev-time-optimization-part-1-1-9x-speedup-65-less-disk-usage&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2019&#x2F;10&#x2F;08&#x2F;dev-time-optimization-part-1-1.9x-speedup-65-less-disk-usage&quot;&gt;Dev Time Optimization -- Part 1 (1.9x speedup, 65% less disk usage)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#dev-time-optimization-part-1-1-9x-speedup-65-less-disk-usage&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Compile times (full and incremental) are one of Rust&#x27;s pain points.
&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&quot;&gt;Azriel&lt;&#x2F;a&gt; published a devlog about optimizing &lt;a href=&quot;https:&#x2F;&#x2F;azriel91.itch.io&#x2F;will&quot;&gt;Will&lt;&#x2F;a&gt;&#x27;s build times.
Summary:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;In a 45k LOC &#x2F; 102-crate workspace,
moving tests from member crates into a single workspace_tests crate
achieved the following improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Build and test duration in release mode reduced
from 23 minutes to 13 minutes.&lt;&#x2F;li&gt;
&lt;li&gt;Debug artifact disk usage reduced from 20 G to 7 G
(65% reduction, fresh build),
or 230 G to 50 G (78% reduction, ongoing development).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;desc3q&#x2F;dev_time_optimization_part_1_19x_speedup_65_less&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tip-speed-up-iteration-time-by-using-lld-linker&quot;&gt;🛈 Tip: Speed Up Iteration Time By Using &lt;a href=&quot;https:&#x2F;&#x2F;lld.llvm.org&quot;&gt;LLD Linker&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#tip-speed-up-iteration-time-by-using-lld-linker&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Takeaways from &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1186412587958845442&quot;&gt;an interesting tweet&lt;&#x2F;a&gt;
from &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;VladZhukov0&lt;&#x2F;a&gt;
and a &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dl4c8o&#x2F;is_the_rust_compiler_really_that_slow&quot;&gt;&#x2F;r&#x2F;rust thread &amp;quot;Is the rust compiler really THAT slow?&amp;quot;&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Try switching to &lt;a href=&quot;https:&#x2F;&#x2F;lld.llvm.org&quot;&gt;LLD linker&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#bf616a;&quot;&gt;RUSTFLAGS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;-C link-arg=-fuse-ld=lld&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cargo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; run
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;# Alternatively, you can set `rustflags` in your `.cargo&#x2F;config`
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Depending on your project structure, OS, and toolchain
this can potentially speed up the incremental compilation a few times.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Also, try disabling debug information (if you don&#x27;t need it):&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#65737e;&quot;&gt;# in your `Cargo.toml`

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;[profile.dev]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;debug &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Now the linking only takes around one second,
compared to 10 seconds previously.&lt;&#x2F;p&gt;
&lt;p&gt;Reduced my average compilation time from 10-20s
(which is a bit crazyness for gamedev iteration) to 5-7s.
Wonder why haven&#x27;t I tried this before?🤔&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Also, see this GameDev WG tracker&#x2F;complaint issue:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;50&quot;&gt;#50 &amp;quot;Linking Time&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rlsl-a-rust-to-spir-v-compiler&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;rlsl&quot;&gt;RLSL&lt;&#x2F;a&gt;: a Rust to SPIR-V Compiler&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rlsl-a-rust-to-spir-v-compiler&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;rlsl-example.png&quot; alt=&quot;RLSL code sample&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;a simple fragment shader that renders a red circle (temporary syntax)&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This month, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MaikKlein_DEV&quot;&gt;@MaikKlein_DEV&lt;&#x2F;a&gt; gave a talk at
&lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&quot;&gt;The Khronos Group&lt;&#x2F;a&gt;&#x27;s meetup in Munich
about bringing Rust to the GPU:
&lt;a href=&quot;https:&#x2F;&#x2F;docs.google.com&#x2F;presentation&#x2F;d&#x2F;1_cB-sxUusYVoCYdXnqwAg2u3-lrqBfgrUj205ytxYaw&quot;&gt;here&#x27;re the slides&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaikKlein&#x2F;rlsl&quot;&gt;RLSL&lt;&#x2F;a&gt; (Rust Like Shading Language) is an &lt;em&gt;experimental&lt;&#x2F;em&gt; project
that allows compiling Rust to &lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&#x2F;registry&#x2F;spir-v&quot;&gt;SPIR-V&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Current features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Supports cargo;&lt;&#x2F;li&gt;
&lt;li&gt;Multiple entry points can be defined in the same SPIR-V module;&lt;&#x2F;li&gt;
&lt;li&gt;Currently supports Vertex, Fragment and Compute shaders;&lt;&#x2F;li&gt;
&lt;li&gt;Shader code can run on the CPU because rlsl is a subset of Rust.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, check out older posts:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;maikklein.github.io&#x2F;rlsl-progress-report&quot;&gt;&amp;quot;RLSL Progress report&amp;quot; (2018.02.09)&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=XhAvIVs7lOA&quot;&gt;&amp;quot;Raycasting a sphere with RLSL&amp;quot; (2018.10.20, video)&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dlcjet&#x2F;rlsl_a_rust_to_spirv_compiler&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=21314679&quot;&gt;hacker news&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-rs-v0-4&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dm89t2&#x2F;gfxhal_version_04_release&quot;&gt;gfx-rs v0.4&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs-v0-4&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;sailor.png&quot; alt=&quot;sailor screenshot: vector terrain map and some basic UI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;a screenshot from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Yatekii&#x2F;sailor&quot;&gt;Yatekii&#x2F;sailor&lt;&#x2F;a&gt; - a wgpu-based sailing navigation application&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dm89t2&#x2F;gfxhal_version_04_release&quot;&gt;gfx-rs v0.4 was released&lt;&#x2F;a&gt;:
major changes were described in &lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2019&#x2F;10&#x2F;01&#x2F;update.html&quot;&gt;the last blog post&lt;&#x2F;a&gt;,
for the detailed list of changes, see the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;blob&#x2F;master&#x2F;CHANGELOG.md#hal-040-23-10-2019&quot;&gt;CHANGELOG&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;vulkano-why-command-buffers-are-so-complicated&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tomaka17&#x2F;status&#x2F;1188513260473110528&quot;&gt;Vulkano: Why Command Buffers Are So Complicated?&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#vulkano-why-command-buffers-are-so-complicated&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;vulkano-logo.png&quot; alt=&quot;vulkano logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;tomaka17&#x2F;status&#x2F;1188513260473110528&quot;&gt;A twitter thread by @Tomaka&lt;&#x2F;a&gt; about why command buffers
in &lt;a href=&quot;http:&#x2F;&#x2F;vulkano.rs&quot;&gt;Vulkano&lt;&#x2F;a&gt; (a Rust library that wraps around &lt;a href=&quot;https:&#x2F;&#x2F;www.khronos.org&#x2F;vulkan&quot;&gt;Vulkan graphics API&lt;&#x2F;a&gt;)
are so complicated.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;splines-v3-0&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;splines&quot;&gt;splines v3.0&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#splines-v3-0&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;splines.png&quot; alt=&quot;a spline sample with node handles&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;splines&quot;&gt;splines&lt;&#x2F;a&gt;, a crate by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;phaazon_&quot;&gt;@phaazon&lt;&#x2F;a&gt; to handle spline interpolation,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dln7yd&#x2F;splines300&quot;&gt;just got released in version 3.0.0&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;That version adds support for stroke Bézier interpolation,
which is a Bézier interpolation but allows you to break the handles
(instead of the regular 180° angle formed
by the handle with the &lt;code&gt;Interpolation::Bezier&lt;&#x2F;code&gt; mode).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;spline-editor&quot;&gt;spline-editor&lt;&#x2F;a&gt; got a patch to allows you to try stroke Bézier.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-mun-october-2019&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&#x2F;blog&#x2F;2019&#x2F;10&#x2F;28&#x2F;this-month-october&quot;&gt;This Month in Mun - October 2019&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-mun-october-2019&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev
focused on quick iteration times that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;The Mun Team started October with the launch of the &lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;mun-lang.org&lt;&#x2F;a&gt; website,
&lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;SfvvcCU&quot;&gt;Discord server&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;opencollective.com&#x2F;mun&quot;&gt;OpenCollective&lt;&#x2F;a&gt;
and processing the feedback from a larger audience.
Now the team is moving towards v0.1 release.&lt;&#x2F;p&gt;
&lt;p&gt;Also, check out &#x2F;r&#x2F;rust &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;de51ai&#x2F;the_mun_programming_language_is_going_live&quot;&gt;&amp;quot;The Mun programming language is going live!&amp;quot; post&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ultraviolet&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ultraviolet&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;ultraviolet-benches.png&quot; alt=&quot;ultraviolet benchmarks table&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;termhn&#x2F;ultraviolet&quot;&gt;ultraviolet&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;fu5ha&quot;&gt;@fu5ha&lt;&#x2F;a&gt; is a crate to do basic, computer-graphics-related,
linear algebra, but fast, by taking full advantage of &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;SIMD&quot;&gt;SIMD&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;...&amp;gt; To do this, it uses an &amp;quot;SoA&amp;quot; (&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;AoS_and_SoA&quot;&gt;Structure of Arrays&lt;&#x2F;a&gt;)
architecture such that each Wec (wide-vec) actually contains the data
for 4 Vecs and will do any operation on all 4 of the vector &#x27;lanes&#x27;
at the same time.
Doing this is potentially much (factor of 10) faster than
an &amp;quot;AoS&amp;quot; (&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;AoS_and_SoA&quot;&gt;Array of Structs&lt;&#x2F;a&gt;) layout,
as all current Rust linear algebra libraries do, depending on your work load.
However, algorithms must be carefully architected
to take full advantage of this, and doing so can be easier said than done,
especially if your algorithm involves significant branching.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dpknd1&#x2F;ultraviolet_a_crate_to_do_lots_of_linear_algebra&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-rustsim-8-aug-sep-oct-2019&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustsim.org&#x2F;blog&#x2F;2019&#x2F;11&#x2F;01&#x2F;this-month-in-rustsim&quot;&gt;This month in rustsim #8 (Aug - Sep - Oct 2019)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-rustsim-8-aug-sep-oct-2019&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;salva.png&quot; alt=&quot;salva&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Main updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;salva.rs&quot;&gt;salva.rs&lt;&#x2F;a&gt; - two new crates for fluid simulation: salva2d and salva3d!&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Salva is a new project dedicated to fluid simulation.
The goal of salva is to provide CPU-based, particle-based, 2D and 3D,
fluid simulation libraries that can be used for interactive and offline
application like animation.
It could be used, to some extents, for video games (especially the 2D version),
as long as the number of particles is kept small.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Watch a &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=356unTmeVUk&quot;&gt;&amp;quot;Fluid simulation with salva 0.1 and nphysics 0.13&amp;quot;&lt;&#x2F;a&gt;
video or play with the online &lt;a href=&quot;https:&#x2F;&#x2F;www.salva.rs&#x2F;demo_all_examples2&quot;&gt;2D&lt;&#x2F;a&gt; or &lt;a href=&quot;https:&#x2F;&#x2F;www.salva.rs&#x2F;demo_all_examples3&quot;&gt;3D&lt;&#x2F;a&gt;
WASM demos yourself.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&quot;&gt;nphysics 0.13&lt;&#x2F;a&gt; brings:
some support of breakable joint constraints,
and more improvements on the integration with ECS.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sebcrozet&quot;&gt;@sebcrozet&lt;&#x2F;a&gt;
(the main developer of all the current rustsim projects)
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sponsors&#x2F;sebcrozet&quot;&gt;have been added to the GitHub sponsor beta&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;doheby&#x2F;this_month_in_rustsim_8&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cyclone-physics-rs&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heyrutvik&#x2F;cyclone-physics-rs&quot;&gt;cyclone-physics-rs&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cyclone-physics-rs&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;heyrutvik&#x2F;status&#x2F;1180072669250834432&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;cyclone-physics-demo.gif&quot; alt=&quot;cyclone physics demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;a little demo of &amp;quot;particle&amp;quot; simulation&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;heyrutvik&#x2F;cyclone-physics-rs&quot;&gt;cyclone-physics-rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;heyrutvik&quot;&gt;@heyrutvik&lt;&#x2F;a&gt; a new WIP game physics engine
based on the &lt;a href=&quot;https:&#x2F;&#x2F;www.crcpress.com&#x2F;Game-Physics-Engine-Development-How-to-Build-a-Robust-Commercial-Grade&#x2F;Millington&#x2F;p&#x2F;book&#x2F;9780123819765&quot;&gt;&amp;quot;Game Physics Engine Development&amp;quot; book&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cynic64-s-wip-rendering-engine&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dpa3ar&#x2F;wip_rendering_engine&quot;&gt;Cynic64&#x27;s WIP Rendering Engine&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#cynic64-s-wip-rendering-engine&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynic64&quot;&gt;@cynic64&lt;&#x2F;a&gt; shared a &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=UrnSCpf_yw0&quot;&gt;demo video&lt;&#x2F;a&gt; and
a &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dpa3ar&#x2F;wip_rendering_engine&quot;&gt;report about their WIP rendering engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s based on Vulkano and consists of three repos:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynic64&#x2F;re-ll&quot;&gt;re-ll&lt;&#x2F;a&gt; - low level abstractions for Vulkano&#x27;s command buffers and windows.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynic64&#x2F;render-engine&quot;&gt;render-engine&lt;&#x2F;a&gt; - Vulkan abstraction.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cynic64&#x2F;test-render-engine&quot;&gt;test-render-engine&lt;&#x2F;a&gt; - various little programs created with render-engine.
&amp;quot;pretty&amp;quot; is the one shown in the video, &amp;quot;base&amp;quot; shows the basic functionality.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;rust-roguelike-tutorial&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Rust Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&#x2F;wasm&#x2F;chapter-40-doors&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;rogulike-demo.gif&quot; alt=&quot;&amp;quot;Doors&amp;quot; demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@blackfuture&lt;&#x2F;a&gt;
includes almost 40 chapters now and continues to grow.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the October&#x27;s updates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;traps and doors;&lt;&#x2F;li&gt;
&lt;li&gt;mapgen algorithms including Waveform Collapse;&lt;&#x2F;li&gt;
&lt;li&gt;prefab levels and sections;&lt;&#x2F;li&gt;
&lt;li&gt;guided procgen for towns.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;All chapters have links to WASM demos.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, 0.5 version of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;rltk-rs&lt;&#x2F;a&gt; brings
abstraction between back-ends, better compile time,
web version improvements, and more examples.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;nannou-awarded-mozilla-grant-for-foundational-audio-development&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&#x2F;posts&#x2F;moss_grant_announce&quot;&gt;Nannou awarded Mozilla grant for foundational audio development&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#nannou-awarded-mozilla-grant-for-foundational-audio-development&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&#x2F;posts&#x2F;moss_grant_announce&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;mission_partners_nannou_mozilla.png&quot; alt=&quot;Nannou &amp;amp; mozilla logos&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&quot;&gt;Nannou&lt;&#x2F;a&gt; is a creative coding framework that aims to make it easy
for artists to express themselves with simple, fast, reliable code.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nannou.cc&#x2F;posts&#x2F;moss_grant_announce&quot;&gt;Nannou has been awarded 10K USD in funding&lt;&#x2F;a&gt;
as a part of the &lt;a href=&quot;https:&#x2F;&#x2F;mozilla.org&#x2F;en-US&#x2F;moss&#x2F;mission-partners&quot;&gt;MOSS Mission Partners&lt;&#x2F;a&gt; track.
The proposed work is aimed towards improving the state
of some foundational crates within the Rust audio ecosystem
over the next three to four months.&lt;&#x2F;p&gt;
&lt;p&gt;Key areas of our work will include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Addressing some long-standing issues in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rustaudio&#x2F;cpal&quot;&gt;CPAL&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Review and improve CPAL&#x27;s web audio support.&lt;&#x2F;li&gt;
&lt;li&gt;Implement a simple web app and guide demonstrating CPAL&#x27;s web audio support.&lt;&#x2F;li&gt;
&lt;li&gt;Design, develop and document a standard audio graph abstraction and crate,
reflecting on lessons learned and limitations of prior efforts,
and the requirements of the wider rust audio community.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dlz3fb&#x2F;nannou_the_creative_coding_framework_awarded&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst&quot;&gt;Amethyst&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;amethyst-logo.png&quot; alt=&quot;amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;specs&quot;&gt;specs&lt;&#x2F;a&gt; and its related repositories &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;awesome-specs&quot;&gt;awesome-specs&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;hibitset&quot;&gt;hibitset&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;shred&quot;&gt;shred&lt;&#x2F;a&gt;
were moved to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&quot;&gt;Amethyst organization&lt;&#x2F;a&gt; [&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;specs-parallel-ecs-moved-to-amethyst-organization&#x2F;33815&quot;&gt;URLO&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;dm3jsf&#x2F;amethyst_v011_contacts_events&quot;&gt;amethyst_physics v0.1.1 was released&lt;&#x2F;a&gt;: now it&#x27;s possible to fetch Rigid body contacts events.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_AndreaCatania&quot;&gt;@_AndreaCatania&lt;&#x2F;a&gt; published two video tutorials:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=-RTPZPYR5CI&quot;&gt;&amp;quot;Character controller - Amethyst physics tutorial #2&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=7GZc4P_v_DY&quot;&gt;&amp;quot;Physics Batch Dispatcher - Amethyst physics tutorial #3&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;rust-gamedev&#x2F;wg&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;60&quot;&gt;#60 &amp;quot;Ecosystem At Risk: Custom Allocators (and more?) in std&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;61&quot;&gt;#61 &amp;quot;Tracking: Important Issues Filed Elsewhere&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;64&quot;&gt;#64 &amp;quot;Transfer Ownership of AreWeGameYet to Gamedev WG&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev&#x2F;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;24&quot;&gt;#24 &amp;quot;Email Subscription&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;diuqg7&#x2F;need_help_porting_steam_libraries_to_rust&quot;&gt;&#x2F;r&#x2F;rust: &amp;quot;Need help porting steam libraries to rust&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;search?q=user:EmbarkStudios+state:open&quot;&gt;Embark&#x27;s open issues&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;winit&#x27;s &amp;quot;Good first issue&amp;quot; and “help wanted” issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ggez&#x2F;ggez&#x2F;labels&#x2F;%2AGOOD%20FIRST%20ISSUE%2A&quot;&gt;ggez&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;veloren&#x2F;veloren&#x2F;issues?label_name=beginner&quot;&gt;Veloren&#x27;s &amp;quot;beginner&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&quot;&gt;Amethyst&#x27;s &amp;quot;good first issue&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;atdkeg&#x2F;ive_been_making_a_gravity_simulator_using&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-003&#x2F;gravisim.png&quot; alt=&quot;Gravisim screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bcamp1&#x2F;Gravisim&quot;&gt;Gravisim&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bcamp1&quot;&gt;@bcamp1&lt;&#x2F;a&gt;
is a simulation of universal gravitation.
It uses &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Newton%27s_law_of_universal_gravitation&quot;&gt;Newton&#x27;s Law for Universal Gravitation&lt;&#x2F;a&gt;
to run an n-body physics simulation.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;atdkeg&#x2F;ive_been_making_a_gravity_simulator_using&#x2F;&quot;&gt;Check out a video demo in this &#x2F;r&#x2F;rust announcement.&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;!-- TODO: check that the first and the last image&#x2F;gif looks nice:
they may become a preview on different sites --&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.
Feel free to send PRs about your own projects!&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dt3uc9&#x2F;this_month_in_rust_gamedev_3_october_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1192539926161702913&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>This Month in Rust GameDev #2 - September 2019</title>
                <pubDate>Sat, 05 Oct 2019 00:00:00 +0000</pubDate>
                <link>https://rust-gamedev.github.io/posts/newsletter-002/</link>
                <guid>https://rust-gamedev.github.io/posts/newsletter-002/</guid>
                <description>&lt;p&gt;Welcome to the second issue of the Rust GameDev Workgroup’s
monthly newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;game-updates&quot;&gt;Game Updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#game-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;veloren&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;veloren-town.png&quot; alt=&quot;Town surrounded by a wall&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&quot;&gt;Veloren&lt;&#x2F;a&gt; is an open-world, open-source multiplayer voxel RPG.
The game is in an early stage of development, but is playable.&lt;&#x2F;p&gt;
&lt;p&gt;Some of the September&#x27;s improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Improved multi-staged towns generation;&lt;&#x2F;li&gt;
&lt;li&gt;Improved inventory system and character creation;&lt;&#x2F;li&gt;
&lt;li&gt;Massive progress on water, water physics, lakes, and rivers!&lt;&#x2F;li&gt;
&lt;li&gt;New chunks data structure;&lt;&#x2F;li&gt;
&lt;li&gt;Three-dimensional map and minimap;&lt;&#x2F;li&gt;
&lt;li&gt;First-person view;&lt;&#x2F;li&gt;
&lt;li&gt;Bows and arrows;&lt;&#x2F;li&gt;
&lt;li&gt;Performance optimization;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;New video: &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=YyvXXCjpbqQ&quot;&gt;&amp;quot;24 Minutes of Alpha Gameplay&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Full weekly devlogs &amp;quot;This Week In Veloren...&amp;quot;:
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-31&quot;&gt;#31&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-32&quot;&gt;#32&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-33&quot;&gt;#33&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-34&quot;&gt;#34&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-35&quot;&gt;#35&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zemeroth-v0-6&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;ozkriff.games&#x2F;2019-09-21--devlog-zemeroth-v0-6&quot;&gt;Zemeroth v0.6&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#zemeroth-v0-6&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;zemeroth.png&quot; alt=&quot;fighters smash demons in fire and poison clouds&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&quot;&gt;Zemeroth&lt;&#x2F;a&gt; is a minimalistic 2D turn-based tactical game.&lt;&#x2F;p&gt;
&lt;p&gt;This month &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ozkriff&#x2F;zemeroth&#x2F;releases&#x2F;tag&#x2F;v0.6.0&quot;&gt;Zemeroth v0.6&lt;&#x2F;a&gt; was released.
Main features of this release are:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;renown and fighter upgrades,&lt;&#x2F;li&gt;
&lt;li&gt;possessions,&lt;&#x2F;li&gt;
&lt;li&gt;sprite frames and flips,&lt;&#x2F;li&gt;
&lt;li&gt;status effect icons.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Read the &lt;a href=&quot;http:&#x2F;&#x2F;ozkriff.games&#x2F;2019-09-21--devlog-zemeroth-v0-6&quot;&gt;full devlog post&lt;&#x2F;a&gt; or watch &lt;a href=&quot;http:&#x2F;&#x2F;youtu.be&#x2F;6tZByt4LBlU&quot;&gt;the video version&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;twenty-asteroids&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;queue&#x2F;c&#x2F;449652&#x2F;rustlang-games?game_id=477762&quot;&gt;Twenty Asteroids&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#twenty-asteroids&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;queue&#x2F;c&#x2F;449652&#x2F;rustlang-games?game_id=477762&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;asteroids-demo.gif&quot; alt=&quot;space ship destroys enemies and asteroids with plasma beams&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;@VladZhukov0&lt;&#x2F;a&gt; published a few devlogs about their
&lt;a href=&quot;https:&#x2F;&#x2F;itch.io&#x2F;queue&#x2F;c&#x2F;449652&#x2F;rustlang-games?game_id=477762&quot;&gt;&amp;quot;Twenty Asteroids&amp;quot;&lt;&#x2F;a&gt; game:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Devlog #2: &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;gYevCyU5gxU&quot;&gt;Video&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;pum-purum-pum-pum.itch.io&#x2F;asteroids-like-game&#x2F;devlog&#x2F;98842&#x2F;my-asteroids-like-game-devlog-002&quot;&gt;Text&lt;&#x2F;a&gt; versions;&lt;&#x2F;li&gt;
&lt;li&gt;Devlog #3: &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;YSYRKzogbKg&quot;&gt;Video&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;pum-purum-pum-pum.itch.io&#x2F;asteroids-like-game&#x2F;devlog&#x2F;101357&#x2F;new-menu-performance-and-abilities-devlog-3&quot;&gt;Text&lt;&#x2F;a&gt; versions.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Updates include:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;New enemies: a ship with a big pinball-like bullet and a laser-mesh ship;&lt;&#x2F;li&gt;
&lt;li&gt;New upgrades: laser range and bullets reflection;&lt;&#x2F;li&gt;
&lt;li&gt;Explosion size now depends on asteroid&#x27;s size;&lt;&#x2F;li&gt;
&lt;li&gt;Improved main menu, upgrade and death screens;&lt;&#x2F;li&gt;
&lt;li&gt;Better color contrast;&lt;&#x2F;li&gt;
&lt;li&gt;New AI behaviors: follow and circle around;&lt;&#x2F;li&gt;
&lt;li&gt;Debugging performance plots;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;amethyst-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst Games&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&#x2F;releases&#x2F;tag&#x2F;v0.1.3&quot;&gt;Space Shooter v0.1.3&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;@carlosupina&lt;&#x2F;a&gt; introduced a currency system, shop system,
and sound effects: &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=MmdUrZzuGfw&quot;&gt;watch the devlog video&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=MmdUrZzuGfw&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;space-shooter.gif&quot; alt=&quot;shmap gameplay sample&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Noah2610&#x2F;LD44&quot;&gt;&amp;quot;Stabman&amp;quot;, by Noah2610&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;stabman-overworld.png&quot; alt=&quot;Stabman in the beginning of the overworld level&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;mvlabat&quot;&gt;@mvlabat&lt;&#x2F;a&gt; is &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;xJm6cI_XmT4&quot;&gt;working on interpolation in his multiplayer prototype (video)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;a5huynh&quot;&gt;@a5huynh&lt;&#x2F;a&gt; got &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;STWQRTxnhRo&quot;&gt;3D pathing working (video)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;im_azriel&quot;&gt;Azriel Hoh&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2019&#x2F;09&#x2F;27&#x2F;focus&quot;&gt;a major new devblog update titled &amp;quot;Focus!&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;rox_clone_attack.png&quot; alt=&quot;bots attack&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Webshinra&quot;&gt;@webshinra&lt;&#x2F;a&gt; made progress with raycasted FOV in their hexagonal game.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;hex-fov.jpeg&quot; alt=&quot;hexagonal map with two mechs, paths and visually blocked tiles&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;other-game-news&quot;&gt;Other Game News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-game-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;dooskington&quot;&gt;@dooskington&lt;&#x2F;a&gt; published their 5th devlog: &lt;a href=&quot;https:&#x2F;&#x2F;dooskington.com&#x2F;dev-log&#x2F;5&quot;&gt;&amp;quot;Stats And Skills&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;dooskington-devlog-5-screenshot.jpeg&quot; alt=&quot;Stats and skill demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; continues to polish their &amp;quot;&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;games&#x2F;1032170&#x2F;announcements&#x2F;detail&#x2F;1604892840079306082&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;&amp;quot; game;
&lt;a href=&quot;https:&#x2F;&#x2F;steamcommunity.com&#x2F;app&#x2F;1032170&#x2F;allnews&quot;&gt;1.8, 1.9, 1.10 and 1.11 versions were released&lt;&#x2F;a&gt;:
official macOS support, bugfixes, and better translations.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;robo.jpg&quot; alt=&quot;Robo Instructus gameplay screenshot with full UI&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Wraithan&#x2F;status&#x2F;1172982932341805056&quot;&gt;@Wraithan got tower placement working&lt;&#x2F;a&gt;
in their &amp;quot;WraithDefense&amp;quot; tower defence game;
the development process &lt;a href=&quot;https:&#x2F;&#x2F;twitch.tv&#x2F;wraithan&quot;&gt;is streamed on Twitch&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;wraith-def.jpeg&quot; alt=&quot;Towers on the map&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1168556346431692800&quot;&gt;v0.0.1&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1172912164488843265&quot;&gt;v0.0.2&lt;&#x2F;a&gt; updates
for &lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;Tennis Academy&lt;&#x2F;a&gt;:
simplified gameplay flow, areas, cash flow, animations,
players&#x27; state visual cues and more.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;tennis-academy.gif&quot; alt=&quot;Tennis Academy v0.0.2 Demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;epcc.itch.io&#x2F;garden&quot;&gt;Garden&lt;&#x2F;a&gt; game is
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1174259591250661379&quot;&gt;under active development again&lt;&#x2F;a&gt;.
Devlogs &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;logicsoup&#x2F;status&#x2F;1166469607412158464&quot;&gt;are coming soon!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;garden.jpeg&quot; alt=&quot;a screenshot from Garden showing a build and some trees&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nuria.itch.io&#x2F;live-rust&quot;&gt;&amp;quot;Live&amp;quot;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pincfloit&quot;&gt;@pincfloit&lt;&#x2F;a&gt; - a small command-line interface survival game
[&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;pincfloit&#x2F;status&#x2F;1173965160089837568&quot;&gt;twitter&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;codegram&#x2F;live-rust&quot;&gt;github&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nuria.itch.io&#x2F;live-rust&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;live-cli.png&quot; alt=&quot;Live demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&#x2F;status&#x2F;1169106102710988801&quot;&gt;@seratonik shared a GIF with omni-directional shadows&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;seratonik&#x2F;status&#x2F;1169106102710988801&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;shadows.gif&quot; alt=&quot;shadows demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&quot;&gt;@MrVallentin&lt;&#x2F;a&gt; tweeted a bunch of updates about their voxel engine:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1170164060542918656&quot;&gt;falling cubes&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1170515003113451520&quot;&gt;text rendering&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1171773622039515136&quot;&gt;60M cubes generated in the blink of an eye&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1171774889335951361&quot;&gt;remeshing&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1174493952894033920&quot;&gt;retrospective video&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;MrVallentin&#x2F;status&#x2F;1176996637681623042&quot;&gt;saving and loading&lt;&#x2F;a&gt;,
and some more.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;vallentin-voxel-terrain.jpeg&quot; alt=&quot;screenshot of the WIP terrain generation&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Mistodon&quot;&gt;@Mistodon&lt;&#x2F;a&gt; got their entire game &lt;a href=&quot;https:&#x2F;&#x2F;mistodon.itch.io&#x2F;disconnect&quot;&gt;&amp;quot;Disconnect&amp;quot;&lt;&#x2F;a&gt; to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Mistodon&#x2F;status&#x2F;1175361784246603776&quot;&gt;render in the terminal&lt;&#x2F;a&gt;;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;Mistodon&#x2F;status&#x2F;1175361784246603776&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;disconnect-console.png&quot; alt=&quot;Disconnect in the terminal&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;library-tooling-updates&quot;&gt;Library &amp;amp; Tooling updates&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#library-tooling-updates&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;gfx-rs-wgpu-rs-project-update&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2019&#x2F;10&#x2F;01&#x2F;update.html&quot;&gt;gfx-rs &amp;amp; wgpu-rs: Project Update&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-rs-wgpu-rs-project-update&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gfx-rs.github.io&#x2F;2019&#x2F;10&#x2F;01&#x2F;update.html&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;gfx-logo.png&quot; alt=&quot;gfx-rs rusty logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&quot;&gt;gfx-rs&lt;&#x2F;a&gt; is a Rust project aiming to make low-level GPU programming
portable with low overhead.
It’s a single Vulkan-like Rust API with multiple backends that implement it:
Direct3D 12&#x2F;11, Metal, Vulkan, and even OpenGL.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&quot;&gt;wgpu-rs&lt;&#x2F;a&gt; is a Rust project on top of gfx-rs that provides safety,
accessibility, and even stronger portability.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;gfx-rs was slimmed down: “magical” deps (like &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-lang-nursery&#x2F;failure&quot;&gt;failure&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mcarton&#x2F;rust-derivative&quot;&gt;derivative&lt;&#x2F;a&gt;)
were removed and it sped up the fresh gfx-hal build by a factor of 8.5X;
the “typed” layer of gfx-hal got removed.&lt;&#x2F;li&gt;
&lt;li&gt;Backend features were removed from wgpu-rs;&lt;&#x2F;li&gt;
&lt;li&gt;An entirely new &lt;a href=&quot;https:&#x2F;&#x2F;vulkan-tutorial.com&#x2F;Drawing_a_triangle&#x2F;Presentation&#x2F;Swap_chain&quot;&gt;swapchain&lt;&#x2F;a&gt; model was prototyped and implemented.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dbzxw2&#x2F;gfxrs_late_2019_project_update&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mun-and-hot-reloading-experiments&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; and Hot Reloading Experiments&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#mun-and-hot-reloading-experiments&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;mun-logo.png&quot; alt=&quot;Mun text logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;mun-lang.org&quot;&gt;Mun&lt;&#x2F;a&gt; is a scripting language for gamedev
focused on quick iteration times that is written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Mun&#x27;s pillars:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Hot Reloading.
Mun natively supports hot reloading - the process of changing
code and resources while an app is running -
on all target platforms and consoles with marginal runtime overhead.
Its runtime has useful error messages,
and can easily be embedded into other languages.&lt;&#x2F;li&gt;
&lt;li&gt;Static Typing.
Mun&#x27;s type system eliminates an entire class of runtime errors
and provides powerful IDE integration with
auto-completion and refactoring tools allowing developers
to focus on writing code.&lt;&#x2F;li&gt;
&lt;li&gt;Performance.
Mun uses LLVM to compile to machine code that can be natively executed
on any target platform, guaranteeing the best possible runtime performance.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The driving force behind the development of Mun is natively supported
hot reloading for functions and data.
As such, the language and its syntax will keep growing at the rate
in which hot reloading-supported semantics is added.
Currently, the language looks like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;&quot;&gt;
&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; sum = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(a, b);

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Comments: Mun natively supports bool, float, and int
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; is_true = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt; var: float = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;;
}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; The order of function definitions doesn&amp;#39;t matter
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: int, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c0c5ce;&quot;&gt;: int): int {
    a + b
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The source code of the project
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mun-lang&#x2F;mun&quot;&gt;is available on GitHub&lt;&#x2F;a&gt;
under the MIT or Apache licenses.&lt;&#x2F;p&gt;
&lt;p&gt;Mun&#x27;s runtime is implemented in Rust.
Check out &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cywwtv&#x2F;progress_on_hot_reloading_experimentation_in_rust&quot;&gt;a GIF demo of the Rust hot reloading functionality&lt;&#x2F;a&gt;
that shows:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Catching and logging of errors (e.g. type mismatch),&lt;&#x2F;li&gt;
&lt;li&gt;hot reloading of a shared library&#x27;s symbols (used for reflection) and method logic,&lt;&#x2F;li&gt;
&lt;li&gt;runtime invocable methods and type&#x2F;method reflection.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d4wngp&#x2F;released_source_of_hot_reloading_experimentation&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rust-roguelike-toolkit-and-roguelike-tutorial&quot;&gt;Rust &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;Roguelike Toolkit&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;Roguelike Tutorial&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#rust-roguelike-toolkit-and-roguelike-tutorial&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;rltk-rs-example-06.gif&quot; alt=&quot;Minimal pathfinding and FoV example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs&quot;&gt;rltk_rs&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;patreon.com&#x2F;blackfuture&quot;&gt;@herberticus&lt;&#x2F;a&gt; is a Rust implementation of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk&quot;&gt;C++ Roguelike Toolkit&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Roguelike&quot;&gt;what is a &amp;quot;roguelike?&amp;quot;&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;It provides all the basic functionality one needs to write a roguelike game,
as well as mouse support, an embedded resource system, Web Assembly support,
and more.&lt;&#x2F;p&gt;
&lt;p&gt;All &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rltk_rs#examples&quot;&gt;examples&lt;&#x2F;a&gt; are linked to browser WASM to try.&lt;&#x2F;p&gt;
&lt;p&gt;The back-end uses &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;grovesNL&#x2F;glow&quot;&gt;glow&lt;&#x2F;a&gt; to abstract OpenGL between versions.
API for embedding assets directly into your binary.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;d like to see a functional roguelike that uses rltk_rs,
check out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;thebracket&#x2F;rustyroguelike&quot;&gt;Rusty Roguelike&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bfnightly.bracketproductions.com&#x2F;rustbook&quot;&gt;The Roguelike Tutorial&lt;&#x2F;a&gt; includes more than 20 chapters now
and continues to grow.&lt;&#x2F;p&gt;
&lt;p&gt;It covers topics from &amp;quot;hello rust&amp;quot; and &amp;quot;what is an ECS?&amp;quot; to adding monsters,
equipment, nice menus, save&#x2F;load, multiple levels, bloodstains, particle effects,
magic mapping scrolls, and more.&lt;&#x2F;p&gt;
&lt;p&gt;The tutorial has Web Assembly links to all examples
so you can run them in your browser.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;embarkstudios-texture-synthesis&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;texture-synthesis&quot;&gt;EmbarkStudios&#x2F;texture-synthesis&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#embarkstudios-texture-synthesis&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;texture-synthesis.jpg&quot; alt=&quot;Generated textures samples&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;embark.games&quot;&gt;Embark&lt;&#x2F;a&gt; has open-sourced their texture synthesis crate &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;texture-synthesis&quot;&gt;texture-synthesis&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;.
It&#x27;s an example-based non-parametric image generation algorithm
written in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;texture-synthesis&quot;&gt;The repo&lt;&#x2F;a&gt; also includes multiple
code examples along with test images,
and a compiled binary with a command-line interface
can be found under the release tab.&lt;&#x2F;p&gt;
&lt;p&gt;Also, see a great long recorded talk
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;fMbK7PYQux4&quot;&gt;&amp;quot;More Like This, Please! Texture Synthesis and Remixing from a Single Example&amp;quot;&lt;&#x2F;a&gt;
which explains this technique and the background more in-depth.&lt;&#x2F;p&gt;
&lt;p&gt;Full list of stuff that &lt;a href=&quot;https:&#x2F;&#x2F;embark.games&quot;&gt;Embark&lt;&#x2F;a&gt; has released so far:
&lt;a href=&quot;http:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;anastasiaopara&#x2F;status&#x2F;1169594058530066432&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also,&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AriVanider&#x2F;status&#x2F;1171359194336903169&quot;&gt;Embark will be sponsoring RustFest in Barcelona this year.&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;embark.games&#x2F;position&#x2F;software-engineer-new-grad&quot;&gt;Embark started hiring new grads&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AriVanider&#x2F;status&#x2F;1173903615498567680&quot;&gt;twitter&lt;&#x2F;a&gt;].&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;iced-a-renderer-agnostic-gui-library&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&quot;&gt;Iced - a Renderer-Agnostic GUI Library&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#iced-a-renderer-agnostic-gui-library&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced&#x2F;tree&#x2F;e82e96e6&#x2F;examples#tour&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;iced.gif&quot; alt=&quot;All widgets tour demo: radio buttons, sliders, debugging view, etc&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Iced is a renderer-agnostic GUI library focused on simplicity and type-safety.
It was originally born as an attempt at bringing the simplicity of &lt;a href=&quot;https:&#x2F;&#x2F;elm-lang.org&quot;&gt;Elm&lt;&#x2F;a&gt;
and The Elm Architecture into &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;coffee&quot;&gt;Coffee 2D game engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Simple, easy-to-use, renderer-agnostic API;&lt;&#x2F;li&gt;
&lt;li&gt;Responsive, flexbox-based layouting;&lt;&#x2F;li&gt;
&lt;li&gt;Type-safe, reactive programming model;&lt;&#x2F;li&gt;
&lt;li&gt;Lots of built-in widgets and custom widget support.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Check out &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;hecrj&#x2F;iced#overview&quot;&gt;the design overview in the repo&#x27;s README&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;czzjnv&#x2F;iced_a_rendereragnostic_gui_library&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;amethyst-logo.png&quot; alt=&quot;amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&quot;&gt;Amethyst&lt;&#x2F;a&gt; is a game engine and tool-set
for ambitious game developers.
It enables game developers to make complex games without getting
into too much trouble, by means of data-driven design
and the ECS architecture.&lt;&#x2F;p&gt;
&lt;p&gt;Tooling:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;releases&#x2F;tag&#x2F;v0.13.0&quot;&gt;Amethyst Engine v0.13 was released&lt;&#x2F;a&gt;.
A new &lt;code&gt;amethyst_tiles&lt;&#x2F;code&gt; crate was added and
&lt;a href=&quot;https:&#x2F;&#x2F;book.amethyst.rs&#x2F;stable&#x2F;pong-tutorial&#x2F;pong-tutorial-06.html&quot;&gt;the Pong tutorial&lt;&#x2F;a&gt;
is now complete with the addition of an audio section.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;laminar&#x2F;releases&#x2F;tag&#x2F;0.3.1&quot;&gt;Laminar v0.3.1 was released&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_AndreaCatania&quot;&gt;@_AndreaCatania&lt;&#x2F;a&gt; published
an &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=XzSKuY9nv7A&quot;&gt;&amp;quot;Initialize physics world - Amethyst physics tutorial #1&amp;quot;&lt;&#x2F;a&gt;
video.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AmethystEngine&#x2F;status&#x2F;1177720011013709824&quot;&gt;amethyst-imgui v0.5 is out&lt;&#x2F;a&gt;,
supporting a beta-version of the new imgui docking feature.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;amethyst-imgui.gif&quot; alt=&quot;docking widgets demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;classic-turn-based-workflow-how-to&#x2F;1082&#x2F;20&quot;&gt;&amp;quot;How to do a turn-based game with the ECS pattern&amp;quot;&lt;&#x2F;a&gt;
post, by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;webshinra&quot;&gt;@webshinra&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;valkum&quot;&gt;@valkum&lt;&#x2F;a&gt; is
&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=KVpLPInWRWg&quot;&gt;implementing area lights using linearly transformed cosines&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;godot-and-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;Godot&lt;&#x2F;a&gt; and Rust&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#godot-and-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;recall-singularity.jpeg&quot; alt=&quot;Recall Singularity&#x27;s ship base&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;RecallSingular1&quot;&gt;Tom Leys&lt;&#x2F;a&gt; is working on a &amp;quot;The Recall Singularity&amp;quot; game
about designing autonomous factory ships and stations
and this month they published a few posts
about using &lt;a href=&quot;https:&#x2F;&#x2F;godotengine.org&quot;&gt;the Godot engine&lt;&#x2F;a&gt; with Rust:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.usejournal.com&#x2F;how-i-use-rust-and-godot-to-explore-space-806bb810e950&quot;&gt;&amp;quot;How I use Rust and Godot to Explore Space&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;godot&#x2F;comments&#x2F;d5qdoy&#x2F;inspiration_how_i_use_rust_and_godot_to_explore&quot;&gt;&#x2F;r&#x2F;godot&lt;&#x2F;a&gt;];&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;gorgeous-godot-games-in-rust-1867c56045e6&quot;&gt;&amp;quot;Gorgeous Godot games in Rust&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;d75qfz&#x2F;gorgeous_godot_games_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;];&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@recallsingularity&#x2F;a-basic-godot-rust-structure-eb855ba07223&quot;&gt;&amp;quot;A Basic Godot-Rust Structure&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;use-prebuilt-rooms-with-rust-macros-for-more-interesting-procedural-dungeons&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jamesbaum.co.uk&#x2F;blether&#x2F;procedural-generation-prebuilt-rooms-rust-macros&quot;&gt;Use Prebuilt Rooms with Rust Macros for More Interesting Procedural Dungeons&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#use-prebuilt-rooms-with-rust-macros-for-more-interesting-procedural-dungeons&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;proc-dungeons.png&quot; alt=&quot;Top-down view on a generated dungeon&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;whostolemyhat&quot;&gt;@whostolemyhat&lt;&#x2F;a&gt; published the fourth part
of their tutorial series on procedural generation with Rust.
In this tutorial, the room generation is updated so it can pick from a selection
of pre-built room patterns as well as create the standard empty room.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d85i8x&#x2F;make_more_interesting_procedural_dungeons_using&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;other-library-tooling-news&quot;&gt;Other Library &amp;amp; Tooling News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-library-tooling-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;uset&quot;&gt;&lt;strong&gt;uset&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; - an implementation of sets and maps
designed for small and medium number of stored elements
which change quickly - i.e. in a dynamically evolving scene in a video game.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lukebitts&#x2F;blend&quot;&gt;blend&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; - a parser and runtime for &lt;a href=&quot;https:&#x2F;&#x2F;blender.org&quot;&gt;Blender&lt;&#x2F;a&gt;&#x27;s .blend files
that can be used to read (almost) everything inside the file:
from mesh data, materials, cameras and animations to user preferences,
window locations and render settings
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d70lu6&#x2F;blend_a_parser_and_runtime_for_blenders_blend&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Veykril&#x2F;cubism-rs&quot;&gt;cubism-rs&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; (Rust bindings for &lt;a href=&quot;https:&#x2F;&#x2F;www.live2d.com&#x2F;en&#x2F;download&#x2F;cubism-sdk&quot;&gt;Live2D Cubism&lt;&#x2F;a&gt;) got renderer support for &lt;a href=&quot;https:&#x2F;&#x2F;www.piston.rs&quot;&gt;Piston2D&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;live2d-cubism.png&quot; alt=&quot;Live2D Piston demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&#x2F;2019&#x2F;09&#x2F;04&#x2F;Github-actions-CI-rust-SDL2.html&quot;&gt;&amp;quot;Github Actions CI with Rust and SDL2&amp;quot;&lt;&#x2F;a&gt; -
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;_AlexEne_&quot;&gt;Alexandru Ene&lt;&#x2F;a&gt; wrote a post about CI with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;features&#x2F;actions&quot;&gt;github actions&lt;&#x2F;a&gt;
for &lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&#x2F;2019&#x2F;01&#x2F;15&#x2F;After-hours-game-development.html&quot;&gt;their hobby game project&lt;&#x2F;a&gt; that uses Rust and SDL2.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;github_actions_ci.gif&quot; alt=&quot;Github Actions with SDL2 screencast demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&quot;&gt;@phaazon&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance&quot;&gt;luminance&lt;&#x2F;a&gt; 0.33 that
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d0us73&#x2F;announcement_luminance033&quot;&gt;brings geometry instancing support&lt;&#x2F;a&gt;;
also, the third wiki chapter &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;wiki&#x2F;Wavefront-.obj-loader&quot;&gt;&amp;quot;Wavefront .obj loader&amp;quot;&lt;&#x2F;a&gt;
was released.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;suzanne_lit.png&quot; alt=&quot;loaded and lighted Suzanne model&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;spline-editor&quot;&gt;phaazon&#x2F;spline-editor&lt;&#x2F;a&gt; - a simple spline editor
for the &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;splines&quot;&gt;splines crate&lt;&#x2F;a&gt; written using &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance&quot;&gt;luminance&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;splines.png&quot; alt=&quot;complex spline in the editor&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;magistratic&quot;&gt;@magistratic&lt;&#x2F;a&gt; gave a talk on the Doom&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Binary_space_partitioning&quot;&gt;BSP&lt;&#x2F;a&gt; rendering engine using their
Rust implementation as a demonstration at RevolverConf:
recording (in Norwegian) and a WASM demo available
&lt;a href=&quot;https:&#x2F;&#x2F;magnushoff.com&#x2F;blog&#x2F;doom-revolverconf&quot;&gt;here&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;maghoff&#x2F;wad-render&#x2F;tree&#x2F;revolverconf-2019.2&quot;&gt;source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;doom-bsp-wasm.png&quot; alt=&quot;WASM demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cloudhead.io&#x2F;rx&quot;&gt;&lt;strong&gt;rx&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;cloudhead.io&quot;&gt;@cloudhead&lt;&#x2F;a&gt; is a modern pixel editor and animator;
this month, v0.2.0 was released, with new brush modes -
pixel perfect drawing, symmetry and multi-frame drawing -
a new GLFW backend and &lt;code&gt;.gif&lt;&#x2F;code&gt; output.
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;dauizc&#x2F;rx_v020_released_a_modern_pixel_editor&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cloudhead&#x2F;rx&quot;&gt;github&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cloudhead.io&#x2F;rx&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;rx.gif&quot; alt=&quot;rx demo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Pixel art editor &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pickitup247.com&#x2F;xprite.html&quot;&gt;Xprite&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; is now &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rickyhan&#x2F;xprite-editor&quot;&gt;open source under GNU GPL&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d4r0o3&#x2F;pixel_art_editor_xprite_is_now_open_source&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;d3vl65&#x2F;xprite_is_now_open_source&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;xprite-demo.gif&quot; alt=&quot;XPrite drawing demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;minimum&quot;&gt;minimum&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; by (&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt;) is a game development framework that provides
basic tooling and a content authoring workflow;
this month, rendering of draggable shapes in the editor and rotation&#x2F;scaling were added
[&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=BON_RvVFiWY&quot;&gt;YouTube demo&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;minimum.png&quot; alt=&quot;editor with a bunch of shapes&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aclysma&#x2F;imgui-inspect&quot;&gt;imgui-inspect&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; macro-based property editor by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;aclysma&quot;&gt;@aclysma&lt;&#x2F;a&gt;
is a by-product of the above-mentioned &amp;quot;minimum&amp;quot; project.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;imgui-inspect.png&quot; alt=&quot;inspector widget with position, debug draw rect, and physics body sub-widgets&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;kickstarter.com&#x2F;projects&#x2F;dungeonfog&#x2F;project-deios-dungeonfog-mapmaker-suite-for-worldbuilders&quot;&gt;Project Deios&lt;&#x2F;a&gt; decided to implement their core in Rust
and has been looking for a Rust graphics programmer:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;d487dr&#x2F;were_looking_for_a_rust_graphics_programmer&quot;&gt;&#x2F;r&#x2F;rust announcement&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;deios.jpg&quot; alt=&quot;Deios logo ant promo pic&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;!--
The following links block should be split into games and tools blocks,
but I&#x27;m too tired to this atm and it will be rendered correctly anyway.
--&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;36&quot;&gt;#36 &amp;quot;Adoption of Rust over time in existing game codebases&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;48&quot;&gt;#48 &amp;quot;Placement New&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;49&quot;&gt;#49 &amp;quot;Branch prediction hints (i.e. Likely&#x2F;Unlikely)&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;51&quot;&gt;#51 &amp;quot;Using wasm-bindgen for games&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt; including full text notes
or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Links to &quot;good first issue&quot;-labels or direct links to specific tasks --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;Issues tagged as &amp;quot;Good first issue&amp;quot; and “help wanted”&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22Blocking+a+release%22&quot;&gt;Issues tagged as &amp;quot;Blocking a release&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;wgpu-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22&quot;&gt;wgpu&#x27;s &amp;quot;help wanted&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3A%22low+hanging+fruit%22&quot;&gt;luminance&#x27;s &amp;quot;low hanging fruit&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Request from Amethyst:
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AmethystEngine&#x2F;status&#x2F;1169922826033336320&quot;&gt;&amp;quot;The renderer-agnostic GUI library “Iced” by @hecrj looks &lt;em&gt;so&lt;&#x2F;em&gt; good.
If someone wants to make this work with Amethyst please get in touch with us!
(or just do it...)&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sandspiel.club&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-002&#x2F;sandspiel.png&quot; alt=&quot;a scene with sand, water, a tree, flowers, and fire&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sandspiel.club&quot;&gt;Sandspiel&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; is a falling sand game by &lt;a href=&quot;https:&#x2F;&#x2F;maxbittker.com&quot;&gt;@MaxBittker&lt;&#x2F;a&gt;
built in late 2018 using Rust (via WASM), WebGL,
and some JS glueing things together.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sandspiel is a pixel physics simulation sandbox where
you can paint with elements, conduct experiments and build your own world!&lt;&#x2F;p&gt;
&lt;p&gt;Elements include Ice, Water, Sand, Lava, Fire, Oil, Plant, Fungus,
and many more!&lt;&#x2F;p&gt;
&lt;p&gt;The goal was to produce an cellular automata environment that&#x27;s
interesting to play with and supports the sharing and forking
of fun creations with other players.
Ultimately, I want the platform to support editing and uploading
of your own elements via a programmable cellular automata API.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;The history of the game and the development process are documented in a great
&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;maxbittker.com&#x2F;making-sandspiel&quot;&gt;&amp;quot;Making Sandspiel&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt; blog post.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;MaxBittker&#x2F;sandspiel&quot;&gt;The source code is available on GitHub&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The game&#x27;s community is still active: check
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;sandspiel_feed&quot;&gt;@sandspiel_feed feed of uploads&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;a6v0p1&#x2F;sandspiel_a_falling_sand_game_built_in_rustwebgl&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;programming&#x2F;comments&#x2F;a6zxou&#x2F;sandspiel_a_falling_sand_game_built_in_rust&quot;&gt;&#x2F;r&#x2F;programming&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=18696291&quot;&gt;hacker news&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;ddtbpm&#x2F;this_month_in_rust_gamedev_2_september_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1180590459913035776&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>This Month in Rust GameDev #1 - August 2019</title>
                <pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate>
                <link>https://rust-gamedev.github.io/posts/newsletter-001/</link>
                <guid>https://rust-gamedev.github.io/posts/newsletter-001/</guid>
                <description>&lt;p&gt;Welcome to the inaugural issue of the Rust Game Development Workgroup’s
monthly (hopefully!) newsletter.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rust-lang.org&quot;&gt;Rust&lt;&#x2F;a&gt; is a systems language pursuing the trifecta:
safety, concurrency, and speed.
These goals are well-aligned with game development.&lt;&#x2F;p&gt;
&lt;p&gt;We hope to build an inviting ecosystem for anyone wishing
to use Rust in their development process!
Want to get involved? &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;Join the Rust GameDev working group!&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;news-and-blog-posts&quot;&gt;News and Blog Posts&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#news-and-blog-posts&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!--
8-12 important news with their own sections.

Ideal section structure is:
- image&#x2F;GIF,
- a paragraph or two with a summary and useful links,
- and discussion links.

If needed, section can be split into subsections with &quot;------&quot; delimiter.
--&gt;
&lt;h3 id=&quot;survey-from-the-rust-gamedev-working-group-clipboard&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;survey-from-the-rust-game-development-working-group&#x2F;31270&quot;&gt;Survey from the Rust GameDev Working Group&lt;&#x2F;a&gt; 📋&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#survey-from-the-rust-gamedev-working-group-clipboard&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;Interested (maybe already invested?) in using Rust for game development?
Please set aside a brief moment to answer this short survey about
the current state of our GD ecosystem and what the GD working group
can do to nurture it. 🌱&lt;&#x2F;p&gt;
&lt;p&gt;While we&#x27;d greatly appreciate a modicum of identifying information
so we can easily connect with you for further discussions,
sharing that information is optional.
Only 3 questions in this survey are mandatory and we&#x27;ve saved
the most important one for last.&lt;&#x2F;p&gt;
&lt;p&gt;The survey is now being processed for publishing.
We’re still accepting responses until the survey has been published
and subsequently closed for good.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cp2ib7&#x2F;survey_from_the_rust_game_development_working&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1160659441550864384&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, check out our previous post
&lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;2019&#x2F;08&#x2F;18&#x2F;introducing-the-rust-game-development-working-group.html&quot;&gt;&amp;quot;Introducing the Rust Game Development Working Group&amp;quot;&lt;&#x2F;a&gt;
if you haven&#x27;t seen it yet
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cs44vx&#x2F;introducing_the_rust_game_development_working&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1163137574812209152&quot;&gt;twitter&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;h3 id=&quot;this-month-in-rustsim-7-june-july-2019&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.rustsim.org&#x2F;blog&#x2F;2019&#x2F;08&#x2F;01&#x2F;this-month-in-rustsim&quot;&gt;This Month in Rustsim #7 (June − July 2019)&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#this-month-in-rustsim-7-june-july-2019&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;ccd_substeps.svg&quot; alt=&quot;CCD sub-steps&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&quot;&gt;nphysics&lt;&#x2F;a&gt; 0.12 release contains several long awaited features:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The support for linear and non-linear &lt;em&gt;continuous-collision detection (CCD)&lt;&#x2F;em&gt;
with colliders on rigid bodies and sensors.
There&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;www.nphysics.org&#x2F;continuous_collision_detection&quot;&gt;a brand new page of the user guide&lt;&#x2F;a&gt; about it.&lt;&#x2F;li&gt;
&lt;li&gt;Rigid body &lt;em&gt;velocity damping&lt;&#x2F;em&gt;: this allows to artificially
slow down some bodies. This is essential for, e.g.,
top-down 2D games where traditional coulomb friction cannot be used.&lt;&#x2F;li&gt;
&lt;li&gt;Rigid body &lt;em&gt;maximum velocity&lt;&#x2F;em&gt; limit: it is possible to force a rigid body
to never get a velocity higher than a threshold.&lt;&#x2F;li&gt;
&lt;li&gt;The possibility to use &lt;em&gt;custom containers&lt;&#x2F;em&gt; for bodies,
colliders, joints, and force generators.
This helps overcoming some difficulties related to borrowing,
and also help for the integration of nphysics with other solutions.
The physics world structures will no longer own those containers.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;With &lt;a href=&quot;https:&#x2F;&#x2F;ncollide.org&quot;&gt;ncollide&lt;&#x2F;a&gt; 0.20, it is now possible to compute the time of impact
between two shapes undergoing an arbitrary rigid motion.
This is known as non-linear time-of-impact computation.
This is used by the new CCD integration on nphysics 0.12.&lt;&#x2F;p&gt;
&lt;p&gt;Watch &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=EnjgJp9mKz0&quot;&gt;a &amp;quot;CCD support on nphysics 0.12&amp;quot; video&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;nphysics.org&#x2F;demo_all_examples3&quot;&gt;play with the online demo yourself&lt;&#x2F;a&gt;
(choose &amp;quot;CCD&amp;quot; in the &amp;quot;Select example&amp;quot; menu).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cmxdyk&#x2F;this_month_in_rustsim_7_june_july_2019_nphysics&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1160659441550864384&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, check out &lt;a href=&quot;https:&#x2F;&#x2F;www.patreon.com&#x2F;posts&#x2F;about-future-of-28917514&quot;&gt;&amp;quot;About the future of nphysics: a pure rust 2D and 3D real-time physics engine&amp;quot;&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cm2858&#x2F;about_the_future_of_nphysics_a_pure_rust_2d_and&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;h3 id=&quot;way-of-rhea-trailer-and-steam-wishlist-announced&quot;&gt;Way of Rhea &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=VIzqlI-gbAY&quot;&gt;Trailer&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;Steam Wishlist&lt;&#x2F;a&gt; Announced&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#way-of-rhea-trailer-and-steam-wishlist-announced&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=VIzqlI-gbAY&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;way-of-rhea.gif&quot; alt=&quot;Part of the trailer&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;click on the GIF to see &lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=VIzqlI-gbAY&quot;&gt;the full trailer&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;youtube.com&#x2F;watch?v=VIzqlI-gbAY&quot;&gt;A new trailer&lt;&#x2F;a&gt; and the &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1110620&#x2F;Way_of_Rhea&quot;&gt;Steam wishlist&lt;&#x2F;a&gt;
were published for &amp;quot;Way of Rhea&amp;quot; by &lt;a href=&quot;https:&#x2F;&#x2F;anthropicstudios.com&quot;&gt;Anthropic Studios&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Way of Rhea is an upcoming puzzle platformer that takes place in a world
where you can only interact with objects that match your current color.&lt;&#x2F;p&gt;
&lt;p&gt;Take a look at &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;co8kqd&#x2F;way_of_rhea_trailer_steam_wishlist_announced&#x2F;ewryjet&quot;&gt;this Reddit comment&lt;&#x2F;a&gt; with a quick summary
about implementation and tooling.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;co8kqd&#x2F;way_of_rhea_trailer_steam_wishlist_announced&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AnthropicSt&#x2F;status&#x2F;1159867047821611010&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;veloren-0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-27&quot;&gt;Veloren 0.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#veloren-0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;veloren.png&quot; alt=&quot;Veloren screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Veloren is an open-world, open-source multiplayer voxel RPG.
The game is in an early stage of development, but is playable.&lt;&#x2F;p&gt;
&lt;p&gt;The 0.3 version was a long time coming, and there has been a ton added to Veloren.
Here is a small list of the major changes in this version:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;XP and leveling&lt;&#x2F;li&gt;
&lt;li&gt;Better combat, movement, and animations&lt;&#x2F;li&gt;
&lt;li&gt;Enemies, bosses&lt;&#x2F;li&gt;
&lt;li&gt;Better world generation, more biomes&lt;&#x2F;li&gt;
&lt;li&gt;Build mode&lt;&#x2F;li&gt;
&lt;li&gt;Caves, lanterns, lights, dungeons&lt;&#x2F;li&gt;
&lt;li&gt;Character customization, multiple races&lt;&#x2F;li&gt;
&lt;li&gt;Inventories (WIP)&lt;&#x2F;li&gt;
&lt;li&gt;Day&#x2F;night, better shaders, voxel shadows&lt;&#x2F;li&gt;
&lt;li&gt;Many performance optimizations&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;clziyh&#x2F;veloren_03_the_multiplayer_voxel_rpg_written_in&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, if you want to see how the work on 0.4 is going,
check out other August&#x27;s weekly devlog posts:
&amp;quot;This Week in Veloren...&amp;quot;
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-28&quot;&gt;#28&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-29&quot;&gt;#29&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;veloren.net&#x2F;devblog-30&quot;&gt;#30&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ruzzt&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yokljo&#x2F;ruzzt&quot;&gt;RUZZT&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#ruzzt&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;ruzzt.png&quot; alt=&quot;RUZZT screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yokljo&quot;&gt;@yokljo&lt;&#x2F;a&gt; published &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;yokljo&#x2F;ruzzt&quot;&gt;RUZZT&lt;&#x2F;a&gt; - a &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;ZZT&quot;&gt;ZZT&lt;&#x2F;a&gt; game engine clone written in Rust.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;My wife and I wrote this as a fun exercise, and went a lot further with it
than originally anticipated. We wanted to try to replicate the original
game&#x27;s behaviour by simply looking at it running in Dosbox and seeing
if we could make RUZZT do the same thing.
This means the code architecture is likely very different
from the original game.&lt;&#x2F;p&gt;
&lt;p&gt;Eventually we did get far enough that it seemed like a waste of time
to try to guess how some specific things were implemented,
so we used a disassembler to make sure various behaviours worked correctly.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cl9qhk&#x2F;ruzzt_a_zzt_game_engine_clone_written_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oxygengine-navigation-navmesh-pathfinding-system-for-ecs-games&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;oxygengine-navigation&quot;&gt;oxygengine-navigation&lt;&#x2F;a&gt; - Navmesh Pathfinding System for ECS Games&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#oxygengine-navigation-navmesh-pathfinding-system-for-ecs-games&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;oxygengine-navigation-demo.gif&quot; alt=&quot;oxygengine-navigation interactive demo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;oxygengine-navigation&quot;&gt;oxygengine-navigation&lt;&#x2F;a&gt; is a crate to perform pathfinding
on &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Navigation_mesh&quot;&gt;navmeshes&lt;&#x2F;a&gt;.
It&#x27;s an ECS module (compatible with any SPECS engine)
and is a part of a bigger &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;oxygengine&quot;&gt;Oxygen game engine&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;PsichiX&#x2F;Oxygengine&#x2F;tree&#x2F;master&#x2F;demos&#x2F;amethyst-integration&quot;&gt;demo&#x2F;example of the integration with Amethyst&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;co62an&#x2F;navmesh_based_navigation_system_for_ecs_games&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;PsichiX&#x2F;status&#x2F;1159895167392002048&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;amethyst-s-activity-report&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;activity-report-july-2019&quot;&gt;Amethyst&#x27;s Activity Report&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#amethyst-s-activity-report&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;amethyst-logo.png&quot; alt=&quot;amethyst logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst&#x2F;releases&#x2F;tag&#x2F;v0.12.0&quot;&gt;Amethyst v0.12 quietly released&lt;&#x2F;a&gt;
and now the project moves to two-week release cycle.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;2D action platformer &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space-menace&quot;&gt;Space Menace&lt;&#x2F;a&gt; by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;krankur&quot;&gt;@krankur&lt;&#x2F;a&gt; partnered with Amethyst
to become an official showcase project
(&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;space-menace-showcase&quot;&gt;announcement&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;space-menace.png&quot; alt=&quot;Space Menace screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;evoli&quot;&gt;Evoli&lt;&#x2F;a&gt; released &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;evoli&#x2F;releases&#x2F;tag&#x2F;v0.2.0&quot;&gt;v0.2&lt;&#x2F;a&gt;
and &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;evoli-v0-2-video-log-retrospective&#x2F;1007&quot;&gt;moved into 3D&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;evoli-shot.png&quot; alt=&quot;Evlovi screenshot&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;New tools for 2D game development:
&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;tools-for-2d-games&quot;&gt;the Sheep spritesheet packer and Amethyst 2D Starter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Scripting support &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;scripting-what-do-we-need-to-get-there&#x2F;958&quot;&gt;edges closer&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Learning from Legion: &lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;legion-ecs-discussion&#x2F;965&quot;&gt;an ECS design discussion&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;katharostech&#x2F;arsenal&quot;&gt;Arsenal&lt;&#x2F;a&gt; - a Blender game engine
built on Amethyst and Rust (&lt;a href=&quot;https:&#x2F;&#x2F;community.amethyst.rs&#x2F;t&#x2F;arsenal-the-vision-for-a-full-amethyst-blender-integration&#x2F;911&quot;&gt;announcement&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;amethyst-imgui&quot;&gt;amethyst-imgui&lt;&#x2F;a&gt; and
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;laminar&quot;&gt;Laminar&lt;&#x2F;a&gt;
(a semi-reliable UDP-based protocol for multiplayer games) steadily mature.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;rendy&quot;&gt;Rendy&lt;&#x2F;a&gt; (rendering engine) is well
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AmethystEngine&#x2F;status&#x2F;1159765804205957120&quot;&gt;on its way towards web and OpenGL support&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Atelier Editor underwent some &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;atelier-editor&#x2F;issues&#x2F;21&quot;&gt;visual planning&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;coh2hy&#x2F;amethyst_activity_report_july_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;AmethystEngine&#x2F;status&#x2F;1160992752341016576&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;A few days ago a third showcase project
&lt;a href=&quot;https:&#x2F;&#x2F;amethyst.rs&#x2F;posts&#x2F;third-showcase-game-space-shooter&quot;&gt;was announced&lt;&#x2F;a&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;amethyst&#x2F;space_shooter_rs&quot;&gt;&amp;quot;Space Shooter&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&quot;&gt;Carlo Supina&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cwy4qq&#x2F;amethyst_showcase_space_shooter_shootem_up&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;carlosupina&#x2F;status&#x2F;1167094848907808768&quot;&gt;twitter&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;amethyst-space-shooter.gif&quot; alt=&quot;&amp;quot;Space Shooter&amp;quot; gameplay&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;embark-s-rust-open-source-crates-and-ecosystem-tracking&quot;&gt;&lt;a href=&quot;http:&#x2F;&#x2F;embark.rs&quot;&gt;Embark&#x27;s Rust Open-Source Crates and Ecosystem Tracking&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#embark-s-rust-open-source-crates-and-ecosystem-tracking&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;embark-logo-bg.jpg&quot; alt=&quot;Embark logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A quote from the announcement:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;We&#x27;ve put together a tracking page for our Rust open source work,
future ideas&#x2F;plans, and issues that we&#x27;ve run into and want to improve on.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;embark.rs&quot;&gt;embark.rs&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;It is still pretty early, but hope it can be useful or of interest
to see what we, a commercial games company,
is planning and thinking about Rust.&lt;&#x2F;p&gt;
&lt;p&gt;We are also open to collaborate with other companies or individuals,
as well as sponsoring more open source work to improve and support the ecosystem.
Feel free to reach out to us here or on
&lt;a href=&quot;mailto:opensource@embark-studios.com&quot;&gt;opensource@embark-studios.com&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cr73zz&#x2F;embarks_rust_open_source_crates_and_ecosystem&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;repi&#x2F;status&#x2F;1162361431355994112&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Also, Embark has recently open-sourced &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;EmbarkStudios&#x2F;physx-rs&quot;&gt;physx-rs&lt;&#x2F;a&gt; - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NVIDIAGameWorks&#x2F;PhysX&quot;&gt;PhysX&lt;&#x2F;a&gt; bindings to Rust.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;physx-example.png&quot; alt=&quot;&amp;quot;ball&amp;quot; example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Quite complex big C++ project to build &amp;amp; bind to (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;h3r2tic&quot;&gt;@h3r2tic&lt;&#x2F;a&gt; did some magic).
Eventually want full native Rust lib but PhysX is
feature rich &amp;amp; performant today so nice to be able to use it!&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;old.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cqbhif&#x2F;embarkstudiosphysxrs_rust_binding_and_wrapper_for&#x2F;&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;repi&#x2F;status&#x2F;1161645313532280835&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;6-months-of-game-development-in-rust&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;iolivia.me&#x2F;posts&#x2F;6-months-of-rust-game-dev&quot;&gt;6 Months of Game Development in Rust&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#6-months-of-game-development-in-rust&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;iolivia-screenshot.png&quot; alt=&quot;screenshot from Olivia&#x27;s game&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&quot;&gt;@oliviff&lt;&#x2F;a&gt; tells about theirs experience of developing a hobby game
&amp;quot;Tennis Academy&amp;quot; in Rust for six months.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=96qPwvDEAuI&quot;&gt;a YouTube video&lt;&#x2F;a&gt;
with the current state of the game.&lt;&#x2F;p&gt;
&lt;p&gt;Features of the game:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;💵money: every item costs money and the money is substracted
when buying an item&lt;&#x2F;li&gt;
&lt;li&gt;👟tennis courts of all types: hard, clay, concrete and grass&lt;&#x2F;li&gt;
&lt;li&gt;🎁more object types: benches, balls, roof tiles&lt;&#x2F;li&gt;
&lt;li&gt;⏱️time: the game keeps track of how many days&#x2F;months&#x2F;years it&#x27;s been&lt;&#x2F;li&gt;
&lt;li&gt;🌶️main menu&lt;&#x2F;li&gt;
&lt;li&gt;🏠build menu&lt;&#x2F;li&gt;
&lt;li&gt;⛹️player selection menu&lt;&#x2F;li&gt;
&lt;li&gt;↩️assignments: a player can be assigned to a court or a bench&lt;&#x2F;li&gt;
&lt;li&gt;🛣️basic pathfinding: a player can find its way to an assigned
court or bench&lt;&#x2F;li&gt;
&lt;li&gt;📈skill levels: a player playing on a court will get increased
tennis skill level&lt;&#x2F;li&gt;
&lt;li&gt;🛌needs: a player who plays too much will get tired and need rest&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;ctuocb&#x2F;6_months_of_game_development_in_rust&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;oliviff&#x2F;status&#x2F;1164460622186274817&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;gfx-hal-0-3-and-wgpu-0-3&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;wgpu-v0-3-is-released&quot;&gt;gfx-hal 0.3 and wgpu 0.3&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#gfx-hal-0-3-and-wgpu-0-3&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;gfx-mipmap.png&quot; alt=&quot;Mipmap example&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;gfx-hal&lt;&#x2F;code&gt; is a low-overhead Vulkanic GPU API in Rust.
Version 0.3 is published that includes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;MSAA resolves&lt;&#x2F;li&gt;
&lt;li&gt;events API&lt;&#x2F;li&gt;
&lt;li&gt;building Vulkan backend on Apple platforms&lt;&#x2F;li&gt;
&lt;li&gt;&amp;quot;readonly&amp;quot; storage support in DX12 backend&lt;&#x2F;li&gt;
&lt;li&gt;WASM and compute support in GL backend&lt;&#x2F;li&gt;
&lt;li&gt;lots of fixes and improvements in all backends&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cnvfrm&#x2F;gfxhal03_release_notes&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;code&gt;wgpu&lt;&#x2F;code&gt; is a safe, modern and portable GPU API for native platforms and the Web.
It&#x27;s based on gfx-hal and Rendy.
Our implementation and its Rust wrapper &lt;code&gt;wgpu-rs&lt;&#x2F;code&gt; have reached version 0.3.
Major improvements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;API is (mostly) updated to the upstream WebGPU working group spec&lt;&#x2F;li&gt;
&lt;li&gt;internal deadlock protection&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;raw-window-handle&lt;&#x2F;code&gt; support&lt;&#x2F;li&gt;
&lt;li&gt;individual tracking of texture array layers and mipmap levels&lt;&#x2F;li&gt;
&lt;li&gt;more API features:
&lt;ul&gt;
&lt;li&gt;multisampling&lt;&#x2F;li&gt;
&lt;li&gt;indirect draw and dispatch&lt;&#x2F;li&gt;
&lt;li&gt;stencil masks and reference values&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;more examples!&lt;&#x2F;li&gt;
&lt;li&gt;more state validation!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;wgpu-v0-3-is-released&quot;&gt;discourse&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cu09vr&#x2F;release_of_wgpu03&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;luminance-0-31&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;phaazon.net&#x2F;blog&#x2F;luminance-0.31&quot;&gt;luminance 0.31&lt;&#x2F;a&gt;&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#luminance-0-31&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&quot;&gt;luminance&lt;&#x2F;a&gt; is a type-safe, type-level and stateless Rust graphics framework.&lt;&#x2F;p&gt;
&lt;p&gt;luminance v0.31 was released by &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&quot;&gt;@phaazon&lt;&#x2F;a&gt;.
This version brings &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;blob&#x2F;master&#x2F;luminance&#x2F;CHANGELOG.md#031&quot;&gt;LOTS of major changes and bugfixes&lt;&#x2F;a&gt;,
including two new crates:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance-derive&quot;&gt;luminance-derive&lt;&#x2F;a&gt; -
provides several procedural derive macros you can use to easily implement
all required traits to work with luminance.
Especially, some traits that are unsafe can be implemented
in a safe way with that crate.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;luminance-glutin&quot;&gt;luminance-glutin&lt;&#x2F;a&gt; -
the windowing crate support for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;glutin&quot;&gt;glutin&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Also, two ways to learn luminance were added:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;blob&#x2F;master&#x2F;luminance&#x2F;examples&#x2F;README.md&quot;&gt;examples&lt;&#x2F;a&gt;. They are like unit tests:
each introduces and focuses on a very specific aspect or feature.
You should read them if you are interested in given feature.
They’re not well suited to learn from scratch
and they are weaker than a structured tutorial but more concise.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;phaazon&#x2F;luminance-rs&#x2F;wiki&quot;&gt;wiki&lt;&#x2F;a&gt;.
It contains various chapters, including tutorials and onboarding newcomers.
It will not provide you with the best description of a given feature
as it focuses more on the overall comprehension and explaining
than code directly.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;em&gt;Discussions:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cx0syl&#x2F;announcement_luminance031_luminancederive_and&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;phaazon_&#x2F;status&#x2F;1167064285643771910&quot;&gt;twitter&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;other-news&quot;&gt;Other News&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#other-news&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h3&gt;
&lt;!--
Special section for other news (up to 15) in a one-liner format:
- Main link,
- short summary,
- optional discussion links (in square brackets),
- optional small image.
--&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&quot;&gt;Vlad Zhukov&lt;&#x2F;a&gt; shared
&lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;7NojrtICE1k&quot;&gt;theirs first Youtube devlog&lt;&#x2F;a&gt;
about the development of an asteroids-like game
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;VladZhukov0&#x2F;status&#x2F;1162462543530643457&quot;&gt;with Voronoi diagrams for procedural destructions&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;vlad-asteroinds-gameplay.gif&quot; alt=&quot;Gameplay of Vlad&#x27;s prototype&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;&quot;&gt;Azriel&lt;&#x2F;a&gt; published a devlog &lt;a href=&quot;https:&#x2F;&#x2F;azriel.im&#x2F;will&#x2F;2019&#x2F;08&#x2F;16&#x2F;charging-up&quot;&gt;&amp;quot;Charging Up&amp;quot;&lt;&#x2F;a&gt; - characters in &lt;a href=&quot;https:&#x2F;&#x2F;azriel91.itch.io&#x2F;will&quot;&gt;Will&lt;&#x2F;a&gt; can now charge up
by holding the Attack button.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;will-charging.png&quot; alt=&quot;charging sprites from Will&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;droprate&quot;&gt;droprate&lt;&#x2F;a&gt; - a crate for choosing
outcomes based on a weighted probability map,
aka more player-friendly random numbers
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;co3buo&#x2F;ann_droprate_a_crate_for_randomly_choosing_things&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.roboinstruct.us&#x2F;2019&#x2F;08&#x2F;02&#x2F;better-than-your-friends.html&quot;&gt;&amp;quot;Compare Against Your Friends&amp;quot;&lt;&#x2F;a&gt; - after the &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cdw1ct&#x2F;robo_instructus_is_out_now_programming_puzzle&quot;&gt;1.0 release&lt;&#x2F;a&gt;
of &lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;1032170&#x2F;Robo_Instructus&quot;&gt;Robo Instructus&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;bigabgames&quot;&gt;Alex Butler&lt;&#x2F;a&gt; released a few more versions
that fix some bugs, improve performance, scoring and UI.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;roboinstructus.jpg&quot; alt=&quot;RoboInstructus logo from Steam&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;wodannson&quot;&gt;@Remco&lt;&#x2F;a&gt; shared on Twitter
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;wodannson&#x2F;status&#x2F;1157472538622078976&quot;&gt;a video of hot reloading demonstration&lt;&#x2F;a&gt;
[&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cldaew&#x2F;hot_reloading_of_function_bodies_in_rust&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&#x2F;comments&#x2F;cldajt&#x2F;hot_reloading_of_function_bodies_in_rust&#x2F;&quot;&gt;&#x2F;r&#x2F;rust_gamedev&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cloudhead.io&#x2F;rx&quot;&gt;rx&lt;&#x2F;a&gt; - a minimalist and extensible pixel editor in Rust
[&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cv6o4q&#x2F;announcing_rx_minimalist_and_extensible_pixel&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;cloudhead&#x2F;rx&quot;&gt;repo&lt;&#x2F;a&gt;].&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;popular-workgroup-issues-in-github&quot;&gt;Popular Workgroup Issues in Github&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#popular-workgroup-issues-in-github&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 links to interesting issues --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;23&quot;&gt;#23 &amp;quot;[Needed Crate] A pure rust SPIRV generator&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;25&quot;&gt;#25 &amp;quot;The state of math libraries&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;26&quot;&gt;#26 &amp;quot;[Tracker] Better windowing&#x2F;graphics inter-operation&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;42&quot;&gt;#42 &amp;quot;[Discussion] A plan for crate stewardship&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;rust-gamedev.github.io&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;2&quot;&gt;#2 &amp;quot;Newsletter&amp;quot;&lt;&#x2F;a&gt; (so meta!)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;4&quot;&gt;#4 &amp;quot;Create a rust-gamedev.github.io site&amp;quot;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;meeting-minutes&quot;&gt;Meeting Minutes&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#meeting-minutes&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Up to 10 most important notes + a link to the full details --&gt;
&lt;!--
- The workgroup recommends crates to have a minimum supported rust version policy
- winit&#x2F;raw-window-handle
- Web presence (Newsletter, arewegameyet.com)
--&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues?q=label%3Ameeting&quot;&gt;See all meeting issues&lt;&#x2F;a&gt;
including full text notes or &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;join the next meeting&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;requests-for-contribution&quot;&gt;Requests for Contribution&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#requests-for-contribution&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&quot;&gt;winit&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22status%3A+help+wanted%22+label%3A%22Good+first+issue%22&quot;&gt;Issues tagged as &amp;quot;Good first issue&amp;quot; and “help wanted”&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;winit&#x2F;issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3A%22Blocking+a+release%22&quot;&gt;Issues tagged as &amp;quot;Blocking a release&amp;quot;&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gfx-rs&#x2F;gfx&#x2F;issues?q=is%3Aissue+is%3Aopen+label%3Acontributor-friendly&quot;&gt;gfx-rs&#x27;s &amp;quot;contributor-friendly&amp;quot; issues&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bonus&quot;&gt;Bonus&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#bonus&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;!-- Bonus section to make the newsletter more interesting
and highlight events from the past. --&gt;
&lt;p&gt;Just an interesting Rust gamedev link from the past. :)&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;a-snakes-tale-logo.png&quot; alt=&quot;A Snake&#x27;s Tale&#x27;s logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;On 2017.07.06 one of the first commercial Rust games &lt;a href=&quot;https:&#x2F;&#x2F;m12y.com&#x2F;a-snakes-tale&quot;&gt;&amp;quot;A Snake&#x27;s Tale&amp;quot;&lt;&#x2F;a&gt;
by &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;michaelfairley&quot;&gt;Michael Fairley&lt;&#x2F;a&gt; was released:
&lt;a href=&quot;https:&#x2F;&#x2F;store.steampowered.com&#x2F;app&#x2F;654810&#x2F;A_Snakes_Tale&quot;&gt;Steam&lt;&#x2F;a&gt; (Windows&#x2F;Linux&#x2F;macOS),
&lt;a href=&quot;https:&#x2F;&#x2F;m12y.itch.io&#x2F;a-snakes-tale&quot;&gt;itch.io&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;itunes.apple.com&#x2F;us&#x2F;app&#x2F;a-snakes-tale&#x2F;id1211845149?mt=8&amp;amp;at=1001lnX5&quot;&gt;AppStore&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.m12y.asnakestale&quot;&gt;Google Play&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A Snake&#x27;s Tale is a puzzle game about snakes in cramped places.
Clear a path to get to the hole, eat some eggs along the way,
and make sure to press all the buttons.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=23pQmEuueNw&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;posts&#x2F;newsletter-001&#x2F;a-snakes-tail.gif&quot; alt=&quot;Part of A snake&#x27;s Tail&#x27;s trailer&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;^ &lt;em&gt;click on the GIF to see &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=23pQmEuueNw&quot;&gt;the full release trailer&lt;&#x2F;a&gt;&lt;&#x2F;em&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A few posts about the game and how it was developed:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;michaelfairley.com&#x2F;blog&#x2F;i-made-a-game-in-rust&quot;&gt;&amp;quot;I Made a Game in Rust&amp;quot;&lt;&#x2F;a&gt;,&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;michaelfairley.com&#x2F;blog&#x2F;a-snakes-tale-postmortem&quot;&gt;&amp;quot;A Snake&#x27;s Tale Postmortem&amp;quot;&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s all news for today, thanks for reading!&lt;&#x2F;p&gt;
&lt;p&gt;Want something mentioned in the next newsletter?
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&quot;&gt;Send us a pull request&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Also, subscribe to &lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&quot;&gt;@rust_gamedev on Twitter&lt;&#x2F;a&gt;
or &lt;a href=&quot;https:&#x2F;&#x2F;reddit.com&#x2F;r&#x2F;rust_gamedev&quot;&gt;&#x2F;r&#x2F;rust_gamedev subreddit&lt;&#x2F;a&gt; if you want to receive fresh news!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Discussions of this post&lt;&#x2F;strong&gt;:
&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;cyu3zg&#x2F;this_month_in_rust_gamedev_1_august_2019&quot;&gt;&#x2F;r&#x2F;rust&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;twitter.com&#x2F;rust_gamedev&#x2F;status&#x2F;1168614980721266695&quot;&gt;twitter&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Introducing the Rust Game Development Working Group</title>
                <pubDate>Sun, 18 Aug 2019 00:00:00 +0000</pubDate>
                <link>https://rust-gamedev.github.io/posts/introducing-the-rust-game-development-working-group/</link>
                <guid>https://rust-gamedev.github.io/posts/introducing-the-rust-game-development-working-group/</guid>
                <description>&lt;p&gt;Rust&#x27;s combination of low-level control, excellent performance and modern build tools makes it an exciting choice for game developers. The idea of a working group to support this burgeoning community has been proposed &lt;a href=&quot;https:&#x2F;&#x2F;internals.rust-lang.org&#x2F;t&#x2F;a-working-group-for-rust-game-development&#x2F;8240&#x2F;4&quot;&gt;many&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;alexene.dev&#x2F;2018&#x2F;11&#x2F;15&#x2F;Rust-and-game-development.html&quot;&gt;times&lt;&#x2F;a&gt; over the years, and we&#x27;re excited to announce that a group has finally been formed!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;blob&#x2F;master&#x2F;charter.md&quot;&gt;Our charter&lt;&#x2F;a&gt; sets out two primary goals:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;To improve the experience of people using Rust for game development. We want game developers to have a representation in the Rust project. We are a bridge between them and the Rust dev team.&lt;&#x2F;li&gt;
&lt;li&gt;To share knowledge and make game engine development more accessible for people that are not engine developers. We know it can be a large and intimidating field when you&#x27;re just starting out.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;what-have-we-been-up-to&quot;&gt;What have we been up to?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-have-we-been-up-to&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;While the working group is still in its infancy, we&#x27;ve already got several projects underway:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The biggest success so far has been the creation of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-windowing&#x2F;raw-window-handle&quot;&gt;&lt;code&gt;raw-window-handle&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;, a library that provides a common interface that windowing libraries (such as &lt;code&gt;winit&lt;&#x2F;code&gt;) can use to talk to graphics libraries (such as &lt;code&gt;gfx-hal&lt;&#x2F;code&gt;). &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;26&quot;&gt;Work is currently ongoing&lt;&#x2F;a&gt; to integrate this into various libraries, and once this is complete, it should be a big step towards making the ecosystem more decoupled.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&#x2F;issues&#x2F;23&quot;&gt;Discussions on how a pure Rust SPIR-V generator could be implemented&lt;&#x2F;a&gt; are currently ongoing, with the aim of reducing our reliance on &lt;code&gt;shaderc&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;We&#x27;re running a &lt;a href=&quot;https:&#x2F;&#x2F;users.rust-lang.org&#x2F;t&#x2F;survey-from-the-rust-game-development-working-group&#x2F;31270&quot;&gt;survey&lt;&#x2F;a&gt;, to help us understand the ecosystem better and to figure out how we can best serve its needs. If you&#x27;re currently using Rust for game development, or even if you just have an interest in the idea of it, please give us your thoughts!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;how-can-i-get-involved&quot;&gt;How can I get involved?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#how-can-i-get-involved&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;Our main hub for co-ordination is our &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg&quot;&gt;Github repository&lt;&#x2F;a&gt;, where you can (and should!) raise issues calling out your ideas, proposals or problems with the Rust gamedev ecosystem. We also have a &lt;code&gt;#wg-gamedev&lt;&#x2F;code&gt; channel on the &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;j6QJsMd&quot;&gt;official Rust Discord server&lt;&#x2F;a&gt;, and get together for &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;wg#join-the-fun&quot;&gt;meetings on Google Hangouts every other Wednesday&lt;&#x2F;a&gt;. Come and join us!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-s-next&quot;&gt;What&#x27;s next?&amp;nbsp;&lt;a class=&quot;anchor&quot; href=&quot;#what-s-next&quot; aria-hidden=&quot;true&quot;&gt;#&lt;&#x2F;a&gt;
&lt;&#x2F;h2&gt;
&lt;p&gt;We&#x27;re currently &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rust-gamedev&#x2F;rust-gamedev.github.io&#x2F;issues&#x2F;2&quot;&gt;putting together&lt;&#x2F;a&gt; the first installment of a Rust game development newsletter - if you&#x27;d like to be notified when this goes live, please subscribe to our &lt;a href=&quot;https:&#x2F;&#x2F;rust-gamedev.github.io&#x2F;feed.xml&quot;&gt;RSS feed&lt;&#x2F;a&gt;, or join us on &lt;a href=&quot;https:&#x2F;&#x2F;discord.gg&#x2F;j6QJsMd&quot;&gt;Discord&lt;&#x2F;a&gt;!&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>
